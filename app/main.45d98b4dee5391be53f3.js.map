{"version":3,"file":"app/main.45d98b4dee5391be53f3.js","mappings":"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,KAHxB,CAAsC,sCAInB,EAAA1P,WAAA,KAJnB,CAAsC,qCAKpB,EAAA8P,YAAA,MAEpB,yCACF,uCACF,qCACF,mCACA,wFACA,wFACA,wFACA,wFACA,mB,+BA9DQ,8CAAqB,mBAArB,CAAqB,gBAcnB,gGACsB,6EACL,8CAYf,mEAAqC,oBAArC,CAAqC,+BASpC,+CAMsB,gD,yQC9CnC,iBAEA,WACA,WACA,WACA,WAEA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,Y,YAEME,I,SAAiB,CACrB,CACE3qF,KAAM,GACN1pB,UAAW,EAAA++F,wBACXlsF,SAAU,CACR,CAAE6W,KAAM,GAAI4qF,UAAW,OAAQt0G,UAAW,EAAA3pB,eAAgByiB,YAAa,CAAC,EAAAe,qBACxE,CAAE6vB,KAAM,MAAO1pB,UAAW,EAAAjQ,mBAAoB+I,YAAa,CAAC,EAAAe,qBAC5D,CACE6vB,KAAM,WACN1pB,UAAW,EAAAviB,kBACXqb,YAAa,CAAC,EAAAe,oBACd52B,KAAM,CAAEsxI,QAAS,kBAEnB,CACE7qF,KAAM,MACN1pB,UAAW,EAAAxT,aACXsM,YAAa,CAAC,EAAAe,oBACd52B,KAAM,CAAEsxI,QAAS,2BAEnB,CACE7qF,KAAM,eACN1pB,UAAW,EAAAnY,qBACX5kB,KAAM,CAAEsxI,QAAS,sBAEnB,CACE7qF,KAAM,OACN1pB,UAAW,EAAAs0F,cACXx7F,YAAa,CAAC,EAAAe,oBACd52B,KAAM,CAAEsxI,QAAS,iBAEnB,CACE7qF,KAAM,OACN1pB,UAAW,EAAA1tB,cACXwmB,YAAa,CAAC,EAAAgB,mBA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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/./jslib/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/avatar.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/export-scope-callout.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/export-scope-callout.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/export.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/groupings.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/password-generator.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/verify-master-password.component.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/components/verify-master-password.component.html","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/blur-click.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/auth-guard.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/lock-guard.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/unauth-guard.service.ts","webpack://@bitwarden/web-vault/./jslib/angular/src/services/validation.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/folder.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/import.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/organization.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/policy.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/sync.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/userVerification.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/importOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/permissions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/./jslib/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/ascendoCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/avastCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/avastJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/aviraCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/baseImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/bitwardenCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/bitwardenJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/bitwardenPasswordProtectedImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/blackBerryCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/blurCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/buttercupCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/chromeCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/clipperzHtmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/codebookCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/dashlaneImporters/dashlaneCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/dashlaneImporters/dashlaneJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/encryptrCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/enpassCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/enpassJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/firefoxCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/fsecureFskImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/gnomeJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/importError.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/kasperskyTxtImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keepass2XmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keepassxCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/keeperImporters/keeperCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/lastpassCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/logMeOnceCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/meldiumCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/msecureCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/mykiCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/nordpassCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/cipherImportContext.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepassword1PifImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepassword1PuxImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepasswordCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepasswordMacCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/onepasswordWinCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/onepasswordImporters/types/onepassword1PuxImporterTypes.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/padlockCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passkeepCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passmanJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passpackCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordAgentCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordBossJsonImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordDragonXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordSafeXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/passwordWalletTxtImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/rememBearCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/roboformCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/safariCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/safeInCloudXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/saferpassCsvImport.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/secureSafeCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/splashIdCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/stickyPasswordXmlImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/truekeyCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/upmCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/yotiCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/importers/zohoVaultCsvImporter.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/tldjs.noop.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/./jslib/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/cardApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/fieldApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/identityApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/loginApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/attachmentData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/cardData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/cipherData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/collectionData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/eventData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/fieldData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/folderData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/identityData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/loginData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/loginUriData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/organizationData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/policyData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/providerData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/sendData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/sendFileData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/data/sendTextData.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/authResult.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/domainBase.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/encString.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/globalState.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/importResult.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/logInCredentials.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/loginUri.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/secureNote.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sendFile.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sendText.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/treeNode.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/domain/windowState.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/card.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/cipher.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/cipherWithIds.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/collection.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/collectionWithId.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/event.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/field.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/folder.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/folderWithId.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/identity.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/login.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/loginUri.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/export/secureNote.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/bitPayInvoiceRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/collectionRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/deleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emailTokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessInviteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/eventRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/folderRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/folderWithIdRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/groupRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/identityToken/apiTokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/identityToken/tokenRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/importCiphersRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/importOrganizationCiphersRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/kdfRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/keysRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/kvpRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationCreateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationKeysRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUpgradeRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserBulkRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserInviteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/organizationUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/passwordHintRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/passwordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/paymentRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/policyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/referenceEventRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/registerRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/sendRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/sendWithIdRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/setPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/storageRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/taxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/twoFactorProviderRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/twoFactorRecoveryRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateDomainsRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateKeyRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateProfileRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/verifyBankRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/request/verifyEmailRequest.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/baseResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/billingResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/errorResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/eventResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/folderResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/groupResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/keysResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/listResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/notificationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/planResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/policyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/profileResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/sendResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/syncResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/attachmentView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/cardView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/cipherView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/collectionView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/eventView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/fieldView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/folderView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/identityView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/itemView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/loginUriView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/loginView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendFileView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendTextView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/models/view/sendView.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/folder.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/import.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/organization.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/policy.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/sync.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/userVerification.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/./jslib/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/./src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/./src/app/app.module.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/components/password-strength.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-strength.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/main.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-billing.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/export.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/export.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/import.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/import.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/groupings.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/groupings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/services/event.service.ts","webpack://@bitwarden/web-vault/./src/app/services/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/services/organization-guard.service.ts","webpack://@bitwarden/web-vault/./src/app/services/organization-type-guard.service.ts","webpack://@bitwarden/web-vault/./src/app/services/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/services/router.service.ts","webpack://@bitwarden/web-vault/./src/app/services/services.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/settings/options.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/options.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organizations.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organizations.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-billing.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/tools/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/tools/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/export.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/import.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/groupings.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/./src/models/account.ts","webpack://@bitwarden/web-vault/./src/models/globalState.ts","webpack://@bitwarden/web-vault/./src/services/broadcasterMessaging.service.ts","webpack://@bitwarden/web-vault/./src/services/htmlStorage.service.ts","webpack://@bitwarden/web-vault/./src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/./src/services/state.service.ts","webpack://@bitwarden/web-vault/./src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/./src/services/webPlatformUtils.service.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SecureNoteType } from \"jslib-common/enums/secureNoteType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CardView } from \"jslib-common/models/view/cardView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { IdentityView } from \"jslib-common/models/view/identityView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\nimport { SecureNoteView } from \"jslib-common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders: FolderView[];\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders = await this.folderService.getAllDecrypted();\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (\n      this.cipher.login != null &&\n      this.cipher.login.password != null &&\n      this.cipher.login.password.length\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-avatar\",\n  template:\n    '<img *ngIf=\"src\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n    \"[ngClass]=\\\"{'rounded-circle': circle}\\\">\",\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n  @Input() data: string;\n  @Input() email: string;\n  @Input() size = 45;\n  @Input() charCount = 2;\n  @Input() textColor = \"#ffffff\";\n  @Input() fontSize = 20;\n  @Input() fontWeight = 300;\n  @Input() dynamic = false;\n  @Input() circle = false;\n\n  src: string;\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dynamic) {\n      this.generate();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.dynamic) {\n      this.generate();\n    }\n  }\n\n  private async generate() {\n    const enableGravatars = await this.stateService.getEnableGravitars();\n    if (enableGravatars && this.email != null) {\n      const hashBytes = await this.cryptoFunctionService.hash(\n        this.email.toLowerCase().trim(),\n        \"md5\"\n      );\n      const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n      this.src = \"https://www.gravatar.com/avatar/\" + hash + \"?s=\" + this.size + \"&r=pg&d=retro\";\n    } else {\n      let chars: string = null;\n      const upperData = this.data.toUpperCase();\n\n      if (this.charCount > 1) {\n        chars = this.getFirstLetters(upperData, this.charCount);\n      }\n      if (chars == null) {\n        chars = this.unicodeSafeSubstring(upperData, this.charCount);\n      }\n\n      // If the chars contain an emoji, only show it.\n      if (chars.match(Utils.regexpEmojiPresentation)) {\n        chars = chars.match(Utils.regexpEmojiPresentation)[0];\n      }\n\n      const charObj = this.getCharText(chars);\n      const color = this.stringToColor(upperData);\n      const svg = this.getSvg(this.size, color);\n      svg.appendChild(charObj);\n      const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n      const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n      this.src = \"data:image/svg+xml;base64,\" + svgHtml;\n    }\n  }\n\n  private stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private getSvg(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private getCharText(character: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", this.textColor);\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.fontWeight.toString();\n    textTag.style.fontSize = this.fontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"jslib-common/misc/captcha_iframe\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    this.ciphers = [];\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.organizationService.hasOrganizations())) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: (await this.organizationService.get(this.organizationId)).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<any> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.platformUtilsService.saveFile(this.win, csv, { type: \"text/plain\" }, fileName);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderService.saveWithServer(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class GroupingsComponent {\n  @Input() showFolders = true;\n  @Input() showCollections = true;\n  @Input() showFavorites = true;\n  @Input() showTrash = true;\n\n  @Output() onAllClicked = new EventEmitter();\n  @Output() onFavoritesClicked = new EventEmitter();\n  @Output() onTrashClicked = new EventEmitter();\n  @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n  @Output() onFolderClicked = new EventEmitter<FolderView>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n  @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  selectedAll = false;\n  selectedFavorites = false;\n  selectedTrash = false;\n  selectedType: CipherType = null;\n  selectedFolder = false;\n  selectedFolderId: string = null;\n  selectedCollectionId: string = null;\n\n  private collapsedGroupings: Set<string>;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected folderService: FolderService,\n    protected stateService: StateService\n  ) {}\n\n  async load(setLoaded = true) {\n    const collapsedGroupings = await this.stateService.getCollapsedGroupings();\n    if (collapsedGroupings == null) {\n      this.collapsedGroupings = new Set<string>();\n    } else {\n      this.collapsedGroupings = new Set(collapsedGroupings);\n    }\n\n    await this.loadFolders();\n    await this.loadCollections();\n\n    if (setLoaded) {\n      this.loaded = true;\n    }\n  }\n\n  async loadCollections(organizationId?: string) {\n    if (!this.showCollections) {\n      return;\n    }\n    const collections = await this.collectionService.getAllDecrypted();\n    if (organizationId != null) {\n      this.collections = collections.filter((c) => c.organizationId === organizationId);\n    } else {\n      this.collections = collections;\n    }\n    this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n  }\n\n  async loadFolders() {\n    if (!this.showFolders) {\n      return;\n    }\n    this.folders = await this.folderService.getAllDecrypted();\n    this.nestedFolders = await this.folderService.getAllNested();\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.onAllClicked.emit();\n  }\n\n  selectFavorites() {\n    this.clearSelections();\n    this.selectedFavorites = true;\n    this.onFavoritesClicked.emit();\n  }\n\n  selectTrash() {\n    this.clearSelections();\n    this.selectedTrash = true;\n    this.onTrashClicked.emit();\n  }\n\n  selectType(type: CipherType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.onCipherTypeClicked.emit(type);\n  }\n\n  selectFolder(folder: FolderView) {\n    this.clearSelections();\n    this.selectedFolder = true;\n    this.selectedFolderId = folder.id;\n    this.onFolderClicked.emit(folder);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.clearSelections();\n    this.selectedCollectionId = collection.id;\n    this.onCollectionClicked.emit(collection);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedFavorites = false;\n    this.selectedTrash = false;\n    this.selectedType = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n    this.selectedCollectionId = null;\n  }\n\n  async collapse(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    if (grouping.id == null) {\n      return;\n    }\n    const id = idPrefix + grouping.id;\n    if (this.isCollapsed(grouping, idPrefix)) {\n      this.collapsedGroupings.delete(id);\n    } else {\n      this.collapsedGroupings.add(id);\n    }\n    await this.stateService.setCollapsedGroupings(Array.from(this.collapsedGroupings));\n  }\n\n  isCollapsed(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    return this.collapsedGroupings.has(idPrefix + grouping.id);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"jslib-common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"jslib-common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordGeneratorPolicyOptions } from \"jslib-common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class PasswordGeneratorComponent implements OnInit {\n  @Input() showSelect = false;\n  @Output() onSelected = new EventEmitter<string>();\n\n  passTypeOptions: any[];\n  options: any = {};\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n\n  async ngOnInit() {\n    const optionsResponse = await this.passwordGenerationService.getOptions();\n    this.options = optionsResponse[0];\n    this.enforcedPolicyOptions = optionsResponse[1];\n    this.avoidAmbiguous = !this.options.ambiguous;\n    this.options.type = this.options.type === \"passphrase\" ? \"passphrase\" : \"password\";\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderChanged() {\n    this.saveOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizeOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n  }\n\n  async saveOptions(regenerate = true) {\n    this.normalizeOptions();\n    await this.passwordGenerationService.saveOptions(this.options);\n\n    if (regenerate) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  copy() {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.password);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  private normalizeOptions() {\n    // Application level normalize options depedent on class variables\n    this.options.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.options.uppercase &&\n      !this.options.lowercase &&\n      !this.options.number &&\n      !this.options.special\n    ) {\n      this.options.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"jslib-common/models/request/registerRequest\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  name = \"\";\n  email = \"\";\n  masterPassword = \"\";\n  confirmMasterPassword = \"\";\n  hint = \"\";\n  showPassword = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = false;\n  acceptPolicies = false;\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = false;\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit() {\n    if (typeof crypto.subtle === 'undefined') {\n      this.platformUtilsService.showToast(\n        \"error\",\n        \"This browser requires HTTPS to use the web vault\",\n        \"Check the Vaultwarden wiki for details on how to enable it\"\n      );\n      return;\n    }\n\n    if (!this.acceptPolicies && this.showTerms) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesError\")\n      );\n      return;\n    }\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return;\n    }\n    if (this.masterPassword !== this.confirmMasterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    if (this.hint === this.masterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"hintEqualsPassword\")\n      );\n      return;\n    }\n\n    this.name = this.name === \"\" ? null : this.name;\n    this.email = this.email.trim().toLowerCase();\n    const kdf = KdfType.PBKDF2_SHA256;\n    const useLowerKdf = this.platformUtilsService.isIE();\n    const kdfIterations = useLowerKdf ? 10000 : 100000;\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      this.email,\n      this.name,\n      hashedPassword,\n      this.hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { EncArrayBuffer } from \"jslib-common/models/domain/encArrayBuffer\";\nimport { Send } from \"jslib-common/models/domain/send\";\nimport { SendFileView } from \"jslib-common/models/view/sendFileView\";\nimport { SendTextView } from \"jslib-common/models/view/sendTextView\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"jslib-common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = KdfType.PBKDF2_SHA256;\n    const useLowerKdf = this.platformUtilsService.isIE();\n    this.kdfIterations = useLowerKdf ? 10000 : 100000;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  static CUSTOM_VALUE = -100;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    this.initiateSsoFormPromise = this.preValidate();\n    if (await this.initiateSsoFormPromise) {\n      const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n      this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n    }\n  }\n\n  async preValidate(): Promise<boolean> {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return false;\n    }\n    return await this.apiService.preValidateSso(this.identifier);\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n      if (e.message === \"Unable to reach key connector\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorUnavailable\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"jslib-common/misc/webauthn_iframe\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"jslib-common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      {\n        provider: this.selectedProviderType,\n        token: this.token,\n        remember: this.remember,\n      },\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { PasswordRequest } from \"jslib-common/models/request/passwordRequest\";\nimport { Verification } from \"jslib-common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    await this.stateService.setLoginRedirect(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"jslib-common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-verify-master-password\",\n  templateUrl: \"verify-master-password.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VerifyMasterPasswordComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class VerifyMasterPasswordComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if (\n          (e instanceof ErrorResponse || e.constructor.name === ErrorResponse.name) &&\n          (e as ErrorResponse).captchaRequired\n        ) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (!isAuthed) {\n      this.messagingService.send(\"authBlocked\");\n      return false;\n    }\n\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      this.router.navigate([\"lock\"], { queryParams: { promptBiometric: true } });\n      return false;\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      this.router.navigate([\"/remove-password\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"jslib-common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { Account } from \"jslib-common/models/domain/account\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateService } from \"jslib-common/services/state.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { AuthGuardService } from \"./auth-guard.service\";\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\nimport { ValidationService } from \"./validation.service\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    { provide: \"WINDOW\", useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    ValidationService,\n    AuthGuardService,\n    UnauthGuardService,\n    LockGuardService,\n    ModalService,\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [StorageServiceAbstraction],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useFactory: (\n        tokenService: TokenServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction\n      ) =>\n        new ApiService(\n          tokenService,\n          platformUtilsService,\n          environmentService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useFactory: (\n        apiService: ApiServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        cipherService: CipherServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        sendService: SendServiceAbstraction,\n        logService: LogService,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction,\n        organizationService: OrganizationServiceAbstraction,\n        providerService: ProviderServiceAbstraction\n      ) =>\n        new SyncService(\n          apiService,\n          settingsService,\n          folderService,\n          cipherService,\n          cryptoService,\n          collectionService,\n          messagingService,\n          policyService,\n          sendService,\n          logService,\n          keyConnectorService,\n          stateService,\n          organizationService,\n          providerService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useFactory: (\n        cipherService: CipherServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        searchService: SearchServiceAbstraction,\n        tokenService: TokenServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction\n      ) =>\n        new VaultTimeoutService(\n          cipherService,\n          folderService,\n          collectionService,\n          cryptoService,\n          platformUtilsService,\n          messagingService,\n          searchService,\n          tokenService,\n          policyService,\n          keyConnectorService,\n          stateService,\n          null,\n          async (userId?: string) =>\n            messagingService.send(\"logout\", { expired: false, userId: userId })\n        ),\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction,\n        logService: LogService,\n        stateMigrationService: StateMigrationServiceAbstraction\n      ) =>\n        new StateService(\n          storageService,\n          secureStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [\n        StorageServiceAbstraction,\n        \"SECURE_STORAGE\",\n        LogService,\n        StateMigrationServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction\n      ) =>\n        new StateMigrationService(\n          storageService,\n          secureStorageService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [StorageServiceAbstraction, \"SECURE_STORAGE\"],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useFactory: (\n        syncService: SyncServiceAbstraction,\n        appIdService: AppIdServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        vaultTimeoutService: VaultTimeoutServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new NotificationsService(\n          syncService,\n          appIdService,\n          apiService,\n          vaultTimeoutService,\n          environmentService,\n          async () => messagingService.send(\"logout\", { expired: true }),\n          logService,\n          stateService\n        ),\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [\"WINDOW\", PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    if (await this.vaultTimeoutService.isLocked()) {\n      return true;\n    }\n\n    const redirectUrl = (await this.stateService.getIsAuthenticated())\n      ? [this.homepage]\n      : [this.loginpage];\n\n    this.router.navigate(redirectUrl);\n    return false;\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (isAuthed) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      if (locked) {\n        this.router.navigate([\"lock\"]);\n      } else {\n        this.router.navigate([this.homepage]);\n      }\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserBilling: () => Promise<BillingResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getFolder: (id: string) => Promise<FolderResponse>;\n  postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n  putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n  deleteFolder: (id: string) => Promise<any>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<boolean>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequest\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport abstract class FolderService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAll: () => Promise<Folder[]>;\n  getAllDecrypted: () => Promise<FolderView[]>;\n  getAllNested: () => Promise<TreeNode<FolderView>[]>;\n  getNested: (id: string) => Promise<TreeNode<FolderView>>;\n  saveWithServer: (folder: Folder) => Promise<any>;\n  upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n}\n","export abstract class I18nService {\n  locale: string;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { ImportOption, ImportType } from \"../enums/importOptions\";\nimport { ImportError } from \"../importers/importError\";\nimport { Importer } from \"../importers/importer\";\n\nexport abstract class ImportService {\n  featuredImportOptions: readonly ImportOption[];\n  regularImportOptions: readonly ImportOption[];\n  getImportOptions: () => ImportOption[];\n  import: (\n    importer: Importer,\n    fileContents: string,\n    organizationId?: string\n  ) => Promise<ImportError>;\n  getImporter: (\n    format: ImportType | \"bitwardenpasswordprotected\",\n    organizationId: string,\n    password?: string\n  ) => Importer;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { ThemeType } from \"../enums/themeType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isIE: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n  onDefaultSystemThemeChange: (\n    callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown\n  ) => unknown;\n  getEffectiveTheme: () => Promise<ThemeType>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedFolders: (options?: StorageOptions) => Promise<FolderView[]>;\n  setDecryptedFolders: (value: FolderView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getLoginRedirect: (options?: StorageOptions) => Promise<any>;\n  setLoginRedirect: (value: any, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class StorageService {\n  get: <T>(key: string, options?: StorageOptions) => Promise<T>;\n  has: (key: string, options?: StorageOptions) => Promise<boolean>;\n  save: (key: string, obj: any, options?: StorageOptions) => Promise<any>;\n  remove: (key: string, options?: StorageOptions) => Promise<any>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getPremium: () => Promise<boolean>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n  isAutoCopyEnabled: () => Promise<boolean>;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class VaultTimeoutService {\n  isLocked: (userId?: string) => Promise<boolean>;\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","export interface ImportOption {\n  id: string;\n  name: string;\n}\n\nexport const featuredImportOptions = [\n  { id: \"bitwardenjson\", name: \"Bitwarden (json)\" },\n  { id: \"bitwardencsv\", name: \"Bitwarden (csv)\" },\n  { id: \"chromecsv\", name: \"Chrome (csv)\" },\n  { id: \"dashlanecsv\", name: \"Dashlane (csv)\" },\n  { id: \"firefoxcsv\", name: \"Firefox (csv)\" },\n  { id: \"keepass2xml\", name: \"KeePass 2 (xml)\" },\n  { id: \"lastpasscsv\", name: \"LastPass (csv)\" },\n  { id: \"safaricsv\", name: \"Safari and macOS (csv)\" },\n  { id: \"1password1pux\", name: \"1Password (1pux)\" },\n] as const;\n\nexport const regularImportOptions = [\n  { id: \"keepassxcsv\", name: \"KeePassX (csv)\" },\n  { id: \"1password1pif\", name: \"1Password (1pif)\" },\n  { id: \"1passwordwincsv\", name: \"1Password 6 and 7 Windows (csv)\" },\n  { id: \"1passwordmaccsv\", name: \"1Password 6 and 7 Mac (csv)\" },\n  { id: \"dashlanejson\", name: \"Dashlane (json)\" },\n  { id: \"roboformcsv\", name: \"RoboForm (csv)\" },\n  { id: \"keepercsv\", name: \"Keeper (csv)\" },\n  // Temporarily remove this option for the Feb release\n  // { id: \"keeperjson\", name: \"Keeper (json)\" },\n  { id: \"enpasscsv\", name: \"Enpass (csv)\" },\n  { id: \"enpassjson\", name: \"Enpass (json)\" },\n  { id: \"safeincloudxml\", name: \"SafeInCloud (xml)\" },\n  { id: \"pwsafexml\", name: \"Password Safe (xml)\" },\n  { id: \"stickypasswordxml\", name: \"Sticky Password (xml)\" },\n  { id: \"msecurecsv\", name: \"mSecure (csv)\" },\n  { id: \"truekeycsv\", name: \"True Key (csv)\" },\n  { id: \"passwordbossjson\", name: \"Password Boss (json)\" },\n  { id: \"zohovaultcsv\", name: \"Zoho Vault (csv)\" },\n  { id: \"splashidcsv\", name: \"SplashID (csv)\" },\n  { id: \"passworddragonxml\", name: \"Password Dragon (xml)\" },\n  { id: \"padlockcsv\", name: \"Padlock (csv)\" },\n  { id: \"passboltcsv\", name: \"Passbolt (csv)\" },\n  { id: \"clipperzhtml\", name: \"Clipperz (html)\" },\n  { id: \"aviracsv\", name: \"Avira (csv)\" },\n  { id: \"saferpasscsv\", name: \"SaferPass (csv)\" },\n  { id: \"upmcsv\", name: \"Universal Password Manager (csv)\" },\n  { id: \"ascendocsv\", name: \"Ascendo DataVault (csv)\" },\n  { id: \"meldiumcsv\", name: \"Meldium (csv)\" },\n  { id: \"passkeepcsv\", name: \"PassKeep (csv)\" },\n  { id: \"operacsv\", name: \"Opera (csv)\" },\n  { id: \"vivaldicsv\", name: \"Vivaldi (csv)\" },\n  { id: \"gnomejson\", name: \"GNOME Passwords and Keys/Seahorse (json)\" },\n  { id: \"blurcsv\", name: \"Blur (csv)\" },\n  { id: \"passwordagentcsv\", name: \"Password Agent (csv)\" },\n  { id: \"passpackcsv\", name: \"Passpack (csv)\" },\n  { id: \"passmanjson\", name: \"Passman (json)\" },\n  { id: \"avastcsv\", name: \"Avast Passwords (csv)\" },\n  { id: \"avastjson\", name: \"Avast Passwords (json)\" },\n  { id: \"fsecurefsk\", name: \"F-Secure KEY (fsk)\" },\n  { id: \"kasperskytxt\", name: \"Kaspersky Password Manager (txt)\" },\n  { id: \"remembearcsv\", name: \"RememBear (csv)\" },\n  { id: \"passwordwallettxt\", name: \"PasswordWallet (txt)\" },\n  { id: \"mykicsv\", name: \"Myki (csv)\" },\n  { id: \"securesafecsv\", name: \"SecureSafe (csv)\" },\n  { id: \"logmeoncecsv\", name: \"LogMeOnce (csv)\" },\n  { id: \"blackberrycsv\", name: \"BlackBerry Password Keeper (csv)\" },\n  { id: \"buttercupcsv\", name: \"Buttercup (csv)\" },\n  { id: \"codebookcsv\", name: \"Codebook (csv)\" },\n  { id: \"encryptrcsv\", name: \"Encryptr (csv)\" },\n  { id: \"yoticsv\", name: \"Yoti (csv)\" },\n  { id: \"nordpasscsv\", name: \"Nordpass (csv)\" },\n] as const;\n\nexport type ImportType =\n  | typeof featuredImportOptions[number][\"id\"]\n  | typeof regularImportOptions[number][\"id\"];\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum Permissions {\n  AccessEventLogs,\n  AccessImportExport,\n  AccessReports,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAllCollections,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAssignedCollections,\n  ManageGroups,\n  ManageOrganization,\n  ManagePolicies,\n  ManageProvider,\n  ManageUsers,\n  ManageUsersPassword,\n  CreateNewCollections,\n  EditAnyCollection,\n  DeleteAnyCollection,\n  EditAssignedCollections,\n  DeleteAssignedCollections,\n  ManageSso,\n}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 2) {\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      if (value.length > 2 && value.length % 2 === 0) {\n        for (let i = 0; i < value.length - 2; i += 2) {\n          const val: string = value[i + 2];\n          const field: string = value[i + 1];\n          if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n            continue;\n          }\n\n          const fieldLower = field.toLowerCase();\n          if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n            cipher.login.password = this.getValueOrDefault(val);\n          } else if (\n            cipher.login.username == null &&\n            this.usernameFieldNames.indexOf(fieldLower) > -1\n          ) {\n            cipher.login.username = this.getValueOrDefault(val);\n          } else if (\n            (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n            this.uriFieldNames.indexOf(fieldLower) > -1\n          ) {\n            cipher.login.uris = this.makeUriArray(val);\n          } else {\n            this.processKvp(cipher, field, val);\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.login.uris = this.makeUriArray(value.web);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.username = this.getValueOrDefault(value.login);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AvastJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    if (results.logins != null) {\n      results.logins.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.name = this.getValueOrDefault(value.custName);\n        cipher.notes = this.getValueOrDefault(value.note);\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.password = this.getValueOrDefault(value.pwd);\n        cipher.login.username = this.getValueOrDefault(value.loginName);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (results.notes != null) {\n      results.notes.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote.type = SecureNoteType.Generic;\n        cipher.name = this.getValueOrDefault(value.label);\n        cipher.notes = this.getValueOrDefault(value.text);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (results.cards != null) {\n      results.cards.forEach((value: any) => {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.Card;\n        cipher.name = this.getValueOrDefault(value.custName);\n        cipher.notes = this.getValueOrDefault(value.note);\n        cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\n        cipher.card.number = this.getValueOrDefault(value.cardNumber);\n        cipher.card.code = this.getValueOrDefault(value.cvv);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        if (value.expirationDate != null) {\n          if (value.expirationDate.month != null) {\n            cipher.card.expMonth = value.expirationDate.month + \"\";\n          }\n          if (value.expirationDate.year != null) {\n            cipher.card.expYear = value.expirationDate.year + \"\";\n          }\n        }\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(\n        value.name,\n        this.getValueOrDefault(this.nameFromUrl(value.website), \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(value.website);\n      cipher.login.password = this.getValueOrDefault(value.password);\n\n      if (\n        this.isNullOrWhitespace(value.username) &&\n        !this.isNullOrWhitespace(value.secondary_username)\n      ) {\n        cipher.login.username = value.secondary_username;\n      } else {\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.notes = this.getValueOrDefault(value.secondary_username);\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { Utils } from \"../misc/utils\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { LoginUriView } from \"../models/view/loginUriView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\nimport { ConsoleLogService } from \"../services/consoleLog.service\";\n\nexport abstract class BaseImporter {\n  organizationId: string = null;\n\n  protected logService: LogService = new ConsoleLogService(false);\n\n  protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n  protected passwordFieldNames = [\n    \"password\",\n    \"pass word\",\n    \"passphrase\",\n    \"pass phrase\",\n    \"pass\",\n    \"code\",\n    \"code word\",\n    \"codeword\",\n    \"secret\",\n    \"secret word\",\n    \"personpwd\",\n    \"key\",\n    \"keyword\",\n    \"key word\",\n    \"keyphrase\",\n    \"key phrase\",\n    \"form_pw\",\n    \"wppassword\",\n    \"pin\",\n    \"pwd\",\n    \"pw\",\n    \"pword\",\n    \"passwd\",\n    \"p\",\n    \"serial\",\n    \"serial#\",\n    \"license key\",\n    \"reg #\",\n\n    // Non-English names\n    \"passwort\",\n  ];\n\n  protected usernameFieldNames = [\n    \"user\",\n    \"name\",\n    \"user name\",\n    \"username\",\n    \"login name\",\n    \"email\",\n    \"e-mail\",\n    \"id\",\n    \"userid\",\n    \"user id\",\n    \"login\",\n    \"form_loginname\",\n    \"wpname\",\n    \"mail\",\n    \"loginid\",\n    \"login id\",\n    \"log\",\n    \"personlogin\",\n    \"first name\",\n    \"last name\",\n    \"card#\",\n    \"account #\",\n    \"member\",\n    \"member #\",\n\n    // Non-English names\n    \"nom\",\n    \"benutzername\",\n  ];\n\n  protected notesFieldNames = [\n    \"note\",\n    \"notes\",\n    \"comment\",\n    \"comments\",\n    \"memo\",\n    \"description\",\n    \"free form\",\n    \"freeform\",\n    \"free text\",\n    \"freetext\",\n    \"free\",\n\n    // Non-English names\n    \"kommentar\",\n  ];\n\n  protected uriFieldNames: string[] = [\n    \"url\",\n    \"hyper link\",\n    \"hyperlink\",\n    \"link\",\n    \"host\",\n    \"hostname\",\n    \"host name\",\n    \"server\",\n    \"address\",\n    \"hyper ref\",\n    \"href\",\n    \"web\",\n    \"website\",\n    \"web site\",\n    \"site\",\n    \"web-site\",\n    \"uri\",\n\n    // Non-English names\n    \"ort\",\n    \"adresse\",\n  ];\n\n  protected parseCsvOptions = {\n    encoding: \"UTF-8\",\n    skipEmptyLines: false,\n  };\n\n  protected get organization() {\n    return this.organizationId != null;\n  }\n\n  protected parseXml(data: string): Document {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(data, \"application/xml\");\n    return doc != null && doc.querySelector(\"parsererror\") == null ? doc : null;\n  }\n\n  protected parseCsv(data: string, header: boolean, options: any = {}): any[] {\n    const parseOptions: papa.ParseConfig<string> = Object.assign(\n      { header: header },\n      this.parseCsvOptions,\n      options\n    );\n    data = this.splitNewLine(data).join(\"\\n\").trim();\n    const result = papa.parse(data, parseOptions);\n    if (result.errors != null && result.errors.length > 0) {\n      result.errors.forEach((e) => {\n        if (e.row != null) {\n          this.logService.warning(\"Error parsing row \" + e.row + \": \" + e.message);\n        }\n      });\n    }\n    return result.data && result.data.length > 0 ? result.data : null;\n  }\n\n  protected parseSingleRowCsv(rowData: string) {\n    if (this.isNullOrWhitespace(rowData)) {\n      return null;\n    }\n    const parsedRow = this.parseCsv(rowData, false);\n    if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n      return parsedRow[0];\n    }\n    return null;\n  }\n\n  protected makeUriArray(uri: string | string[]): LoginUriView[] {\n    if (uri == null) {\n      return null;\n    }\n\n    if (typeof uri === \"string\") {\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.fixUri(uri);\n      if (this.isNullOrWhitespace(loginUri.uri)) {\n        return null;\n      }\n      loginUri.match = null;\n      return [loginUri];\n    }\n\n    if (uri.length > 0) {\n      const returnArr: LoginUriView[] = [];\n      uri.forEach((u) => {\n        const loginUri = new LoginUriView();\n        loginUri.uri = this.fixUri(u);\n        if (this.isNullOrWhitespace(loginUri.uri)) {\n          return;\n        }\n        loginUri.match = null;\n        returnArr.push(loginUri);\n      });\n      return returnArr.length === 0 ? null : returnArr;\n    }\n\n    return null;\n  }\n\n  protected fixUri(uri: string) {\n    if (uri == null) {\n      return null;\n    }\n    uri = uri.trim();\n    if (uri.indexOf(\"://\") === -1 && uri.indexOf(\".\") >= 0) {\n      uri = \"http://\" + uri;\n    }\n    if (uri.length > 1000) {\n      return uri.substring(0, 1000);\n    }\n    return uri;\n  }\n\n  protected nameFromUrl(url: string) {\n    const hostname = Utils.getHostname(url);\n    if (this.isNullOrWhitespace(hostname)) {\n      return null;\n    }\n    return hostname.startsWith(\"www.\") ? hostname.replace(\"www.\", \"\") : hostname;\n  }\n\n  protected isNullOrWhitespace(str: string): boolean {\n    return Utils.isNullOrWhitespace(str);\n  }\n\n  protected getValueOrDefault(str: string, defaultValue: string = null): string {\n    if (this.isNullOrWhitespace(str)) {\n      return defaultValue;\n    }\n    return str;\n  }\n\n  protected splitNewLine(str: string): string[] {\n    return str.split(this.newLineRegex);\n  }\n\n  // ref https://stackoverflow.com/a/5911300\n  protected getCardBrand(cardNum: string) {\n    if (this.isNullOrWhitespace(cardNum)) {\n      return null;\n    }\n\n    // Visa\n    let re = new RegExp(\"^4\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    // Mastercard\n    // Updated for Mastercard 2017 BINs expansion\n    if (\n      /^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/.test(\n        cardNum\n      )\n    ) {\n      return \"Mastercard\";\n    }\n\n    // AMEX\n    re = new RegExp(\"^3[47]\");\n    if (cardNum.match(re) != null) {\n      return \"Amex\";\n    }\n\n    // Discover\n    re = new RegExp(\n      \"^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)\"\n    );\n    if (cardNum.match(re) != null) {\n      return \"Discover\";\n    }\n\n    // Diners\n    re = new RegExp(\"^36\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // Diners - Carte Blanche\n    re = new RegExp(\"^30[0-5]\");\n    if (cardNum.match(re) != null) {\n      return \"Diners Club\";\n    }\n\n    // JCB\n    re = new RegExp(\"^35(2[89]|[3-8][0-9])\");\n    if (cardNum.match(re) != null) {\n      return \"JCB\";\n    }\n\n    // Visa Electron\n    re = new RegExp(\"^(4026|417500|4508|4844|491(3|7))\");\n    if (cardNum.match(re) != null) {\n      return \"Visa\";\n    }\n\n    return null;\n  }\n\n  protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n    if (!this.isNullOrWhitespace(expiration)) {\n      expiration = expiration.replace(/\\s/g, \"\");\n      const parts = expiration.split(\"/\");\n      if (parts.length === 2) {\n        let month: string = null;\n        let year: string = null;\n        if (parts[0].length === 1 || parts[0].length === 2) {\n          month = parts[0];\n          if (month.length === 2 && month[0] === \"0\") {\n            month = month.substr(1, 1);\n          }\n        }\n        if (parts[1].length === 2 || parts[1].length === 4) {\n          year = month.length === 2 ? \"20\" + parts[1] : parts[1];\n        }\n        if (month != null && year != null) {\n          cipher.card.expMonth = month;\n          cipher.card.expYear = year;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected moveFoldersToCollections(result: ImportResult) {\n    result.folderRelationships.forEach((r) => result.collectionRelationships.push(r));\n    result.collections = result.folders.map((f) => {\n      const collection = new CollectionView();\n      collection.name = f.name;\n      return collection;\n    });\n    result.folderRelationships = [];\n    result.folders = [];\n  }\n\n  protected querySelectorDirectChild(parentEl: Element, query: string) {\n    const els = this.querySelectorAllDirectChild(parentEl, query);\n    return els.length === 0 ? null : els[0];\n  }\n\n  protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n    return Array.from(parentEl.querySelectorAll(query)).filter((el) => el.parentNode === parentEl);\n  }\n\n  protected initLoginCipher() {\n    const cipher = new CipherView();\n    cipher.favorite = false;\n    cipher.notes = \"\";\n    cipher.fields = [];\n    cipher.login = new LoginView();\n    cipher.type = CipherType.Login;\n    return cipher;\n  }\n\n  protected cleanupCipher(cipher: CipherView) {\n    if (cipher == null) {\n      return;\n    }\n    if (cipher.type !== CipherType.Login) {\n      cipher.login = null;\n    }\n    if (this.isNullOrWhitespace(cipher.name)) {\n      cipher.name = \"--\";\n    }\n    if (this.isNullOrWhitespace(cipher.notes)) {\n      cipher.notes = null;\n    } else {\n      cipher.notes = cipher.notes.trim();\n    }\n    if (cipher.fields != null && cipher.fields.length === 0) {\n      cipher.fields = null;\n    }\n  }\n\n  protected processKvp(\n    cipher: CipherView,\n    key: string,\n    value: string,\n    type: FieldType = FieldType.Text\n  ) {\n    if (this.isNullOrWhitespace(value)) {\n      return;\n    }\n    if (this.isNullOrWhitespace(key)) {\n      key = \"\";\n    }\n    if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n      if (cipher.notes == null) {\n        cipher.notes = \"\";\n      }\n      cipher.notes += key + \": \" + this.splitNewLine(value).join(\"\\n\") + \"\\n\";\n    } else {\n      if (cipher.fields == null) {\n        cipher.fields = [];\n      }\n      const field = new FieldView();\n      field.type = type;\n      field.name = key;\n      field.value = value;\n      cipher.fields.push(field);\n    }\n  }\n\n  protected processFolder(result: ImportResult, folderName: string) {\n    let folderIndex = result.folders.length;\n    const hasFolder = !this.isNullOrWhitespace(folderName);\n    let addFolder = hasFolder;\n\n    if (hasFolder) {\n      for (let i = 0; i < result.folders.length; i++) {\n        if (result.folders[i].name === folderName) {\n          addFolder = false;\n          folderIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (addFolder) {\n      const f = new FolderView();\n      f.name = folderName;\n      result.folders.push(f);\n    }\n    if (hasFolder) {\n      result.folderRelationships.push([result.ciphers.length, folderIndex]);\n    }\n  }\n\n  protected convertToNoteIfNeeded(cipher: CipherView) {\n    if (\n      cipher.type === CipherType.Login &&\n      this.isNullOrWhitespace(cipher.login.username) &&\n      this.isNullOrWhitespace(cipher.login.password) &&\n      (cipher.login.uris == null || cipher.login.uris.length === 0)\n    ) {\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n    }\n  }\n\n  protected processFullName(cipher: CipherView, fullName: string) {\n    if (this.isNullOrWhitespace(fullName)) {\n      return;\n    }\n\n    const nameParts = fullName.split(\" \");\n    if (nameParts.length > 0) {\n      cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n    }\n    if (nameParts.length === 2) {\n      cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n    } else if (nameParts.length >= 3) {\n      cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n      cipher.identity.lastName = nameParts.slice(2, nameParts.length).join(\" \");\n    }\n  }\n}\n","import { CipherRepromptType } from \"../enums/cipherRepromptType\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n        const collections = (value.collections as string).split(\",\");\n        collections.forEach((col) => {\n          let addCollection = true;\n          let collectionIndex = result.collections.length;\n\n          for (let i = 0; i < result.collections.length; i++) {\n            if (result.collections[i].name === col) {\n              addCollection = false;\n              collectionIndex = i;\n              break;\n            }\n          }\n\n          if (addCollection) {\n            const collection = new CollectionView();\n            collection.name = col;\n            result.collections.push(collection);\n          }\n\n          result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n        });\n      } else if (!this.organization) {\n        this.processFolder(result, value.folder);\n      }\n\n      const cipher = new CipherView();\n      cipher.favorite =\n        !this.organization && this.getValueOrDefault(value.favorite, \"0\") !== \"0\" ? true : false;\n      cipher.type = CipherType.Login;\n      cipher.notes = this.getValueOrDefault(value.notes);\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      try {\n        cipher.reprompt = parseInt(\n          this.getValueOrDefault(value.reprompt, CipherRepromptType.None.toString()),\n          10\n        );\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(\"Unable to parse reprompt value\", e);\n        cipher.reprompt = CipherRepromptType.None;\n      }\n\n      if (!this.isNullOrWhitespace(value.fields)) {\n        const fields = this.splitNewLine(value.fields);\n        for (let i = 0; i < fields.length; i++) {\n          if (this.isNullOrWhitespace(fields[i])) {\n            continue;\n          }\n\n          const delimPosition = fields[i].lastIndexOf(\": \");\n          if (delimPosition === -1) {\n            continue;\n          }\n\n          if (cipher.fields == null) {\n            cipher.fields = [];\n          }\n\n          const field = new FieldView();\n          field.name = fields[i].substr(0, delimPosition);\n          field.value = null;\n          field.type = FieldType.Text;\n          if (fields[i].length > delimPosition + 2) {\n            field.value = fields[i].substr(delimPosition + 2);\n          }\n          cipher.fields.push(field);\n        }\n      }\n\n      const valueType = value.type != null ? value.type.toLowerCase() : null;\n      switch (valueType) {\n        case \"note\":\n          cipher.type = CipherType.SecureNote;\n          cipher.secureNote = new SecureNoteView();\n          cipher.secureNote.type = SecureNoteType.Generic;\n          break;\n        default: {\n          cipher.type = CipherType.Login;\n          cipher.login = new LoginView();\n          cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n          cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n          cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n          const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n          cipher.login.uris = this.makeUriArray(uris);\n          break;\n        }\n      }\n\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { EncString } from \"../models/domain/encString\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherWithIds } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId } from \"../models/export/collectionWithId\";\nimport { FolderWithId } from \"../models/export/folderWithId\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n  private results: any;\n  private result: ImportResult;\n\n  constructor(protected cryptoService: CryptoService, protected i18nService: I18nService) {\n    super();\n  }\n\n  async parse(data: string): Promise<ImportResult> {\n    this.result = new ImportResult();\n    this.results = JSON.parse(data);\n    if (this.results == null || this.results.items == null) {\n      if (this.results?.passwordProtected) {\n        this.result.success = false;\n        this.result.missingPassword = true;\n        this.result.errorMessage = this.i18nService.t(\"importPasswordRequired\");\n        return this.result;\n      }\n\n      this.result.success = false;\n      return this.result;\n    }\n\n    if (this.results.encrypted) {\n      await this.parseEncrypted();\n    } else {\n      this.parseDecrypted();\n    }\n\n    return this.result;\n  }\n\n  private async parseEncrypted() {\n    if (this.results.encKeyValidation_DO_NOT_EDIT != null) {\n      const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const encKeyValidation = new EncString(this.results.encKeyValidation_DO_NOT_EDIT);\n      const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(\n        encKeyValidation,\n        orgKey\n      );\n      if (encKeyValidationDecrypt === null) {\n        this.result.success = false;\n        this.result.errorMessage = this.i18nService.t(\"importEncKeyError\");\n        return;\n      }\n    }\n\n    const groupingsMap = new Map<string, number>();\n\n    if (this.organization && this.results.collections != null) {\n      for (const c of this.results.collections as CollectionWithId[]) {\n        const collection = CollectionWithId.toDomain(c);\n        if (collection != null) {\n          collection.id = null;\n          collection.organizationId = this.organizationId;\n          const view = await collection.decrypt();\n          groupingsMap.set(c.id, this.result.collections.length);\n          this.result.collections.push(view);\n        }\n      }\n    } else if (!this.organization && this.results.folders != null) {\n      for (const f of this.results.folders as FolderWithId[]) {\n        const folder = FolderWithId.toDomain(f);\n        if (folder != null) {\n          folder.id = null;\n          const view = await folder.decrypt();\n          groupingsMap.set(f.id, this.result.folders.length);\n          this.result.folders.push(view);\n        }\n      }\n    }\n\n    for (const c of this.results.items as CipherWithIds[]) {\n      const cipher = CipherWithIds.toDomain(c);\n      // reset ids incase they were set for some reason\n      cipher.id = null;\n      cipher.folderId = null;\n      cipher.organizationId = this.organizationId;\n      cipher.collectionIds = null;\n\n      // make sure password history is limited\n      if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n        cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n      }\n\n      if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n        this.result.folderRelationships.push([\n          this.result.ciphers.length,\n          groupingsMap.get(c.folderId),\n        ]);\n      } else if (this.organization && c.collectionIds != null) {\n        c.collectionIds.forEach((cId) => {\n          if (groupingsMap.has(cId)) {\n            this.result.collectionRelationships.push([\n              this.result.ciphers.length,\n              groupingsMap.get(cId),\n            ]);\n          }\n        });\n      }\n\n      const view = await cipher.decrypt();\n      this.cleanupCipher(view);\n      this.result.ciphers.push(view);\n    }\n\n    this.result.success = true;\n  }\n\n  private parseDecrypted() {\n    const groupingsMap = new Map<string, number>();\n    if (this.organization && this.results.collections != null) {\n      this.results.collections.forEach((c: CollectionWithId) => {\n        const collection = CollectionWithId.toView(c);\n        if (collection != null) {\n          collection.id = null;\n          collection.organizationId = null;\n          groupingsMap.set(c.id, this.result.collections.length);\n          this.result.collections.push(collection);\n        }\n      });\n    } else if (!this.organization && this.results.folders != null) {\n      this.results.folders.forEach((f: FolderWithId) => {\n        const folder = FolderWithId.toView(f);\n        if (folder != null) {\n          folder.id = null;\n          groupingsMap.set(f.id, this.result.folders.length);\n          this.result.folders.push(folder);\n        }\n      });\n    }\n\n    this.results.items.forEach((c: CipherWithIds) => {\n      const cipher = CipherWithIds.toView(c);\n      // reset ids incase they were set for some reason\n      cipher.id = null;\n      cipher.folderId = null;\n      cipher.organizationId = null;\n      cipher.collectionIds = null;\n\n      // make sure password history is limited\n      if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n        cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n      }\n\n      if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n        this.result.folderRelationships.push([\n          this.result.ciphers.length,\n          groupingsMap.get(c.folderId),\n        ]);\n      } else if (this.organization && c.collectionIds != null) {\n        c.collectionIds.forEach((cId) => {\n          if (groupingsMap.has(cId)) {\n            this.result.collectionRelationships.push([\n              this.result.ciphers.length,\n              groupingsMap.get(cId),\n            ]);\n          }\n        });\n      }\n\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n\n    this.result.success = true;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { EncString } from \"../models/domain/encString\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nimport { BitwardenJsonImporter } from \"./bitwardenJsonImporter\";\nimport { Importer } from \"./importer\";\n\ninterface BitwardenPasswordProtectedFileFormat {\n  encrypted: boolean;\n  passwordProtected: boolean;\n  salt: string;\n  kdfIterations: number;\n  kdfType: number;\n  encKeyValidation_DO_NOT_EDIT: string;\n  data: string;\n}\n\nexport class BitwardenPasswordProtectedImporter extends BitwardenJsonImporter implements Importer {\n  private key: SymmetricCryptoKey;\n\n  constructor(cryptoService: CryptoService, i18nService: I18nService, private password: string) {\n    super(cryptoService, i18nService);\n  }\n\n  async parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const parsedData = JSON.parse(data);\n    if (this.cannotParseFile(parsedData)) {\n      result.success = false;\n      return result;\n    }\n\n    if (!(await this.checkPassword(parsedData))) {\n      result.success = false;\n      result.errorMessage = this.i18nService.t(\"importEncKeyError\");\n      return result;\n    }\n\n    const encData = new EncString(parsedData.data);\n    const clearTextData = await this.cryptoService.decryptToUtf8(encData, this.key);\n    return await super.parse(clearTextData);\n  }\n\n  private async checkPassword(jdoc: BitwardenPasswordProtectedFileFormat): Promise<boolean> {\n    this.key = await this.cryptoService.makePinKey(\n      this.password,\n      jdoc.salt,\n      KdfType.PBKDF2_SHA256,\n      jdoc.kdfIterations\n    );\n\n    const encKeyValidation = new EncString(jdoc.encKeyValidation_DO_NOT_EDIT);\n\n    const encKeyValidationDecrypt = await this.cryptoService.decryptToUtf8(\n      encKeyValidation,\n      this.key\n    );\n    if (encKeyValidationDecrypt === null) {\n      return false;\n    }\n    return true;\n  }\n\n  private cannotParseFile(jdoc: BitwardenPasswordProtectedFileFormat): boolean {\n    return (\n      !jdoc ||\n      !jdoc.encrypted ||\n      !jdoc.passwordProtected ||\n      !jdoc.salt ||\n      !jdoc.kdfIterations ||\n      typeof jdoc.kdfIterations !== \"number\" ||\n      jdoc.kdfType == null ||\n      KdfType[jdoc.kdfType] == null ||\n      !jdoc.encKeyValidation_DO_NOT_EDIT ||\n      !jdoc.data\n    );\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.grouping === \"list\") {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.favorite = value.fav === \"1\";\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.notes = this.getValueOrDefault(value.extra);\n      if (value.grouping !== \"note\") {\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.username = this.getValueOrDefault(value.username);\n      }\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.label === \"null\") {\n        value.label = null;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(\n        value.label,\n        this.getValueOrDefault(this.nameFromUrl(value.domain), \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(value.domain);\n      cipher.login.password = this.getValueOrDefault(value.password);\n\n      if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n        cipher.login.username = value.username;\n      } else {\n        cipher.login.username = this.getValueOrDefault(value.email);\n        cipher.notes = this.getValueOrDefault(value.username);\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst OfficialProps = [\"!group_id\", \"!group_name\", \"title\", \"username\", \"password\", \"URL\", \"id\"];\n\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValueOrDefault(value[\"!group_name\"]));\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n\n      let processingCustomFields = false;\n      for (const prop in value) {\n        // eslint-disable-next-line\n        if (value.hasOwnProperty(prop)) {\n          if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\n            processingCustomFields = true;\n          }\n          if (processingCustomFields) {\n            this.processKvp(cipher, prop, value[prop]);\n          }\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const textarea = doc.querySelector(\"textarea\");\n    if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n      result.errorMessage = \"Missing textarea.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const entries = JSON.parse(textarea.textContent);\n    entries.forEach((entry: any) => {\n      const cipher = this.initLoginCipher();\n      if (!this.isNullOrWhitespace(entry.label)) {\n        cipher.name = entry.label.split(\" \")[0];\n      }\n      if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n        cipher.notes = entry.data.notes.split(\"\\\\n\").join(\"\\n\");\n      }\n\n      if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n        for (const property in entry.currentVersion.fields) {\n          // eslint-disable-next-line\n          if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n            continue;\n          }\n\n          const field = entry.currentVersion.fields[property];\n          const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n          switch (actionType) {\n            case \"password\":\n              cipher.login.password = this.getValueOrDefault(field.value);\n              break;\n            case \"email\":\n            case \"username\":\n            case \"user\":\n            case \"name\":\n              cipher.login.username = this.getValueOrDefault(field.value);\n              break;\n            case \"url\":\n              cipher.login.uris = this.makeUriArray(field.value);\n              break;\n            default: {\n              const labelLower = field.label != null ? field.label.toLowerCase() : null;\n              if (\n                cipher.login.password == null &&\n                this.passwordFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.password = this.getValueOrDefault(field.value);\n              } else if (\n                cipher.login.username == null &&\n                this.usernameFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.username = this.getValueOrDefault(field.value);\n              } else if (\n                (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                this.uriFieldNames.indexOf(labelLower) > -1\n              ) {\n                cipher.login.uris = this.makeUriArray(field.value);\n              } else {\n                this.processKvp(cipher, field.label, field.value);\n              }\n              break;\n            }\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValueOrDefault(value.Category));\n\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.Favorite) === \"True\";\n      cipher.name = this.getValueOrDefault(value.Entry, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Note);\n      cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.totp = this.getValueOrDefault(value.TOTP);\n      cipher.login.uris = this.makeUriArray(value.Website);\n\n      if (!this.isNullOrWhitespace(value.Username)) {\n        this.processKvp(cipher, \"Email\", value.Email);\n      }\n      this.processKvp(cipher, \"Phone\", value.Phone);\n      this.processKvp(cipher, \"PIN\", value.PIN);\n      this.processKvp(cipher, \"Account\", value.Account);\n      this.processKvp(cipher, \"Date\", value.Date);\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport {\n  CredentialsRecord,\n  IdRecord,\n  PaymentsRecord,\n  PersonalInformationRecord,\n  SecureNoteRecord,\n} from \"./types/dashlaneCsvTypes\";\n\nconst _mappedCredentialsColums = new Set([\n  \"title\",\n  \"note\",\n  \"username\",\n  \"password\",\n  \"url\",\n  \"otpSecret\",\n  \"category\",\n]);\n\nconst _mappedPersonalInfoAsIdentiyColumns = new Set([\n  \"type\",\n  \"title\",\n  \"first_name\",\n  \"middle_name\",\n  \"last_name\",\n  \"login\",\n  \"email\",\n  \"phone_number\",\n  \"address\",\n  \"country\",\n  \"state\",\n  \"city\",\n  \"zip\",\n  // Skip item_name as we already have set a combined name\n  \"item_name\",\n]);\n\nconst _mappedSecureNoteColumns = new Set([\"title\", \"note\"]);\n\nexport class DashlaneCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    if (results[0].type != null && results[0].title != null) {\n      const personalRecords = results as PersonalInformationRecord[];\n\n      // If personalRecords has only one \"name\" then create an Identity-Cipher\n      if (personalRecords.filter((x) => x.type === \"name\").length === 1) {\n        const cipher = this.initLoginCipher();\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n        results.forEach((row) => {\n          this.parsePersonalInformationRecordAsIdentity(cipher, row);\n        });\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n        result.success = true;\n        return Promise.resolve(result);\n      }\n    }\n\n    results.forEach((row) => {\n      const cipher = this.initLoginCipher();\n\n      const rowKeys = Object.keys(row);\n      if (rowKeys[0] === \"username\") {\n        this.processFolder(result, row.category);\n        this.parseCredentialsRecord(cipher, row);\n      }\n\n      if (rowKeys[0] === \"type\" && rowKeys[1] === \"account_name\") {\n        this.parsePaymentRecord(cipher, row);\n      }\n\n      if (rowKeys[0] === \"type\" && rowKeys[1] === \"number\") {\n        this.parseIdRecord(cipher, row);\n      }\n\n      if ((rowKeys[0] === \"type\") != null && rowKeys[1] === \"title\") {\n        this.parsePersonalInformationRecord(cipher, row);\n      }\n\n      if (rowKeys[0] === \"title\" && rowKeys[1] === \"note\") {\n        this.parseSecureNoteRecords(cipher, row);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  parseCredentialsRecord(cipher: CipherView, row: CredentialsRecord) {\n    cipher.type = CipherType.Login;\n    cipher.login = new LoginView();\n\n    cipher.name = row.title;\n    cipher.notes = row.note;\n    cipher.login.username = row.username;\n    cipher.login.password = row.password;\n    cipher.login.totp = row.otpSecret;\n    cipher.login.uris = this.makeUriArray(row.url);\n\n    this.importUnmappedFields(cipher, row, _mappedCredentialsColums);\n  }\n\n  parsePaymentRecord(cipher: CipherView, row: PaymentsRecord) {\n    cipher.type = CipherType.Card;\n    cipher.card = new CardView();\n\n    cipher.name = row.account_name;\n    let mappedValues: string[] = [];\n    switch (row.type) {\n      case \"credit_card\":\n        cipher.card.cardholderName = row.account_name;\n        cipher.card.number = row.cc_number;\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = row.code;\n        cipher.card.expMonth = row.expiration_month;\n        cipher.card.expYear = row.expiration_year.substring(2, 4);\n\n        // If you add more mapped fields please extend this\n        mappedValues = [\n          \"account_name\",\n          \"account_holder\",\n          \"cc_number\",\n          \"code\",\n          \"expiration_month\",\n          \"expiration_year\",\n        ];\n        break;\n      case \"bank\":\n        cipher.card.cardholderName = row.account_holder;\n        cipher.card.number = row.account_number;\n\n        // If you add more mapped fields please extend this\n        mappedValues = [\"account_name\", \"account_holder\", \"account_number\"];\n        break;\n      default:\n        break;\n    }\n\n    this.importUnmappedFields(cipher, row, new Set(mappedValues));\n  }\n\n  parseIdRecord(cipher: CipherView, row: IdRecord) {\n    cipher.type = CipherType.Identity;\n    cipher.identity = new IdentityView();\n\n    const mappedValues: string[] = [\"name\", \"number\"];\n    switch (row.type) {\n      case \"card\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.licenseNumber = row.number;\n        break;\n      case \"passport\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.passportNumber = row.number;\n        break;\n      case \"license\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.licenseNumber = row.number;\n        cipher.identity.state = row.state;\n\n        mappedValues.push(\"state\");\n        break;\n      case \"social_security\":\n        cipher.name = `${row.name} ${row.type}`;\n        this.processFullName(cipher, row.name);\n        cipher.identity.ssn = row.number;\n        break;\n      case \"tax_number\":\n        cipher.name = row.type;\n        cipher.identity.licenseNumber = row.number;\n        break;\n\n      default:\n        break;\n    }\n\n    // If you add more mapped fields please extend this\n    this.importUnmappedFields(cipher, row, new Set(mappedValues));\n  }\n\n  parsePersonalInformationRecord(cipher: CipherView, row: PersonalInformationRecord) {\n    cipher.type = CipherType.SecureNote;\n    cipher.secureNote.type = SecureNoteType.Generic;\n    if (row.type === \"name\") {\n      cipher.name = `${row.title} ${row.first_name} ${row.middle_name} ${row.last_name}`\n        .replace(\"  \", \" \")\n        .trim();\n    } else {\n      cipher.name = row.item_name;\n    }\n\n    const dataRow = row as any;\n    Object.keys(row).forEach((key) => {\n      this.processKvp(cipher, key, dataRow[key]);\n    });\n  }\n\n  parsePersonalInformationRecordAsIdentity(cipher: CipherView, row: PersonalInformationRecord) {\n    switch (row.type) {\n      case \"name\":\n        this.processFullName(cipher, `${row.first_name} ${row.middle_name} ${row.last_name}`);\n        cipher.identity.title = row.title;\n        cipher.name = cipher.identity.fullName;\n\n        cipher.identity.username = row.login;\n        break;\n      case \"email\":\n        cipher.identity.email = row.email;\n        break;\n      case \"number\":\n        cipher.identity.phone = row.phone_number;\n        break;\n      case \"address\":\n        cipher.identity.address1 = row.address;\n        cipher.identity.city = row.city;\n        cipher.identity.postalCode = row.zip;\n        cipher.identity.state = row.state;\n        cipher.identity.country = row.country;\n        break;\n      default:\n        break;\n    }\n\n    this.importUnmappedFields(cipher, row, _mappedPersonalInfoAsIdentiyColumns);\n  }\n\n  parseSecureNoteRecords(cipher: CipherView, row: SecureNoteRecord) {\n    cipher.type = CipherType.SecureNote;\n    cipher.secureNote.type = SecureNoteType.Generic;\n    cipher.name = row.title;\n    cipher.notes = row.note;\n\n    this.importUnmappedFields(cipher, row, _mappedSecureNoteColumns);\n  }\n\n  importUnmappedFields(cipher: CipherView, row: any, mappedValues: Set<string>) {\n    const unmappedFields = Object.keys(row).filter((x) => !mappedValues.has(x));\n    unmappedFields.forEach((key) => {\n      const item = row as any;\n      this.processKvp(cipher, key, item[key]);\n    });\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nconst HandledResults = new Set([\n  \"ADDRESS\",\n  \"AUTHENTIFIANT\",\n  \"BANKSTATEMENT\",\n  \"IDCARD\",\n  \"IDENTITY\",\n  \"PAYMENTMEANS_CREDITCARD\",\n  \"PAYMENTMEAN_PAYPAL\",\n  \"EMAIL\",\n]);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n  private result: ImportResult;\n\n  parse(data: string): Promise<ImportResult> {\n    this.result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.length === 0) {\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    if (results.ADDRESS != null) {\n      this.processAddress(results.ADDRESS);\n    }\n    if (results.AUTHENTIFIANT != null) {\n      this.processAuth(results.AUTHENTIFIANT);\n    }\n    if (results.BANKSTATEMENT != null) {\n      this.processNote(results.BANKSTATEMENT, \"BankAccountName\");\n    }\n    if (results.IDCARD != null) {\n      this.processNote(results.IDCARD, \"Fullname\");\n    }\n    if (results.PAYMENTMEANS_CREDITCARD != null) {\n      this.processCard(results.PAYMENTMEANS_CREDITCARD);\n    }\n    if (results.IDENTITY != null) {\n      this.processIdentity(results.IDENTITY);\n    }\n\n    for (const key in results) {\n      // eslint-disable-next-line\n      if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n        this.processNote(results[key], null, \"Generic Note\");\n      }\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processAuth(results: any[]) {\n    results.forEach((credential: any) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(credential.title);\n\n      cipher.login.username = this.getValueOrDefault(\n        credential.login,\n        this.getValueOrDefault(credential.secondaryLogin)\n      );\n      if (this.isNullOrWhitespace(cipher.login.username)) {\n        cipher.login.username = this.getValueOrDefault(credential.email);\n      } else if (!this.isNullOrWhitespace(credential.email)) {\n        cipher.notes = \"Email: \" + credential.email + \"\\n\";\n      }\n\n      cipher.login.password = this.getValueOrDefault(credential.password);\n      cipher.login.uris = this.makeUriArray(credential.domain);\n      cipher.notes += this.getValueOrDefault(credential.note, \"\");\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processIdentity(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.identity = new IdentityView();\n      cipher.type = CipherType.Identity;\n      cipher.name = this.getValueOrDefault(obj.fullName, \"\");\n      const nameParts = cipher.name.split(\" \");\n      if (nameParts.length > 0) {\n        cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n      }\n      if (nameParts.length === 2) {\n        cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n      } else if (nameParts.length === 3) {\n        cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n        cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n      }\n      cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processAddress(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.identity = new IdentityView();\n      cipher.type = CipherType.Identity;\n      cipher.name = this.getValueOrDefault(obj.addressName);\n      cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n      cipher.identity.city = this.getValueOrDefault(obj.city);\n      cipher.identity.state = this.getValueOrDefault(obj.state);\n      cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n      cipher.identity.country = this.getValueOrDefault(obj.country);\n      if (cipher.identity.country != null) {\n        cipher.identity.country = cipher.identity.country.toUpperCase();\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processCard(results: any[]) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.card = new CardView();\n      cipher.type = CipherType.Card;\n      cipher.name = this.getValueOrDefault(obj.bank);\n      cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n      cipher.card.brand = this.getCardBrand(cipher.card.number);\n      cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n      if (!this.isNullOrWhitespace(cipher.card.brand)) {\n        if (this.isNullOrWhitespace(cipher.name)) {\n          cipher.name = cipher.card.brand;\n        } else {\n          cipher.name += \" - \" + cipher.card.brand;\n        }\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n\n  private processNote(results: any[], nameProperty: string, name: string = null) {\n    results.forEach((obj: any) => {\n      const cipher = new CipherView();\n      cipher.secureNote = new SecureNoteView();\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote.type = SecureNoteType.Generic;\n      if (name != null) {\n        cipher.name = name;\n      } else {\n        cipher.name = this.getValueOrDefault(obj[nameProperty]);\n      }\n      for (const key in obj) {\n        // eslint-disable-next-line\n        if (obj.hasOwnProperty(key) && key !== nameProperty) {\n          this.processKvp(cipher, key, obj[key].toString());\n        }\n      }\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Label, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      const text = this.getValueOrDefault(value.Text);\n      if (!this.isNullOrWhitespace(text)) {\n        if (this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes = text;\n        } else {\n          cipher.notes += \"\\n\\n\" + text;\n        }\n      }\n\n      const type = value[\"Entry Type\"];\n      if (type === \"Password\") {\n        cipher.login.username = this.getValueOrDefault(value.Username);\n        cipher.login.password = this.getValueOrDefault(value.Password);\n        cipher.login.uris = this.makeUriArray(value[\"Site URL\"]);\n      } else if (type === \"Credit Card\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value[\"Name on card\"]);\n        cipher.card.number = this.getValueOrDefault(value[\"Card Number\"]);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.CVV);\n        const expiry = this.getValueOrDefault(value.Expiry);\n        if (!this.isNullOrWhitespace(expiry)) {\n          const expParts = expiry.split(\"/\");\n          if (expParts.length > 1) {\n            cipher.card.expMonth = parseInt(expParts[0], null).toString();\n            cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\n          }\n        }\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let firstRow = true;\n    results.forEach((value) => {\n      if (value.length < 2 || (firstRow && (value[0] === \"Title\" || value[0] === \"title\"))) {\n        firstRow = false;\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      if (\n        value.length === 2 ||\n        (!this.containsField(value, \"username\") &&\n          !this.containsField(value, \"password\") &&\n          !this.containsField(value, \"email\") &&\n          !this.containsField(value, \"url\"))\n      ) {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n      }\n\n      if (\n        this.containsField(value, \"cardholder\") &&\n        this.containsField(value, \"number\") &&\n        this.containsField(value, \"expiry date\")\n      ) {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n      }\n\n      if (value.length > 2 && value.length % 2 === 0) {\n        for (let i = 0; i < value.length - 2; i += 2) {\n          const fieldValue: string = value[i + 2];\n          if (this.isNullOrWhitespace(fieldValue)) {\n            continue;\n          }\n\n          const fieldName: string = value[i + 1];\n          const fieldNameLower = fieldName.toLowerCase();\n\n          if (cipher.type === CipherType.Login) {\n            if (\n              fieldNameLower === \"url\" &&\n              (cipher.login.uris == null || cipher.login.uris.length === 0)\n            ) {\n              cipher.login.uris = this.makeUriArray(fieldValue);\n              continue;\n            } else if (\n              (fieldNameLower === \"username\" || fieldNameLower === \"email\") &&\n              this.isNullOrWhitespace(cipher.login.username)\n            ) {\n              cipher.login.username = fieldValue;\n              continue;\n            } else if (\n              fieldNameLower === \"password\" &&\n              this.isNullOrWhitespace(cipher.login.password)\n            ) {\n              cipher.login.password = fieldValue;\n              continue;\n            } else if (fieldNameLower === \"totp\" && this.isNullOrWhitespace(cipher.login.totp)) {\n              cipher.login.totp = fieldValue;\n              continue;\n            }\n          } else if (cipher.type === CipherType.Card) {\n            if (\n              fieldNameLower === \"cardholder\" &&\n              this.isNullOrWhitespace(cipher.card.cardholderName)\n            ) {\n              cipher.card.cardholderName = fieldValue;\n              continue;\n            } else if (fieldNameLower === \"number\" && this.isNullOrWhitespace(cipher.card.number)) {\n              cipher.card.number = fieldValue;\n              cipher.card.brand = this.getCardBrand(fieldValue);\n              continue;\n            } else if (fieldNameLower === \"cvc\" && this.isNullOrWhitespace(cipher.card.code)) {\n              cipher.card.code = fieldValue;\n              continue;\n            } else if (\n              fieldNameLower === \"expiry date\" &&\n              this.isNullOrWhitespace(cipher.card.expMonth) &&\n              this.isNullOrWhitespace(cipher.card.expYear)\n            ) {\n              if (this.setCardExpiration(cipher, fieldValue)) {\n                continue;\n              }\n            } else if (fieldNameLower === \"type\") {\n              // Skip since brand was determined from number above\n              continue;\n            }\n          }\n\n          this.processKvp(cipher, fieldName, fieldValue);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private containsField(fields: any[], name: string) {\n    if (fields == null || name == null) {\n      return false;\n    }\n    return (\n      fields.filter((f) => !this.isNullOrWhitespace(f) && f.toLowerCase() === name.toLowerCase())\n        .length > 0\n    );\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.items == null || results.items.length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, string>();\n    const foldersIndexMap = new Map<string, number>();\n    const folderTree = this.buildFolderTree(results.folders);\n    this.flattenFolderTree(null, folderTree, foldersMap);\n    foldersMap.forEach((val, key) => {\n      foldersIndexMap.set(key, result.folders.length);\n      const f = new FolderView();\n      f.name = val;\n      result.folders.push(f);\n    });\n\n    results.items.forEach((item: any) => {\n      if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\n        result.folderRelationships.push([\n          result.ciphers.length,\n          foldersIndexMap.get(item.folders[0]),\n        ]);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(item.title);\n      cipher.favorite = item.favorite > 0;\n\n      if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n        if (\n          item.template_type.indexOf(\"login.\") === 0 ||\n          item.template_type.indexOf(\"password.\") === 0\n        ) {\n          this.processLogin(cipher, item.fields);\n        } else if (item.template_type.indexOf(\"creditcard.\") === 0) {\n          this.processCard(cipher, item.fields);\n        } else if (\n          item.template_type.indexOf(\"identity.\") < 0 &&\n          item.fields.some((f: any) => f.type === \"password\" && !this.isNullOrWhitespace(f.value))\n        ) {\n          this.processLogin(cipher, item.fields);\n        } else {\n          this.processNote(cipher, item.fields);\n        }\n      }\n\n      cipher.notes += \"\\n\" + this.getValueOrDefault(item.note, \"\");\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private processLogin(cipher: CipherView, fields: any[]) {\n    const urls: string[] = [];\n    fields.forEach((field: any) => {\n      if (this.isNullOrWhitespace(field.value) || field.type === \"section\") {\n        return;\n      }\n\n      if (\n        (field.type === \"username\" || field.type === \"email\") &&\n        this.isNullOrWhitespace(cipher.login.username)\n      ) {\n        cipher.login.username = field.value;\n      } else if (field.type === \"password\" && this.isNullOrWhitespace(cipher.login.password)) {\n        cipher.login.password = field.value;\n      } else if (field.type === \"totp\" && this.isNullOrWhitespace(cipher.login.totp)) {\n        cipher.login.totp = field.value;\n      } else if (field.type === \"url\") {\n        urls.push(field.value);\n      } else {\n        this.processKvp(\n          cipher,\n          field.label,\n          field.value,\n          field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n        );\n      }\n    });\n    cipher.login.uris = this.makeUriArray(urls);\n  }\n\n  private processCard(cipher: CipherView, fields: any[]) {\n    cipher.card = new CardView();\n    cipher.type = CipherType.Card;\n    fields.forEach((field: any) => {\n      if (\n        this.isNullOrWhitespace(field.value) ||\n        field.type === \"section\" ||\n        field.type === \"ccType\"\n      ) {\n        return;\n      }\n\n      if (field.type === \"ccName\" && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n        cipher.card.cardholderName = field.value;\n      } else if (field.type === \"ccNumber\" && this.isNullOrWhitespace(cipher.card.number)) {\n        cipher.card.number = field.value;\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n      } else if (field.type === \"ccCvc\" && this.isNullOrWhitespace(cipher.card.code)) {\n        cipher.card.code = field.value;\n      } else if (field.type === \"ccExpiry\" && this.isNullOrWhitespace(cipher.card.expYear)) {\n        if (!this.setCardExpiration(cipher, field.value)) {\n          this.processKvp(\n            cipher,\n            field.label,\n            field.value,\n            field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n          );\n        }\n      } else {\n        this.processKvp(\n          cipher,\n          field.label,\n          field.value,\n          field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n        );\n      }\n    });\n  }\n\n  private processNote(cipher: CipherView, fields: any[]) {\n    fields.forEach((field: any) => {\n      if (this.isNullOrWhitespace(field.value) || field.type === \"section\") {\n        return;\n      }\n      this.processKvp(\n        cipher,\n        field.label,\n        field.value,\n        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text\n      );\n    });\n  }\n\n  private buildFolderTree(folders: any[]): any[] {\n    if (folders == null) {\n      return [];\n    }\n    const folderTree: any[] = [];\n    const map = new Map<string, any>([]);\n    folders.forEach((obj: any) => {\n      map.set(obj.uuid, obj);\n      obj.children = [];\n    });\n    folders.forEach((obj: any) => {\n      if (obj.parent_uuid != null && obj.parent_uuid !== \"\" && map.has(obj.parent_uuid)) {\n        map.get(obj.parent_uuid).children.push(obj);\n      } else {\n        folderTree.push(obj);\n      }\n    });\n    return folderTree;\n  }\n\n  private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\n    if (tree == null) {\n      return;\n    }\n    tree.forEach((f: any) => {\n      if (f.title != null && f.title.trim() !== \"\") {\n        let title = f.title.trim();\n        if (titlePrefix != null && titlePrefix.trim() !== \"\") {\n          title = titlePrefix + \"/\" + title;\n        }\n        map.set(f.uuid, title);\n        if (f.children != null && f.children.length !== 0) {\n          this.flattenFolderTree(title, f.children, map);\n        }\n      }\n    });\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results\n      .filter((value) => {\n        return value.url !== \"chrome://FirefoxAccounts\";\n      })\n      .forEach((value) => {\n        const cipher = this.initLoginCipher();\n        const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\n        cipher.name = this.getValueOrDefault(this.nameFromUrl(url), \"--\");\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.uris = this.makeUriArray(url);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.data == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    for (const key in results.data) {\n      // eslint-disable-next-line\n      if (!results.data.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const value = results.data[key];\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.service);\n      cipher.notes = this.getValueOrDefault(value.notes);\n\n      if (value.style === \"website\" || value.style === \"globe\") {\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.uris = this.makeUriArray(value.url);\n      } else if (value.style === \"creditcard\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.username);\n        cipher.card.number = this.getValueOrDefault(value.creditNumber);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.creditCvv);\n        if (!this.isNullOrWhitespace(value.creditExpiry)) {\n          if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n            this.processKvp(cipher, \"Expiration\", value.creditExpiry);\n          }\n        }\n        if (!this.isNullOrWhitespace(value.password)) {\n          this.processKvp(cipher, \"PIN\", value.password);\n        }\n      } else {\n        continue;\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || Object.keys(results).length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    for (const keyRing in results) {\n      if (\n        !results.hasOwnProperty(keyRing) || // eslint-disable-line\n        this.isNullOrWhitespace(keyRing) ||\n        results[keyRing].length === 0\n      ) {\n        continue;\n      }\n\n      results[keyRing].forEach((value: any) => {\n        if (\n          this.isNullOrWhitespace(value.display_name) ||\n          value.display_name.indexOf(\"http\") !== 0\n        ) {\n          return;\n        }\n\n        this.processFolder(result, keyRing);\n        const cipher = this.initLoginCipher();\n        cipher.name = value.display_name.replace(\"http://\", \"\").replace(\"https://\", \"\");\n        if (cipher.name.length > 30) {\n          cipher.name = cipher.name.substring(0, 30);\n        }\n        cipher.login.password = this.getValueOrDefault(value.secret);\n        cipher.login.uris = this.makeUriArray(value.display_name);\n\n        if (value.attributes != null) {\n          cipher.login.username =\n            value.attributes != null\n              ? this.getValueOrDefault(value.attributes.username_value)\n              : null;\n          for (const attr in value.attributes) {\n            if (\n              !value.attributes.hasOwnProperty(attr) || // eslint-disable-line\n              attr === \"username_value\" ||\n              attr === \"xdg:schema\"\n            ) {\n              continue;\n            }\n            this.processKvp(cipher, attr, value.attributes[attr]);\n          }\n        }\n\n        this.convertToNoteIfNeeded(cipher);\n        this.cleanupCipher(cipher);\n        result.ciphers.push(cipher);\n      });\n    }\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","export class ImportError extends Error {\n  constructor(message?: string, public passwordRequired: boolean = false) {\n    super(message);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst NotesHeader = \"Notes\\n\\n\";\nconst ApplicationsHeader = \"Applications\\n\\n\";\nconst WebsitesHeader = \"Websites\\n\\n\";\nconst Delimiter = \"\\n---\\n\";\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n\n    let notesData: string;\n    let applicationsData: string;\n    let websitesData: string;\n    let workingData = this.splitNewLine(data).join(\"\\n\");\n\n    if (workingData.indexOf(NotesHeader) !== -1) {\n      const parts = workingData.split(NotesHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        notesData = parts[1];\n      }\n    }\n    if (workingData.indexOf(ApplicationsHeader) !== -1) {\n      const parts = workingData.split(ApplicationsHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        applicationsData = parts[1];\n      }\n    }\n    if (workingData.indexOf(WebsitesHeader) === 0) {\n      const parts = workingData.split(WebsitesHeader);\n      if (parts.length > 1) {\n        workingData = parts[0];\n        websitesData = parts[1];\n      }\n    }\n\n    const notes = this.parseDataCategory(notesData);\n    const applications = this.parseDataCategory(applicationsData);\n    const websites = this.parseDataCategory(websitesData);\n\n    notes.forEach((n) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(n.get(\"Name\"));\n      cipher.notes = this.getValueOrDefault(n.get(\"Text\"));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    websites.concat(applications).forEach((w) => {\n      const cipher = this.initLoginCipher();\n      const nameKey = w.has(\"Website name\") ? \"Website name\" : \"Application\";\n      cipher.name = this.getValueOrDefault(w.get(nameKey), \"\");\n      if (!this.isNullOrWhitespace(w.get(\"Login name\"))) {\n        if (!this.isNullOrWhitespace(cipher.name)) {\n          cipher.name += \": \";\n        }\n        cipher.name += w.get(\"Login name\");\n      }\n      cipher.notes = this.getValueOrDefault(w.get(\"Comment\"));\n      if (w.has(\"Website URL\")) {\n        cipher.login.uris = this.makeUriArray(w.get(\"Website URL\"));\n      }\n      cipher.login.username = this.getValueOrDefault(w.get(\"Login\"));\n      cipher.login.password = this.getValueOrDefault(w.get(\"Password\"));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseDataCategory(data: string): Map<string, string>[] {\n    if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n      return [];\n    }\n    const items: Map<string, string>[] = [];\n    data.split(Delimiter).forEach((p) => {\n      if (p.indexOf(\"\\n\") === -1) {\n        return;\n      }\n      const item = new Map<string, string>();\n      let itemComment: string;\n      let itemCommentKey: string;\n      p.split(\"\\n\").forEach((l) => {\n        if (itemComment != null) {\n          itemComment += \"\\n\" + l;\n          return;\n        }\n        const colonIndex = l.indexOf(\":\");\n        let key: string;\n        let val: string;\n        if (colonIndex === -1) {\n          return;\n        } else {\n          key = l.substring(0, colonIndex);\n          if (l.length > colonIndex + 1) {\n            val = l.substring(colonIndex + 2);\n          }\n        }\n        if (key != null) {\n          item.set(key, val);\n        }\n        if (key === \"Comment\" || key === \"Text\") {\n          itemComment = val;\n          itemCommentKey = key;\n        }\n      });\n      if (itemComment != null && itemCommentKey != null) {\n        item.set(itemCommentKey, itemComment);\n      }\n      if (item.size === 0) {\n        return;\n      }\n      items.push(item);\n    });\n    return items;\n  }\n}\n","import { FieldType } from \"../enums/fieldType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    const rootGroup = doc.querySelector(\"KeePassFile > Root > Group\");\n    if (rootGroup == null) {\n      this.result.errorMessage = \"Missing `KeePassFile > Root > Group` node.\";\n      this.result.success = false;\n      return Promise.resolve(this.result);\n    }\n\n    this.traverse(rootGroup, true, \"\");\n\n    if (this.organization) {\n      this.moveFoldersToCollections(this.result);\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n    const folderIndex = this.result.folders.length;\n    let groupName = groupPrefixName;\n\n    if (!isRootNode) {\n      if (groupName !== \"\") {\n        groupName += \"/\";\n      }\n      const nameEl = this.querySelectorDirectChild(node, \"Name\");\n      groupName += nameEl == null ? \"-\" : nameEl.textContent;\n      const folder = new FolderView();\n      folder.name = groupName;\n      this.result.folders.push(folder);\n    }\n\n    this.querySelectorAllDirectChild(node, \"Entry\").forEach((entry) => {\n      const cipherIndex = this.result.ciphers.length;\n\n      const cipher = this.initLoginCipher();\n      this.querySelectorAllDirectChild(entry, \"String\").forEach((entryString) => {\n        const valueEl = this.querySelectorDirectChild(entryString, \"Value\");\n        const value = valueEl != null ? valueEl.textContent : null;\n        if (this.isNullOrWhitespace(value)) {\n          return;\n        }\n        const keyEl = this.querySelectorDirectChild(entryString, \"Key\");\n        const key = keyEl != null ? keyEl.textContent : null;\n\n        if (key === \"URL\") {\n          cipher.login.uris = this.makeUriArray(value);\n        } else if (key === \"UserName\") {\n          cipher.login.username = value;\n        } else if (key === \"Password\") {\n          cipher.login.password = value;\n        } else if (key === \"otp\") {\n          cipher.login.totp = value.replace(\"key=\", \"\");\n        } else if (key === \"Title\") {\n          cipher.name = value;\n        } else if (key === \"Notes\") {\n          cipher.notes += value + \"\\n\";\n        } else {\n          let type = FieldType.Text;\n          const attrs = valueEl.attributes as any;\n          if (\n            attrs.length > 0 &&\n            attrs.ProtectInMemory != null &&\n            attrs.ProtectInMemory.value === \"True\"\n          ) {\n            type = FieldType.Hidden;\n          }\n          this.processKvp(cipher, key, value, type);\n        }\n      });\n\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n\n      if (!isRootNode) {\n        this.result.folderRelationships.push([cipherIndex, folderIndex]);\n      }\n    });\n\n    this.querySelectorAllDirectChild(node, \"Group\").forEach((group) => {\n      this.traverse(group, false, groupName);\n    });\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.isNullOrWhitespace(value.Title)) {\n        return;\n      }\n\n      value.Group =\n        !this.isNullOrWhitespace(value.Group) && value.Group.startsWith(\"Root/\")\n          ? value.Group.replace(\"Root/\", \"\")\n          : value.Group;\n      const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n      this.processFolder(result, groupName);\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.name = this.getValueOrDefault(value.Title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../../models/domain/importResult\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 6) {\n        return;\n      }\n\n      this.processFolder(result, value[0]);\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[5]) + \"\\n\";\n      cipher.name = this.getValueOrDefault(value[1], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[2]);\n      cipher.login.password = this.getValueOrDefault(value[3]);\n      cipher.login.uris = this.makeUriArray(value[4]);\n\n      if (value.length > 7) {\n        // we have some custom fields.\n        for (let i = 7; i < value.length; i = i + 2) {\n          this.processKvp(cipher, value[i], value[i + 1]);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { IdentityView } from \"../models/view/identityView\";\nimport { LoginView } from \"../models/view/loginView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipherIndex = result.ciphers.length;\n      let folderIndex = result.folders.length;\n      let grouping = value.grouping;\n      if (grouping != null) {\n        // eslint-disable-next-line\n        grouping = grouping.replace(/\\\\/g, \"/\").replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, \"\");\n      }\n      const hasFolder = this.getValueOrDefault(grouping, \"(none)\") !== \"(none)\";\n      let addFolder = hasFolder;\n\n      if (hasFolder) {\n        for (let i = 0; i < result.folders.length; i++) {\n          if (result.folders[i].name === grouping) {\n            addFolder = false;\n            folderIndex = i;\n            break;\n          }\n        }\n      }\n\n      const cipher = this.buildBaseCipher(value);\n      if (cipher.type === CipherType.Login) {\n        cipher.notes = this.getValueOrDefault(value.extra);\n        cipher.login = new LoginView();\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.totp = this.getValueOrDefault(value.totp);\n      } else if (cipher.type === CipherType.SecureNote) {\n        this.parseSecureNote(value, cipher);\n      } else if (cipher.type === CipherType.Card) {\n        cipher.card = this.parseCard(value);\n        cipher.notes = this.getValueOrDefault(value.notes);\n      } else if (cipher.type === CipherType.Identity) {\n        cipher.identity = this.parseIdentity(value);\n        cipher.notes = this.getValueOrDefault(value.notes);\n        if (!this.isNullOrWhitespace(value.ccnum)) {\n          // there is a card on this identity too\n          const cardCipher = this.buildBaseCipher(value);\n          cardCipher.identity = null;\n          cardCipher.type = CipherType.Card;\n          cardCipher.card = this.parseCard(value);\n          result.ciphers.push(cardCipher);\n        }\n      }\n\n      result.ciphers.push(cipher);\n\n      if (addFolder) {\n        const f = new FolderView();\n        f.name = grouping;\n        result.folders.push(f);\n      }\n      if (hasFolder) {\n        result.folderRelationships.push([cipherIndex, folderIndex]);\n      }\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private buildBaseCipher(value: any) {\n    const cipher = new CipherView();\n    // eslint-disable-next-line\n    if (value.hasOwnProperty(\"profilename\") && value.hasOwnProperty(\"profilelanguage\")) {\n      // form fill\n      cipher.favorite = false;\n      cipher.name = this.getValueOrDefault(value.profilename, \"--\");\n      cipher.type = CipherType.Card;\n\n      if (\n        !this.isNullOrWhitespace(value.title) ||\n        !this.isNullOrWhitespace(value.firstname) ||\n        !this.isNullOrWhitespace(value.lastname) ||\n        !this.isNullOrWhitespace(value.address1) ||\n        !this.isNullOrWhitespace(value.phone) ||\n        !this.isNullOrWhitespace(value.username) ||\n        !this.isNullOrWhitespace(value.email)\n      ) {\n        cipher.type = CipherType.Identity;\n      }\n    } else {\n      // site or secure note\n      cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, \"0\") === \"1\";\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.type = value.url === \"http://sn\" ? CipherType.SecureNote : CipherType.Login;\n    }\n    return cipher;\n  }\n\n  private parseCard(value: any): CardView {\n    const card = new CardView();\n    card.cardholderName = this.getValueOrDefault(value.ccname);\n    card.number = this.getValueOrDefault(value.ccnum);\n    card.code = this.getValueOrDefault(value.cccsc);\n    card.brand = this.getCardBrand(value.ccnum);\n\n    if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf(\"-\") > -1) {\n      const ccexpParts = (value.ccexp as string).split(\"-\");\n      if (ccexpParts.length > 1) {\n        card.expYear = ccexpParts[0];\n        card.expMonth = ccexpParts[1];\n        if (card.expMonth.length === 2 && card.expMonth[0] === \"0\") {\n          card.expMonth = card.expMonth[1];\n        }\n      }\n    }\n\n    return card;\n  }\n\n  private parseIdentity(value: any): IdentityView {\n    const identity = new IdentityView();\n    identity.title = this.getValueOrDefault(value.title);\n    identity.firstName = this.getValueOrDefault(value.firstname);\n    identity.middleName = this.getValueOrDefault(value.middlename);\n    identity.lastName = this.getValueOrDefault(value.lastname);\n    identity.username = this.getValueOrDefault(value.username);\n    identity.company = this.getValueOrDefault(value.company);\n    identity.ssn = this.getValueOrDefault(value.ssn);\n    identity.address1 = this.getValueOrDefault(value.address1);\n    identity.address2 = this.getValueOrDefault(value.address2);\n    identity.address3 = this.getValueOrDefault(value.address3);\n    identity.city = this.getValueOrDefault(value.city);\n    identity.state = this.getValueOrDefault(value.state);\n    identity.postalCode = this.getValueOrDefault(value.zip);\n    identity.country = this.getValueOrDefault(value.country);\n    identity.email = this.getValueOrDefault(value.email);\n    identity.phone = this.getValueOrDefault(value.phone);\n\n    if (!this.isNullOrWhitespace(identity.title)) {\n      identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n    }\n\n    return identity;\n  }\n\n  private parseSecureNote(value: any, cipher: CipherView) {\n    const extraParts = this.splitNewLine(value.extra);\n    let processedNote = false;\n\n    if (extraParts.length) {\n      const typeParts = extraParts[0].split(\":\");\n      if (\n        typeParts.length > 1 &&\n        typeParts[0] === \"NoteType\" &&\n        (typeParts[1] === \"Credit Card\" || typeParts[1] === \"Address\")\n      ) {\n        if (typeParts[1] === \"Credit Card\") {\n          const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\n            Number: \"number\",\n            \"Name on Card\": \"cardholderName\",\n            \"Security Code\": \"code\",\n            // LP provides date in a format like 'June,2020'\n            // Store in expMonth, then parse and modify\n            \"Expiration Date\": \"expMonth\",\n          });\n\n          if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === \",\") {\n            // No expiration data\n            mappedData.expMonth = undefined;\n          } else {\n            const [monthString, year] = mappedData.expMonth.split(\",\");\n            // Parse month name into number\n            if (!this.isNullOrWhitespace(monthString)) {\n              const month = new Date(Date.parse(monthString.trim() + \" 1, 2012\")).getMonth() + 1;\n              if (isNaN(month)) {\n                mappedData.expMonth = undefined;\n              } else {\n                mappedData.expMonth = month.toString();\n              }\n            } else {\n              mappedData.expMonth = undefined;\n            }\n            if (!this.isNullOrWhitespace(year)) {\n              mappedData.expYear = year;\n            }\n          }\n\n          cipher.type = CipherType.Card;\n          cipher.card = mappedData;\n        } else if (typeParts[1] === \"Address\") {\n          const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\n            Title: \"title\",\n            \"First Name\": \"firstName\",\n            \"Last Name\": \"lastName\",\n            \"Middle Name\": \"middleName\",\n            Company: \"company\",\n            \"Address 1\": \"address1\",\n            \"Address 2\": \"address2\",\n            \"Address 3\": \"address3\",\n            \"City / Town\": \"city\",\n            State: \"state\",\n            \"Zip / Postal Code\": \"postalCode\",\n            Country: \"country\",\n            \"Email Address\": \"email\",\n            Username: \"username\",\n          });\n          cipher.type = CipherType.Identity;\n          cipher.identity = mappedData;\n        }\n        processedNote = true;\n      }\n    }\n\n    if (!processedNote) {\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n      cipher.notes = this.getValueOrDefault(value.extra);\n    }\n  }\n\n  private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\n    const dataObj: any = {};\n\n    let processingNotes = false;\n    extraParts.forEach((extraPart) => {\n      let key: string = null;\n      let val: string = null;\n      if (!processingNotes) {\n        if (this.isNullOrWhitespace(extraPart)) {\n          return;\n        }\n        const colonIndex = extraPart.indexOf(\":\");\n        if (colonIndex === -1) {\n          key = extraPart;\n        } else {\n          key = extraPart.substring(0, colonIndex);\n          if (extraPart.length > colonIndex) {\n            val = extraPart.substring(colonIndex + 1);\n          }\n        }\n        if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === \"NoteType\") {\n          return;\n        }\n      }\n\n      if (processingNotes) {\n        cipher.notes += \"\\n\" + extraPart;\n      } else if (key === \"Notes\") {\n        if (!this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes += \"\\n\" + val;\n        } else {\n          cipher.notes = val;\n        }\n        processingNotes = true;\n        // eslint-disable-next-line\n      } else if (map.hasOwnProperty(key)) {\n        dataObj[map[key]] = val;\n      } else {\n        this.processKvp(cipher, key, val);\n      }\n    });\n\n    return dataObj;\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 4) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[2]);\n      cipher.login.password = this.getValueOrDefault(value[3]);\n      cipher.login.uris = this.makeUriArray(value[1]);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.DisplayName, \"--\");\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.login.username = this.getValueOrDefault(value.UserName);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 3) {\n        return;\n      }\n\n      const folderName =\n        this.getValueOrDefault(value[0], \"Unassigned\") !== \"Unassigned\" ? value[0] : null;\n      this.processFolder(result, folderName);\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[2], \"--\");\n\n      if (value[1] === \"Web Logins\" || value[1] === \"Login\") {\n        cipher.login.uris = this.makeUriArray(value[4]);\n        cipher.login.username = this.getValueOrDefault(value[5]);\n        cipher.login.password = this.getValueOrDefault(value[6]);\n        cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split(\"\\\\n\").join(\"\\n\") : null;\n      } else if (value.length > 3) {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n        for (let i = 3; i < value.length; i++) {\n          if (!this.isNullOrWhitespace(value[i])) {\n            cipher.notes += value[i] + \"\\n\";\n          }\n        }\n      }\n\n      if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n        cipher.name = value[1] + \": \" + cipher.name;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { IdentityView } from \"../models/view/identityView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst mappedBaseColumns = [\"nickname\", \"additionalInfo\"];\nconst _mappedUserAccountColumns = new Set(\n  mappedBaseColumns.concat([\"url\", \"username\", \"password\", \"twofaSecret\"])\n);\nconst _mappedCreditCardColumns = new Set(\n  mappedBaseColumns.concat([\"cardNumber\", \"cardName\", \"exp_month\", \"exp_year\", \"cvv\"])\n);\n\nconst _mappedIdentityColumns = new Set(\n  mappedBaseColumns.concat([\n    \"title\",\n    \"firstName\",\n    \"middleName\",\n    \"lastName\",\n    \"email\",\n    \"firstAddressLine\",\n    \"secondAddressLine\",\n    \"city\",\n    \"country\",\n    \"zipCode\",\n  ])\n);\n\nconst _mappedIdCardColumns = new Set(mappedBaseColumns.concat([\"idName\", \"idNumber\", \"idCountry\"]));\n\nconst _mappedTwoFaColumns = new Set(mappedBaseColumns.concat([\"authToken\"]));\n\nconst _mappedUserNoteColumns = new Set(mappedBaseColumns.concat([\"content\"]));\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.nickname, \"--\");\n      cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n      if (value.url !== undefined) {\n        // Accounts\n        cipher.login.uris = this.makeUriArray(value.url);\n        cipher.login.username = this.getValueOrDefault(value.username);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.totp = this.getValueOrDefault(value.twofaSecret);\n\n        this.importUnmappedFields(cipher, value, _mappedUserAccountColumns);\n      } else if (value.authToken !== undefined) {\n        // TwoFA\n        cipher.login.totp = this.getValueOrDefault(value.authToken);\n\n        this.importUnmappedFields(cipher, value, _mappedTwoFaColumns);\n      } else if (value.cardNumber !== undefined) {\n        // Cards\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n        cipher.card.number = this.getValueOrDefault(value.cardNumber);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n        cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n        cipher.card.code = this.getValueOrDefault(value.cvv);\n\n        this.importUnmappedFields(cipher, value, _mappedCreditCardColumns);\n      } else if (value.firstName !== undefined) {\n        // Identities\n        cipher.identity = new IdentityView();\n        cipher.type = CipherType.Identity;\n        cipher.identity.title = this.getValueOrDefault(value.title);\n        cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n        cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n        cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n        cipher.identity.phone = this.getValueOrDefault(value.number);\n        cipher.identity.email = this.getValueOrDefault(value.email);\n        cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n        cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n        cipher.identity.city = this.getValueOrDefault(value.city);\n        cipher.identity.country = this.getValueOrDefault(value.country);\n        cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n\n        this.importUnmappedFields(cipher, value, _mappedIdentityColumns);\n      } else if (value.idType !== undefined) {\n        // IdCards\n\n        cipher.identity = new IdentityView();\n        cipher.type = CipherType.Identity;\n        this.processFullName(cipher, value.idName);\n        cipher.identity.country = this.getValueOrDefault(value.idCountry);\n\n        switch (value.idType) {\n          // case \"Driver's License\":\n          // case \"ID Card\":\n          // case \"Outdoor License\":\n          // case \"Software License\":\n          // case \"Tax Number\":\n          // case \"Bank Account\":\n          // case \"Insurance Card\":\n          // case \"Health Card\":\n          // case \"Membership\":\n          // case \"Database\":\n          // case \"Reward Program\":\n          // case \"Tour Visa\":\n          case \"Passport\":\n            cipher.identity.passportNumber = value.idNumber;\n            break;\n          case \"Social Security\":\n            cipher.identity.ssn = value.idNumber;\n            break;\n          default:\n            cipher.identity.licenseNumber = value.idNumber;\n            break;\n        }\n\n        this.importUnmappedFields(cipher, value, _mappedIdCardColumns);\n      } else if (value.content !== undefined) {\n        // Notes\n        cipher.secureNote = new SecureNoteView();\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote.type = SecureNoteType.Generic;\n        cipher.notes = this.getValueOrDefault(value.content);\n\n        this.importUnmappedFields(cipher, value, _mappedUserNoteColumns);\n      } else {\n        return;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  importUnmappedFields(cipher: CipherView, row: any, mappedValues: Set<string>) {\n    const unmappedFields = Object.keys(row).filter((x) => !mappedValues.has(x));\n    unmappedFields.forEach((key) => {\n      const item = row as any;\n      this.processKvp(cipher, key, item[key]);\n    });\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { LoginView } from \"../models/view/loginView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\ntype nodePassCsvParsed = {\n  name: string;\n  url: string;\n  username: string;\n  password: string;\n  note: string;\n  cardholdername: string;\n  cardnumber: string;\n  cvc: string;\n  expirydate: string;\n  zipcode: string;\n  folder: string;\n  full_name: string;\n  phone_number: string;\n  email: string;\n  address1: string;\n  address2: string;\n  city: string;\n  country: string;\n  state: string;\n};\n\nexport class NordPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results: nodePassCsvParsed[] = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((record) => {\n      const recordType = this.evaluateType(record);\n      if (recordType === undefined) {\n        return;\n      }\n\n      if (!this.organization) {\n        this.processFolder(result, record.folder);\n      }\n\n      const cipher = new CipherView();\n      cipher.name = this.getValueOrDefault(record.name, \"--\");\n      cipher.notes = this.getValueOrDefault(record.note);\n\n      switch (recordType) {\n        case CipherType.Login:\n          cipher.type = CipherType.Login;\n          cipher.login = new LoginView();\n          cipher.login.username = this.getValueOrDefault(record.username);\n          cipher.login.password = this.getValueOrDefault(record.password);\n          cipher.login.uris = this.makeUriArray(record.url);\n          break;\n        case CipherType.Card:\n          cipher.type = CipherType.Card;\n          cipher.card.cardholderName = this.getValueOrDefault(record.cardholdername);\n          cipher.card.number = this.getValueOrDefault(record.cardnumber);\n          cipher.card.code = this.getValueOrDefault(record.cvc);\n          cipher.card.brand = this.getCardBrand(cipher.card.number);\n          this.setCardExpiration(cipher, record.expirydate);\n          break;\n\n        case CipherType.Identity:\n          cipher.type = CipherType.Identity;\n\n          this.processFullName(cipher, this.getValueOrDefault(record.full_name));\n          cipher.identity.address1 = this.getValueOrDefault(record.address1);\n          cipher.identity.address2 = this.getValueOrDefault(record.address2);\n          cipher.identity.city = this.getValueOrDefault(record.city);\n          cipher.identity.state = this.getValueOrDefault(record.state);\n          cipher.identity.postalCode = this.getValueOrDefault(record.zipcode);\n          cipher.identity.country = this.getValueOrDefault(record.country);\n          if (cipher.identity.country != null) {\n            cipher.identity.country = cipher.identity.country.toUpperCase();\n          }\n          cipher.identity.email = this.getValueOrDefault(record.email);\n          cipher.identity.phone = this.getValueOrDefault(record.phone_number);\n          break;\n        case CipherType.SecureNote:\n          cipher.type = CipherType.SecureNote;\n          cipher.secureNote.type = SecureNoteType.Generic;\n          break;\n        default:\n          break;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private evaluateType(record: nodePassCsvParsed): CipherType {\n    if (!this.isNullOrWhitespace(record.username)) {\n      return CipherType.Login;\n    }\n\n    if (!this.isNullOrWhitespace(record.cardnumber)) {\n      return CipherType.Card;\n    }\n\n    if (!this.isNullOrWhitespace(record.full_name)) {\n      return CipherType.Identity;\n    }\n\n    if (!this.isNullOrWhitespace(record.note)) {\n      return CipherType.SecureNote;\n    }\n\n    return undefined;\n  }\n}\n","import { CipherView } from \"../../models/view/cipherView\";\n\nexport class CipherImportContext {\n  lowerProperty: string;\n  constructor(public importRecord: any, public property: string, public cipher: CipherView) {\n    this.lowerProperty = property.toLowerCase();\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { PasswordHistoryView } from \"../../models/view/passwordHistoryView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    data.split(this.newLineRegex).forEach((line) => {\n      if (this.isNullOrWhitespace(line) || line[0] !== \"{\") {\n        return;\n      }\n      const item = JSON.parse(line);\n      if (item.trashed === true) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n\n      if (this.isNullOrWhitespace(item.hmac)) {\n        this.processStandardItem(item, cipher);\n      } else {\n        this.processWinOpVaultItem(item, cipher);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      this.result.ciphers.push(cipher);\n    });\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processWinOpVaultItem(item: any, cipher: CipherView) {\n    if (item.overview != null) {\n      cipher.name = this.getValueOrDefault(item.overview.title);\n      if (item.overview.URLs != null) {\n        const urls: string[] = [];\n        item.overview.URLs.forEach((url: any) => {\n          if (!this.isNullOrWhitespace(url.u)) {\n            urls.push(url.u);\n          }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n      }\n    }\n\n    if (item.details != null) {\n      if (item.details.passwordHistory != null) {\n        this.parsePasswordHistory(item.details.passwordHistory, cipher);\n      }\n      if (\n        !this.isNullOrWhitespace(item.details.ccnum) ||\n        !this.isNullOrWhitespace(item.details.cvv)\n      ) {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n      } else if (\n        !this.isNullOrWhitespace(item.details.firstname) ||\n        !this.isNullOrWhitespace(item.details.address1)\n      ) {\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n      }\n      if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n        cipher.login.password = item.details.password;\n      }\n      if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n        cipher.notes = item.details.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n      }\n      if (item.details.fields != null) {\n        this.parseFields(item.details.fields, cipher, \"designation\", \"value\", \"name\");\n      }\n      if (item.details.sections != null) {\n        item.details.sections.forEach((section: any) => {\n          if (section.fields != null) {\n            this.parseFields(section.fields, cipher, \"n\", \"v\", \"t\");\n          }\n        });\n      }\n    }\n  }\n\n  private processStandardItem(item: any, cipher: CipherView) {\n    cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n    cipher.name = this.getValueOrDefault(item.title);\n\n    if (item.typeName === \"securenotes.SecureNote\") {\n      cipher.type = CipherType.SecureNote;\n      cipher.secureNote = new SecureNoteView();\n      cipher.secureNote.type = SecureNoteType.Generic;\n    } else if (item.typeName === \"wallet.financial.CreditCard\") {\n      cipher.type = CipherType.Card;\n      cipher.card = new CardView();\n    } else if (item.typeName === \"identities.Identity\") {\n      cipher.type = CipherType.Identity;\n      cipher.identity = new IdentityView();\n    } else {\n      cipher.login.uris = this.makeUriArray(item.location);\n    }\n\n    if (item.secureContents != null) {\n      if (item.secureContents.passwordHistory != null) {\n        this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n      }\n      if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n        cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n      }\n      if (cipher.type === CipherType.Login) {\n        if (!this.isNullOrWhitespace(item.secureContents.password)) {\n          cipher.login.password = item.secureContents.password;\n        }\n        if (item.secureContents.URLs != null) {\n          const urls: string[] = [];\n          item.secureContents.URLs.forEach((u: any) => {\n            if (!this.isNullOrWhitespace(u.url)) {\n              urls.push(u.url);\n            }\n          });\n          if (urls.length > 0) {\n            cipher.login.uris = this.makeUriArray(urls);\n          }\n        }\n      }\n      if (item.secureContents.fields != null) {\n        this.parseFields(item.secureContents.fields, cipher, \"designation\", \"value\", \"name\");\n      }\n      if (item.secureContents.sections != null) {\n        item.secureContents.sections.forEach((section: any) => {\n          if (section.fields != null) {\n            this.parseFields(section.fields, cipher, \"n\", \"v\", \"t\");\n          }\n        });\n      }\n    }\n  }\n\n  private parsePasswordHistory(items: any[], cipher: CipherView) {\n    const maxSize = items.length > 5 ? 5 : items.length;\n    cipher.passwordHistory = items\n      .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n      .sort((a, b) => b.time - a.time)\n      .slice(0, maxSize)\n      .map((h: any) => {\n        const ph = new PasswordHistoryView();\n        ph.password = h.value;\n        ph.lastUsedDate = new Date((\"\" + h.time).length >= 13 ? h.time : h.time * 1000);\n        return ph;\n      });\n  }\n\n  private parseFields(\n    fields: any[],\n    cipher: CipherView,\n    designationKey: string,\n    valueKey: string,\n    nameKey: string\n  ) {\n    fields.forEach((field: any) => {\n      if (field[valueKey] == null || field[valueKey].toString().trim() === \"\") {\n        return;\n      }\n\n      // TODO: when date FieldType exists, store this as a date field type instead of formatted Text if k is 'date'\n      const fieldValue =\n        field.k === \"date\"\n          ? new Date(field[valueKey] * 1000).toUTCString()\n          : field[valueKey].toString();\n      const fieldDesignation =\n        field[designationKey] != null ? field[designationKey].toString() : null;\n\n      if (cipher.type === CipherType.Login) {\n        if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === \"username\") {\n          cipher.login.username = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.login.password) &&\n          fieldDesignation === \"password\"\n        ) {\n          cipher.login.password = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.login.totp) &&\n          fieldDesignation != null &&\n          fieldDesignation.startsWith(\"TOTP_\")\n        ) {\n          cipher.login.totp = fieldValue;\n          return;\n        }\n      } else if (cipher.type === CipherType.Card) {\n        if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === \"ccnum\") {\n          cipher.card.number = fieldValue;\n          cipher.card.brand = this.getCardBrand(fieldValue);\n          return;\n        } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === \"cvv\") {\n          cipher.card.code = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.card.cardholderName) &&\n          fieldDesignation === \"cardholder\"\n        ) {\n          cipher.card.cardholderName = fieldValue;\n          return;\n        } else if (\n          this.isNullOrWhitespace(cipher.card.expiration) &&\n          fieldDesignation === \"expiry\" &&\n          fieldValue.length === 6\n        ) {\n          cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n          if (cipher.card.expMonth[0] === \"0\") {\n            cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n          }\n          cipher.card.expYear = (fieldValue as string).substr(0, 4);\n          return;\n        } else if (fieldDesignation === \"type\") {\n          // Skip since brand was determined from number above\n          return;\n        }\n      } else if (cipher.type === CipherType.Identity) {\n        const identity = cipher.identity;\n        if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === \"firstname\") {\n          identity.firstName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === \"lastname\") {\n          identity.lastName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === \"initial\") {\n          identity.middleName = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === \"defphone\") {\n          identity.phone = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === \"company\") {\n          identity.company = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === \"email\") {\n          identity.email = fieldValue;\n          return;\n        } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === \"username\") {\n          identity.username = fieldValue;\n          return;\n        } else if (fieldDesignation === \"address\") {\n          // fieldValue is an object casted into a string, so access the plain value instead\n          const { street, city, country, zip } = field[valueKey];\n          identity.address1 = this.getValueOrDefault(street);\n          identity.city = this.getValueOrDefault(city);\n          if (!this.isNullOrWhitespace(country)) {\n            identity.country = country.toUpperCase();\n          }\n          identity.postalCode = this.getValueOrDefault(zip);\n          return;\n        }\n      }\n\n      const fieldName = this.isNullOrWhitespace(field[nameKey]) ? \"no_name\" : field[nameKey];\n      if (\n        fieldName === \"password\" &&\n        cipher.passwordHistory != null &&\n        cipher.passwordHistory.some((h) => h.password === fieldValue)\n      ) {\n        return;\n      }\n\n      const fieldType = field.k === \"concealed\" ? FieldType.Hidden : FieldType.Text;\n      this.processKvp(cipher, fieldName, fieldValue, fieldType);\n    });\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\nimport { PasswordHistoryView } from \"../../models/view/passwordHistoryView\";\nimport { SecureNoteView } from \"../../models/view/secureNoteView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport {\n  CategoryEnum,\n  Details,\n  ExportData,\n  FieldsEntity,\n  Item,\n  LoginFieldTypeEnum,\n  Overview,\n  PasswordHistoryEntity,\n  SectionsEntity,\n  UrlsEntity,\n  Value,\n  VaultsEntity,\n} from \"./types/onepassword1PuxImporterTypes\";\n\nexport class OnePassword1PuxImporter extends BaseImporter implements Importer {\n  result = new ImportResult();\n\n  parse(data: string): Promise<ImportResult> {\n    const exportData: ExportData = JSON.parse(data);\n\n    const account = exportData.accounts[0];\n    // TODO Add handling of multiple vaults\n    // const personalVaults = account.vaults[0].filter((v) => v.attrs.type === VaultAttributeTypeEnum.Personal);\n    account.vaults.forEach((vault: VaultsEntity) => {\n      vault.items.forEach((item: Item) => {\n        if (item.trashed === true) {\n          return;\n        }\n\n        const cipher = this.initLoginCipher();\n\n        const category = item.categoryUuid as CategoryEnum;\n        switch (category) {\n          case CategoryEnum.Login:\n          case CategoryEnum.Database:\n          case CategoryEnum.Password:\n          case CategoryEnum.WirelessRouter:\n          case CategoryEnum.Server:\n          case CategoryEnum.API_Credential:\n            cipher.type = CipherType.Login;\n            cipher.login = new LoginView();\n            break;\n          case CategoryEnum.CreditCard:\n          case CategoryEnum.BankAccount:\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n            break;\n          case CategoryEnum.SecureNote:\n          case CategoryEnum.SoftwareLicense:\n          case CategoryEnum.EmailAccount:\n          case CategoryEnum.MedicalRecord:\n            // case CategoryEnum.Document:\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            break;\n          case CategoryEnum.Identity:\n          case CategoryEnum.DriversLicense:\n          case CategoryEnum.OutdoorLicense:\n          case CategoryEnum.Membership:\n          case CategoryEnum.Passport:\n          case CategoryEnum.RewardsProgram:\n          case CategoryEnum.SocialSecurityNumber:\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n            break;\n          default:\n            break;\n        }\n\n        cipher.favorite = item.favIndex === 1 ? true : false;\n\n        this.processOverview(item.overview, cipher);\n\n        this.processLoginFields(item, cipher);\n\n        this.processDetails(category, item.details, cipher);\n\n        this.parsePasswordHistory(item.details.passwordHistory, cipher);\n\n        this.processSections(category, item.details.sections, cipher);\n\n        if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n          cipher.notes = item.details.notesPlain.split(this.newLineRegex).join(\"\\n\") + \"\\n\";\n        }\n\n        this.convertToNoteIfNeeded(cipher);\n        this.cleanupCipher(cipher);\n        this.result.ciphers.push(cipher);\n      });\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(this.result);\n    }\n\n    this.result.success = true;\n    return Promise.resolve(this.result);\n  }\n\n  private processOverview(overview: Overview, cipher: CipherView) {\n    if (overview == null) {\n      return;\n    }\n\n    cipher.name = this.getValueOrDefault(overview.title);\n\n    if (overview.urls != null) {\n      const urls: string[] = [];\n      overview.urls.forEach((url: UrlsEntity) => {\n        if (!this.isNullOrWhitespace(url.url)) {\n          urls.push(url.url);\n        }\n      });\n      cipher.login.uris = this.makeUriArray(urls);\n    }\n\n    if (overview.tags != null && overview.tags.length > 0) {\n      const folderName = this.capitalize(overview.tags[0]);\n      this.processFolder(this.result, folderName);\n    }\n  }\n\n  private capitalize(inputString: string): string {\n    return inputString.trim().replace(/\\w\\S*/g, (w) => w.replace(/^\\w/, (c) => c.toUpperCase()));\n  }\n\n  private processLoginFields(item: Item, cipher: CipherView) {\n    if (item.details == null) {\n      return;\n    }\n\n    if (item.details.loginFields == null || item.details.loginFields.length === 0) {\n      return;\n    }\n\n    item.details.loginFields.forEach((loginField) => {\n      if (loginField.designation === \"username\" && loginField.value !== \"\") {\n        cipher.type = CipherType.Login;\n        cipher.login.username = loginField.value;\n        return;\n      }\n\n      if (loginField.designation === \"password\" && loginField.value !== \"\") {\n        cipher.type = CipherType.Login;\n        cipher.login.password = loginField.value;\n        return;\n      }\n\n      let fieldValue = loginField.value;\n      let fieldType: FieldType = FieldType.Text;\n      switch (loginField.fieldType) {\n        case LoginFieldTypeEnum.Password:\n          fieldType = FieldType.Hidden;\n          break;\n        case LoginFieldTypeEnum.CheckBox:\n          fieldValue = loginField.value !== \"\" ? \"true\" : \"false\";\n          fieldType = FieldType.Boolean;\n          break;\n        default:\n          break;\n      }\n      this.processKvp(cipher, loginField.name, fieldValue, fieldType);\n    });\n  }\n\n  private processDetails(category: CategoryEnum, details: Details, cipher: CipherView) {\n    if (category !== CategoryEnum.Password) {\n      return;\n    }\n\n    if (details == null) {\n      return;\n    }\n    cipher.login.password = details.password;\n  }\n\n  private processSections(category: CategoryEnum, sections: SectionsEntity[], cipher: CipherView) {\n    if (sections == null || sections.length === 0) {\n      return;\n    }\n\n    sections.forEach((section: SectionsEntity) => {\n      if (section.fields == null) {\n        return;\n      }\n\n      this.parseSectionFields(category, section.fields, cipher);\n    });\n  }\n\n  private parseSectionFields(category: CategoryEnum, fields: FieldsEntity[], cipher: CipherView) {\n    fields.forEach((field: FieldsEntity) => {\n      const valueKey = Object.keys(field.value)[0];\n      const anyField = field as any;\n\n      if (\n        anyField.value == null ||\n        anyField.value[valueKey] == null ||\n        anyField.value[valueKey] === \"\"\n      ) {\n        return;\n      }\n\n      const fieldName = this.getFieldName(field.id, field.title);\n      const fieldValue = this.extractValue(field.value, valueKey);\n\n      if (cipher.type === CipherType.Login) {\n        if (this.fillLogin(field, fieldValue, cipher)) {\n          return;\n        }\n\n        switch (category) {\n          case CategoryEnum.Login:\n          case CategoryEnum.Database:\n          case CategoryEnum.EmailAccount:\n          case CategoryEnum.WirelessRouter:\n            break;\n\n          case CategoryEnum.Server:\n            if (this.isNullOrWhitespace(cipher.login.uri) && field.id === \"url\") {\n              cipher.login.uris = this.makeUriArray(fieldValue);\n              return;\n            }\n            break;\n\n          case CategoryEnum.API_Credential:\n            if (this.fillApiCredentials(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          default:\n            break;\n        }\n      } else if (cipher.type === CipherType.Card) {\n        if (this.fillCreditCard(field, fieldValue, cipher)) {\n          return;\n        }\n\n        if (category === CategoryEnum.BankAccount) {\n          if (this.fillBankAccount(field, fieldValue, cipher)) {\n            return;\n          }\n        }\n      } else if (cipher.type === CipherType.Identity) {\n        if (this.fillIdentity(field, fieldValue, cipher)) {\n          return;\n        }\n        if (valueKey === \"address\") {\n          // fieldValue is an object casted into a string, so access the plain value instead\n          const { street, city, country, zip, state } = field.value.address;\n          cipher.identity.address1 = this.getValueOrDefault(street);\n          cipher.identity.city = this.getValueOrDefault(city);\n          if (!this.isNullOrWhitespace(country)) {\n            cipher.identity.country = country.toUpperCase();\n          }\n          cipher.identity.postalCode = this.getValueOrDefault(zip);\n          cipher.identity.state = this.getValueOrDefault(state);\n          return;\n        }\n\n        switch (category) {\n          case CategoryEnum.Identity:\n            break;\n          case CategoryEnum.DriversLicense:\n            if (this.fillDriversLicense(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.OutdoorLicense:\n            if (this.fillOutdoorLicense(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.Membership:\n            if (this.fillMembership(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.Passport:\n            if (this.fillPassport(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.RewardsProgram:\n            if (this.fillRewardsProgram(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          case CategoryEnum.SocialSecurityNumber:\n            if (this.fillSSN(field, fieldValue, cipher)) {\n              return;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n\n      // Do not include a password field if it's already in the history\n      if (\n        field.title === \"password\" &&\n        cipher.passwordHistory != null &&\n        cipher.passwordHistory.some((h) => h.password === fieldValue)\n      ) {\n        return;\n      }\n\n      // TODO ?? If one of the fields is marked as guarded, then activate Password-Reprompt for the entire item\n      if (field.guarded && cipher.reprompt === CipherRepromptType.None) {\n        cipher.reprompt = CipherRepromptType.Password;\n      }\n\n      const fieldType = valueKey === \"concealed\" ? FieldType.Hidden : FieldType.Text;\n      this.processKvp(cipher, fieldName, fieldValue, fieldType);\n    });\n  }\n\n  private getFieldName(id: string, title: string): string {\n    if (this.isNullOrWhitespace(title)) {\n      return id;\n    }\n\n    // Naive approach of checking if the fields id is usable\n    if (id.length > 25 && RegExp(/[0-9]{2}[A-Z]{2}/, \"i\").test(id)) {\n      return title;\n    }\n    return id;\n  }\n\n  private extractValue(value: Value, valueKey: string): string {\n    if (valueKey === \"date\") {\n      return new Date(value.date * 1000).toUTCString();\n    }\n\n    if (valueKey === \"monthYear\") {\n      return value.monthYear.toString();\n    }\n\n    return (value as any)[valueKey];\n  }\n\n  private fillLogin(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    const fieldName = this.getFieldName(field.id, field.title);\n\n    if (this.isNullOrWhitespace(cipher.login.username) && fieldName === \"username\") {\n      cipher.login.username = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.login.password) && fieldName === \"password\") {\n      cipher.login.password = fieldValue;\n      return true;\n    }\n\n    if (\n      this.isNullOrWhitespace(cipher.login.totp) &&\n      field.id != null &&\n      field.id.startsWith(\"TOTP_\")\n    ) {\n      cipher.login.totp = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillApiCredentials(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    const fieldName = this.getFieldName(field.id, field.title);\n\n    if (this.isNullOrWhitespace(cipher.login.password) && fieldName === \"credential\") {\n      cipher.login.password = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.login.uri) && fieldName === \"hostname\") {\n      cipher.login.uris = this.makeUriArray(fieldValue);\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillCreditCard(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.card.number) && field.id === \"ccnum\") {\n      cipher.card.number = fieldValue;\n      cipher.card.brand = this.getCardBrand(fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.card.code) && field.id === \"cvv\") {\n      cipher.card.code = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.card.cardholderName) && field.id === \"cardholder\") {\n      cipher.card.cardholderName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.card.expiration) && field.id === \"expiry\") {\n      const monthYear: string = fieldValue.toString().trim();\n      cipher.card.expMonth = monthYear.substring(4, 6);\n      if (cipher.card.expMonth[0] === \"0\") {\n        cipher.card.expMonth = cipher.card.expMonth.substring(1, 2);\n      }\n      cipher.card.expYear = monthYear.substring(0, 4);\n      return true;\n    }\n\n    if (field.id === \"type\") {\n      // Skip since brand was determined from number above\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillBankAccount(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.card.cardholderName) && field.id === \"owner\") {\n      cipher.card.cardholderName = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillIdentity(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"firstname\") {\n      cipher.identity.firstName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.lastName) && field.id === \"lastname\") {\n      cipher.identity.lastName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.middleName) && field.id === \"initial\") {\n      cipher.identity.middleName = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.phone) && field.id === \"defphone\") {\n      cipher.identity.phone = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.company) && field.id === \"company\") {\n      cipher.identity.company = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.email) && field.id === \"email\") {\n      cipher.identity.email = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.username) && field.id === \"username\") {\n      cipher.identity.username = fieldValue;\n      return true;\n    }\n    return false;\n  }\n\n  private fillDriversLicense(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"fullname\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.address1) && field.id === \"address\") {\n      cipher.identity.address1 = fieldValue;\n      return true;\n    }\n\n    // TODO ISO code\n    if (this.isNullOrWhitespace(cipher.identity.country) && field.id === \"country\") {\n      cipher.identity.country = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.state) && field.id === \"state\") {\n      cipher.identity.state = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.licenseNumber) && field.id === \"number\") {\n      cipher.identity.licenseNumber = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillOutdoorLicense(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    // TODO ISO code\n    if (this.isNullOrWhitespace(cipher.identity.country) && field.id === \"country\") {\n      cipher.identity.country = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.state) && field.id === \"state\") {\n      cipher.identity.state = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillMembership(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"member_name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.company) && field.id === \"org_name\") {\n      cipher.identity.company = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.phone) && field.id === \"phone\") {\n      cipher.identity.phone = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillPassport(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"fullname\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    // TODO Iso\n    if (this.isNullOrWhitespace(cipher.identity.country) && field.id === \"issuing_country\") {\n      cipher.identity.country = fieldValue;\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.passportNumber) && field.id === \"number\") {\n      cipher.identity.passportNumber = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillRewardsProgram(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"member_name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.company) && field.id === \"company_name\") {\n      cipher.identity.company = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private fillSSN(field: FieldsEntity, fieldValue: string, cipher: CipherView): boolean {\n    if (this.isNullOrWhitespace(cipher.identity.firstName) && field.id === \"name\") {\n      this.processFullName(cipher, fieldValue);\n      return true;\n    }\n\n    if (this.isNullOrWhitespace(cipher.identity.ssn) && field.id === \"number\") {\n      cipher.identity.ssn = fieldValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  private parsePasswordHistory(historyItems: PasswordHistoryEntity[], cipher: CipherView) {\n    if (historyItems == null || historyItems.length === 0) {\n      return;\n    }\n\n    const maxSize = historyItems.length > 5 ? 5 : historyItems.length;\n    cipher.passwordHistory = historyItems\n      .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n      .sort((a, b) => b.time - a.time)\n      .slice(0, maxSize)\n      .map((h: any) => {\n        const ph = new PasswordHistoryView();\n        ph.password = h.value;\n        ph.lastUsedDate = new Date((\"\" + h.time).length >= 13 ? h.time : h.time * 1000);\n        return ph;\n      });\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { ImportResult } from \"../../models/domain/importResult\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { BaseImporter } from \"../baseImporter\";\nimport { Importer } from \"../importer\";\n\nimport { CipherImportContext } from \"./cipherImportContext\";\n\nexport const IgnoredProperties = [\n  \"ainfo\",\n  \"autosubmit\",\n  \"notesplain\",\n  \"ps\",\n  \"scope\",\n  \"tags\",\n  \"title\",\n  \"uuid\",\n  \"notes\",\n];\n\nexport abstract class OnePasswordCsvImporter extends BaseImporter implements Importer {\n  protected loginPropertyParsers = [\n    this.setLoginUsername,\n    this.setLoginPassword,\n    this.setLoginUris,\n  ];\n  protected creditCardPropertyParsers = [\n    this.setCreditCardNumber,\n    this.setCreditCardVerification,\n    this.setCreditCardCardholderName,\n    this.setCreditCardExpiry,\n  ];\n  protected identityPropertyParsers = [\n    this.setIdentityFirstName,\n    this.setIdentityInitial,\n    this.setIdentityLastName,\n    this.setIdentityUserName,\n    this.setIdentityEmail,\n    this.setIdentityPhone,\n    this.setIdentityCompany,\n  ];\n\n  abstract setCipherType(value: any, cipher: CipherView): void;\n\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true, {\n      quoteChar: '\"',\n      escapeChar: \"\\\\\",\n    });\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (this.isNullOrWhitespace(this.getProp(value, \"title\"))) {\n        return;\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(this.getProp(value, \"title\"), \"--\");\n\n      this.setNotes(value, cipher);\n\n      this.setCipherType(value, cipher);\n\n      let altUsername: string = null;\n      for (const property in value) {\n        // eslint-disable-next-line\n        if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n          continue;\n        }\n\n        const context = new CipherImportContext(value, property, cipher);\n        if (cipher.type === CipherType.Login && this.setKnownLoginValue(context)) {\n          continue;\n        } else if (cipher.type === CipherType.Card && this.setKnownCreditCardValue(context)) {\n          continue;\n        } else if (cipher.type === CipherType.Identity && this.setKnownIdentityValue(context)) {\n          continue;\n        }\n\n        altUsername = this.setUnknownValue(context, altUsername);\n      }\n\n      if (\n        cipher.type === CipherType.Login &&\n        !this.isNullOrWhitespace(altUsername) &&\n        this.isNullOrWhitespace(cipher.login.username) &&\n        altUsername.indexOf(\"://\") === -1\n      ) {\n        cipher.login.username = altUsername;\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  protected getProp(obj: any, name: string): any {\n    const lowerObj = Object.entries(obj).reduce((agg: any, entry: [string, any]) => {\n      agg[entry[0].toLowerCase()] = entry[1];\n      return agg;\n    }, {});\n    return lowerObj[name.toLowerCase()];\n  }\n\n  protected getPropByRegexp(obj: any, regexp: RegExp): any {\n    const matchingKeys = Object.keys(obj).reduce((agg: string[], key: string) => {\n      if (key.match(regexp)) {\n        agg.push(key);\n      }\n      return agg;\n    }, []);\n    if (matchingKeys.length === 0) {\n      return null;\n    } else {\n      return obj[matchingKeys[0]];\n    }\n  }\n\n  protected getPropIncluding(obj: any, name: string): any {\n    const includesMap = Object.keys(obj).reduce((agg: string[], entry: string) => {\n      if (entry.toLowerCase().includes(name.toLowerCase())) {\n        agg.push(entry);\n      }\n      return agg;\n    }, []);\n    if (includesMap.length === 0) {\n      return null;\n    } else {\n      return obj[includesMap[0]];\n    }\n  }\n\n  protected setNotes(importRecord: any, cipher: CipherView) {\n    cipher.notes =\n      this.getValueOrDefault(this.getProp(importRecord, \"notesPlain\"), \"\") +\n      \"\\n\" +\n      this.getValueOrDefault(this.getProp(importRecord, \"notes\"), \"\") +\n      \"\\n\";\n    cipher.notes.trim();\n  }\n\n  protected setKnownLoginValue(context: CipherImportContext): boolean {\n    return this.loginPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setKnownCreditCardValue(context: CipherImportContext): boolean {\n    return this.creditCardPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setKnownIdentityValue(context: CipherImportContext): boolean {\n    return this.identityPropertyParsers.reduce((agg: boolean, func) => {\n      if (!agg) {\n        agg = func.bind(this)(context);\n      }\n      return agg;\n    }, false);\n  }\n\n  protected setUnknownValue(context: CipherImportContext, altUsername: string): string {\n    if (\n      IgnoredProperties.indexOf(context.lowerProperty) === -1 &&\n      !context.lowerProperty.startsWith(\"section:\") &&\n      !context.lowerProperty.startsWith(\"section \")\n    ) {\n      if (altUsername == null && context.lowerProperty === \"email\") {\n        return context.importRecord[context.property];\n      } else if (\n        context.lowerProperty === \"created date\" ||\n        context.lowerProperty === \"modified date\"\n      ) {\n        const readableDate = new Date(\n          parseInt(context.importRecord[context.property], 10) * 1000\n        ).toUTCString();\n        this.processKvp(context.cipher, \"1Password \" + context.property, readableDate);\n        return null;\n      }\n      if (\n        context.lowerProperty.includes(\"password\") ||\n        context.lowerProperty.includes(\"key\") ||\n        context.lowerProperty.includes(\"secret\")\n      ) {\n        this.processKvp(\n          context.cipher,\n          context.property,\n          context.importRecord[context.property],\n          FieldType.Hidden\n        );\n      } else {\n        this.processKvp(context.cipher, context.property, context.importRecord[context.property]);\n      }\n    }\n    return null;\n  }\n\n  protected setIdentityFirstName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.firstName) &&\n      context.lowerProperty.includes(\"first name\")\n    ) {\n      context.cipher.identity.firstName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityInitial(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.middleName) &&\n      context.lowerProperty.includes(\"initial\")\n    ) {\n      context.cipher.identity.middleName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityLastName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.lastName) &&\n      context.lowerProperty.includes(\"last name\")\n    ) {\n      context.cipher.identity.lastName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityUserName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.username) &&\n      context.lowerProperty.includes(\"username\")\n    ) {\n      context.cipher.identity.username = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityCompany(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.company) &&\n      context.lowerProperty.includes(\"company\")\n    ) {\n      context.cipher.identity.company = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityPhone(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.phone) &&\n      context.lowerProperty.includes(\"default phone\")\n    ) {\n      context.cipher.identity.phone = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setIdentityEmail(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.identity.email) &&\n      context.lowerProperty.includes(\"email\")\n    ) {\n      context.cipher.identity.email = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardNumber(context: CipherImportContext): boolean {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.number) &&\n      context.lowerProperty.includes(\"number\")\n    ) {\n      context.cipher.card.number = context.importRecord[context.property];\n      context.cipher.card.brand = this.getCardBrand(context.cipher.card.number);\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardVerification(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.code) &&\n      context.lowerProperty.includes(\"verification number\")\n    ) {\n      context.cipher.card.code = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardCardholderName(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.cardholderName) &&\n      context.lowerProperty.includes(\"cardholder name\")\n    ) {\n      context.cipher.card.cardholderName = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setCreditCardExpiry(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.expiration) &&\n      context.lowerProperty.includes(\"expiry date\") &&\n      context.importRecord[context.property].length === 7\n    ) {\n      context.cipher.card.expMonth = (context.importRecord[context.property] as string).substr(\n        0,\n        2\n      );\n      if (context.cipher.card.expMonth[0] === \"0\") {\n        context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n      }\n      context.cipher.card.expYear = (context.importRecord[context.property] as string).substr(3, 4);\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginPassword(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.login.password) &&\n      context.lowerProperty === \"password\"\n    ) {\n      context.cipher.login.password = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginUsername(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.login.username) &&\n      context.lowerProperty === \"username\"\n    ) {\n      context.cipher.login.username = context.importRecord[context.property];\n      return true;\n    }\n    return false;\n  }\n\n  protected setLoginUris(context: CipherImportContext) {\n    if (\n      (context.cipher.login.uris == null || context.cipher.login.uris.length === 0) &&\n      context.lowerProperty === \"urls\"\n    ) {\n      const urls = context.importRecord[context.property].split(this.newLineRegex);\n      context.cipher.login.uris = this.makeUriArray(urls);\n      return true;\n    } else if (context.lowerProperty === \"url\") {\n      if (context.cipher.login.uris == null) {\n        context.cipher.login.uris = [];\n      }\n      context.cipher.login.uris.concat(this.makeUriArray(context.importRecord[context.property]));\n      return true;\n    }\n    return false;\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { Importer } from \"../importer\";\n\nimport { IgnoredProperties, OnePasswordCsvImporter } from \"./onepasswordCsvImporter\";\n\nexport class OnePasswordMacCsvImporter extends OnePasswordCsvImporter implements Importer {\n  setCipherType(value: any, cipher: CipherView) {\n    const onePassType = this.getValueOrDefault(this.getProp(value, \"type\"), \"Login\");\n    switch (onePassType) {\n      case \"Credit Card\":\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        IgnoredProperties.push(\"type\");\n        break;\n      case \"Identity\":\n        cipher.type = CipherType.Identity;\n        cipher.identity = new IdentityView();\n        IgnoredProperties.push(\"type\");\n        break;\n      case \"Login\":\n      case \"Secure Note\":\n        IgnoredProperties.push(\"type\");\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { CipherType } from \"../../enums/cipherType\";\nimport { CardView } from \"../../models/view/cardView\";\nimport { CipherView } from \"../../models/view/cipherView\";\nimport { IdentityView } from \"../../models/view/identityView\";\nimport { LoginView } from \"../../models/view/loginView\";\nimport { Importer } from \"../importer\";\n\nimport { CipherImportContext } from \"./cipherImportContext\";\nimport { OnePasswordCsvImporter } from \"./onepasswordCsvImporter\";\n\nexport class OnePasswordWinCsvImporter extends OnePasswordCsvImporter implements Importer {\n  constructor() {\n    super();\n    this.identityPropertyParsers.push(this.setIdentityAddress);\n  }\n\n  setCipherType(value: any, cipher: CipherView) {\n    cipher.type = CipherType.Login;\n    cipher.login = new LoginView();\n\n    if (\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: number/i)) &&\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /\\d+: expiry date/i))\n    ) {\n      cipher.type = CipherType.Card;\n      cipher.card = new CardView();\n    }\n\n    if (\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: first name/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: initial/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /name \\d+: last name/i)) ||\n      !this.isNullOrWhitespace(this.getPropByRegexp(value, /internet \\d+: email/i))\n    ) {\n      cipher.type = CipherType.Identity;\n      cipher.identity = new IdentityView();\n    }\n  }\n\n  setIdentityAddress(context: CipherImportContext) {\n    if (context.lowerProperty.match(/address \\d+: address/i)) {\n      this.processKvp(context.cipher, \"address\", context.importRecord[context.property]);\n      return true;\n    }\n    return false;\n  }\n\n  setCreditCardExpiry(context: CipherImportContext) {\n    if (\n      this.isNullOrWhitespace(context.cipher.card.expiration) &&\n      context.lowerProperty.includes(\"expiry date\")\n    ) {\n      const expSplit = (context.importRecord[context.property] as string).split(\"/\");\n      context.cipher.card.expMonth = expSplit[0];\n      if (context.cipher.card.expMonth[0] === \"0\" && context.cipher.card.expMonth.length === 2) {\n        context.cipher.card.expMonth = context.cipher.card.expMonth.substr(1, 1);\n      }\n      context.cipher.card.expYear = expSplit[2].length > 4 ? expSplit[2].substr(0, 4) : expSplit[2];\n      return true;\n    }\n    return false;\n  }\n}\n","export interface ExportData {\n  accounts?: AccountsEntity[] | null;\n}\nexport interface AccountsEntity {\n  attrs: AccountAttributes;\n  vaults?: VaultsEntity[] | null;\n}\nexport interface AccountAttributes {\n  accountName: string;\n  name: string;\n  avatar: string;\n  email: string;\n  uuid: string;\n  domain: string;\n}\nexport interface VaultsEntity {\n  attrs: VaultAttributes;\n  items?: Item[] | null;\n}\nexport interface VaultAttributes {\n  uuid: string;\n  desc: string;\n  avatar: string;\n  name: string;\n  type: string;\n}\n\nexport enum CategoryEnum {\n  Login = \"001\",\n  CreditCard = \"002\",\n  SecureNote = \"003\",\n  Identity = \"004\",\n  Password = \"005\",\n  Document = \"006\",\n  SoftwareLicense = \"100\",\n  BankAccount = \"101\",\n  Database = \"102\",\n  DriversLicense = \"103\",\n  OutdoorLicense = \"104\",\n  Membership = \"105\",\n  Passport = \"106\",\n  RewardsProgram = \"107\",\n  SocialSecurityNumber = \"108\",\n  WirelessRouter = \"109\",\n  Server = \"110\",\n  EmailAccount = \"111\",\n  API_Credential = \"112\",\n  MedicalRecord = \"113\",\n}\n\nexport interface Item {\n  uuid: string;\n  favIndex: number;\n  createdAt: number;\n  updatedAt: number;\n  trashed?: boolean;\n  categoryUuid: string;\n  details: Details;\n  overview: Overview;\n}\nexport interface Details {\n  loginFields?: (LoginFieldsEntity | null)[] | null;\n  notesPlain?: string | null;\n  sections?: (SectionsEntity | null)[] | null;\n  passwordHistory?: (PasswordHistoryEntity | null)[] | null;\n  documentAttributes?: DocumentAttributes | null;\n  password?: string | null;\n}\n\nexport enum LoginFieldTypeEnum {\n  TextOrHtml = \"T\",\n  EmailAddress = \"E\",\n  URL = \"U\",\n  Number = \"N\",\n  Password = \"P\",\n  TextArea = \"A\",\n  PhoneNumber = \"T\",\n  CheckBox = \"C\",\n}\nexport interface LoginFieldsEntity {\n  value: string;\n  id: string;\n  name: string;\n  fieldType: LoginFieldTypeEnum | string;\n  designation?: string | null;\n}\nexport interface SectionsEntity {\n  title: string;\n  name?: string | null;\n  fields?: FieldsEntity[] | null;\n}\nexport interface FieldsEntity {\n  title: string;\n  id: string;\n  value: Value;\n  indexAtSource: number;\n  guarded: boolean;\n  multiline: boolean;\n  dontGenerate: boolean;\n  placeholder?: string;\n  inputTraits: InputTraits;\n  clipboardFilter?: string | null;\n}\nexport interface Value {\n  totp?: string | null;\n  date?: number | null;\n  string?: string | null;\n  concealed?: string | null;\n  email?: string | null;\n  phone?: string | null;\n  menu?: string | null;\n  gender?: string | null;\n  monthYear?: number | null;\n  url?: string | null;\n  address?: Address | null;\n  creditCardType?: string | null;\n  creditCardNumber?: string | null;\n  reference?: string | null;\n}\nexport interface Address {\n  street: string;\n  city: string;\n  country: string;\n  zip: string;\n  state: string;\n}\nexport interface InputTraits {\n  keyboard: string;\n  correction: string;\n  capitalization: string;\n}\nexport interface PasswordHistoryEntity {\n  value: string;\n  time: number;\n}\nexport interface DocumentAttributes {\n  fileName: string;\n  documentId: string;\n  decryptedSize: number;\n}\nexport interface Overview {\n  subtitle: string;\n  title: string;\n  url: string;\n  urls?: UrlsEntity[] | null;\n  ps?: number | null;\n  pbe?: number | null;\n  pgrng?: boolean | null;\n  tags?: string[] | null;\n}\nexport interface UrlsEntity {\n  label: string;\n  url: string;\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let headers: string[] = null;\n    results.forEach((value) => {\n      if (headers == null) {\n        headers = value.map((v: string) => v);\n        return;\n      }\n\n      if (value.length < 2 || value.length !== headers.length) {\n        return;\n      }\n\n      if (!this.isNullOrWhitespace(value[1])) {\n        if (this.organization) {\n          const tags = (value[1] as string).split(\",\");\n          tags.forEach((tag) => {\n            tag = tag.trim();\n            let addCollection = true;\n            let collectionIndex = result.collections.length;\n\n            for (let i = 0; i < result.collections.length; i++) {\n              if (result.collections[i].name === tag) {\n                addCollection = false;\n                collectionIndex = i;\n                break;\n              }\n            }\n\n            if (addCollection) {\n              const collection = new CollectionView();\n              collection.name = tag;\n              result.collections.push(collection);\n            }\n\n            result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n          });\n        } else {\n          const tags = (value[1] as string).split(\",\");\n          const tag = tags.length > 0 ? tags[0].trim() : null;\n          this.processFolder(result, tag);\n        }\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n\n      for (let i = 2; i < value.length; i++) {\n        const header = headers[i].trim().toLowerCase();\n        if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n          continue;\n        }\n\n        if (this.usernameFieldNames.indexOf(header) > -1) {\n          cipher.login.username = value[i];\n        } else if (this.passwordFieldNames.indexOf(header) > -1) {\n          cipher.login.password = value[i];\n        } else if (this.uriFieldNames.indexOf(header) > -1) {\n          cipher.login.uris = this.makeUriArray(value[i]);\n        } else {\n          this.processKvp(cipher, headers[i], value[i]);\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      this.processFolder(result, this.getValue(\"category\", value));\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValue(\"description\", value);\n      cipher.name = this.getValueOrDefault(this.getValue(\"title\", value), \"--\");\n      cipher.login.username = this.getValue(\"username\", value);\n      cipher.login.password = this.getValue(\"password\", value);\n      cipher.login.uris = this.makeUriArray(this.getValue(\"site\", value));\n      this.processKvp(cipher, \"Password 2\", this.getValue(\"password2\", value));\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private getValue(key: string, value: any) {\n    return this.getValueOrDefault(value[key], this.getValueOrDefault(value[\" \" + key]));\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.length === 0) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((credential: any) => {\n      if (credential.tags != null && credential.tags.length > 0) {\n        const folderName = credential.tags[0].text;\n        this.processFolder(result, folderName);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = credential.label;\n\n      cipher.login.username = this.getValueOrDefault(credential.username);\n      if (this.isNullOrWhitespace(cipher.login.username)) {\n        cipher.login.username = this.getValueOrDefault(credential.email);\n      } else if (!this.isNullOrWhitespace(credential.email)) {\n        cipher.notes = \"Email: \" + credential.email + \"\\n\";\n      }\n\n      cipher.login.password = this.getValueOrDefault(credential.password);\n      cipher.login.uris = this.makeUriArray(credential.url);\n      cipher.notes += this.getValueOrDefault(credential.description, \"\");\n      if (credential.otp != null) {\n        cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n      }\n\n      if (credential.custom_fields != null) {\n        credential.custom_fields.forEach((customField: any) => {\n          switch (customField.field_type) {\n            case \"text\":\n            case \"password\":\n              this.processKvp(cipher, customField.label, customField.value);\n              break;\n          }\n        });\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n      const tags: string[] =\n        tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0\n          ? tagsJson.tags\n              .map((tagJson: string) => {\n                try {\n                  const t = JSON.parse(tagJson);\n                  return this.getValueOrDefault(t.tag);\n                } catch {\n                  // Ignore error\n                }\n                return null;\n              })\n              .filter((t: string) => !this.isNullOrWhitespace(t))\n          : null;\n\n      if (this.organization && tags != null && tags.length > 0) {\n        tags.forEach((tag) => {\n          let addCollection = true;\n          let collectionIndex = result.collections.length;\n\n          for (let i = 0; i < result.collections.length; i++) {\n            if (result.collections[i].name === tag) {\n              addCollection = false;\n              collectionIndex = i;\n              break;\n            }\n          }\n\n          if (addCollection) {\n            const collection = new CollectionView();\n            collection.name = tag;\n            result.collections.push(collection);\n          }\n\n          result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n        });\n      } else if (!this.organization && tags != null && tags.length > 0) {\n        this.processFolder(result, tags[0]);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Notes, \"\");\n      cipher.notes += \"\\n\\n\" + this.getValueOrDefault(value[\"Shared Notes\"], \"\") + \"\\n\";\n      cipher.name = this.getValueOrDefault(value[\"Entry Name\"], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[\"User ID\"]);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n\n      if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n        value.__parsed_extra.forEach((extra: string) => {\n          if (!this.isNullOrWhitespace(extra)) {\n            cipher.notes += \"\\n\" + extra;\n          }\n        });\n      }\n\n      const fieldsJson = !this.isNullOrWhitespace(value[\"Extra Fields\"])\n        ? JSON.parse(value[\"Extra Fields\"])\n        : null;\n      const fields =\n        fieldsJson != null && fieldsJson.extraFields != null && fieldsJson.extraFields.length > 0\n          ? fieldsJson.extraFields.map((fieldJson: string) => {\n              try {\n                return JSON.parse(fieldJson);\n              } catch {\n                // Ignore error\n              }\n              return null;\n            })\n          : null;\n      if (fields != null) {\n        fields.forEach((f: any) => {\n          if (f != null) {\n            this.processKvp(cipher, f.name, f.data);\n          }\n        });\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let newVersion = true;\n    results.forEach((value) => {\n      if (value.length !== 5 && value.length < 9) {\n        return;\n      }\n      const altFormat = value.length === 10 && value[0] === \"0\";\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], \"--\");\n      cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n      cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n      if (value.length === 5) {\n        newVersion = false;\n        cipher.notes = this.getValueOrDefault(value[4]);\n        cipher.login.uris = this.makeUriArray(value[3]);\n      } else {\n        const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], \"(None)\");\n        let folderName = folder !== \"(None)\" ? folder.split(\"\\\\\").join(\"/\") : null;\n        if (folderName != null) {\n          folderName = folder.split(\" > \").join(\"/\");\n          folderName = folder.split(\">\").join(\"/\");\n        }\n        this.processFolder(result, folderName);\n        cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n        cipher.login.uris = this.makeUriArray(value[4]);\n      }\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (newVersion && this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = JSON.parse(data);\n    if (results == null || results.items == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, string>();\n    results.folders.forEach((value: any) => {\n      foldersMap.set(value.id, value.name);\n    });\n    const foldersIndexMap = new Map<string, number>();\n    foldersMap.forEach((val, key) => {\n      foldersIndexMap.set(key, result.folders.length);\n      const f = new FolderView();\n      f.name = val;\n      result.folders.push(f);\n    });\n\n    results.items.forEach((value: any) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.login.uris = this.makeUriArray(value.login_url);\n\n      if (value.folder != null && foldersIndexMap.has(value.folder)) {\n        result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\n      }\n\n      if (value.identifiers == null) {\n        return;\n      }\n\n      if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n        cipher.notes = value.identifiers.notes.split(\"\\\\r\\\\n\").join(\"\\n\").split(\"\\\\n\").join(\"\\n\");\n      }\n\n      if (value.type === \"CreditCard\") {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n      }\n\n      for (const property in value.identifiers) {\n        // eslint-disable-next-line\n        if (!value.identifiers.hasOwnProperty(property)) {\n          continue;\n        }\n        const valObj = value.identifiers[property];\n        const val = valObj != null ? valObj.toString() : null;\n        if (\n          this.isNullOrWhitespace(val) ||\n          property === \"notes\" ||\n          property === \"ignoreItemInSecurityScore\"\n        ) {\n          continue;\n        }\n\n        if (property === \"custom_fields\") {\n          valObj.forEach((cf: any) => {\n            this.processKvp(cipher, cf.name, cf.value);\n          });\n          continue;\n        }\n\n        if (cipher.type === CipherType.Card) {\n          if (property === \"cardNumber\") {\n            cipher.card.number = val;\n            cipher.card.brand = this.getCardBrand(val);\n            continue;\n          } else if (property === \"nameOnCard\") {\n            cipher.card.cardholderName = val;\n            continue;\n          } else if (property === \"security_code\") {\n            cipher.card.code = val;\n            continue;\n          } else if (property === \"expires\") {\n            try {\n              const expDate = new Date(val);\n              cipher.card.expYear = expDate.getFullYear().toString();\n              cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n            } catch {\n              // Ignore error\n            }\n            continue;\n          } else if (property === \"cardType\") {\n            continue;\n          }\n        } else {\n          if (\n            (property === \"username\" || property === \"email\") &&\n            this.isNullOrWhitespace(cipher.login.username)\n          ) {\n            cipher.login.username = val;\n            continue;\n          } else if (property === \"password\") {\n            cipher.login.password = val;\n            continue;\n          } else if (property === \"totp\") {\n            cipher.login.totp = val;\n            continue;\n          } else if (\n            (cipher.login.uris == null || cipher.login.uris.length === 0) &&\n            this.uriFieldNames.indexOf(property) > -1\n          ) {\n            cipher.login.uris = this.makeUriArray(val);\n            continue;\n          }\n        }\n\n        this.processKvp(cipher, property, val);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const records = doc.querySelectorAll(\"PasswordManager > record\");\n    Array.from(records).forEach((record) => {\n      const category = this.querySelectorDirectChild(record, \"Category\");\n      const categoryText =\n        category != null &&\n        !this.isNullOrWhitespace(category.textContent) &&\n        category.textContent !== \"Unfiled\"\n          ? category.textContent\n          : null;\n      this.processFolder(result, categoryText);\n\n      const accountName = this.querySelectorDirectChild(record, \"Account-Name\");\n      const userId = this.querySelectorDirectChild(record, \"User-Id\");\n      const password = this.querySelectorDirectChild(record, \"Password\");\n      const url = this.querySelectorDirectChild(record, \"URL\");\n      const notes = this.querySelectorDirectChild(record, \"Notes\");\n      const cipher = this.initLoginCipher();\n      cipher.name =\n        accountName != null ? this.getValueOrDefault(accountName.textContent, \"--\") : \"--\";\n      cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : \"\";\n      cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n      cipher.login.password =\n        password != null ? this.getValueOrDefault(password.textContent) : null;\n      cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n      const attributes: string[] = [];\n      for (let i = 1; i <= 10; i++) {\n        attributes.push(\"Attribute-\" + i);\n      }\n\n      this.querySelectorAllDirectChild(record, attributes.join(\",\")).forEach((attr) => {\n        if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === \"null\") {\n          return;\n        }\n        this.processKvp(cipher, attr.tagName, attr.textContent);\n      });\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const passwordSafe = doc.querySelector(\"passwordsafe\");\n    if (passwordSafe == null) {\n      result.errorMessage = \"Missing `passwordsafe` node.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const notesDelimiter = passwordSafe.getAttribute(\"delimiter\");\n    const entries = doc.querySelectorAll(\"passwordsafe > entry\");\n    Array.from(entries).forEach((entry) => {\n      const group = this.querySelectorDirectChild(entry, \"group\");\n      const groupText =\n        group != null && !this.isNullOrWhitespace(group.textContent)\n          ? group.textContent.split(\".\").join(\"/\")\n          : null;\n      this.processFolder(result, groupText);\n\n      const title = this.querySelectorDirectChild(entry, \"title\");\n      const username = this.querySelectorDirectChild(entry, \"username\");\n      const email = this.querySelectorDirectChild(entry, \"email\");\n      const password = this.querySelectorDirectChild(entry, \"password\");\n      const url = this.querySelectorDirectChild(entry, \"url\");\n      const notes = this.querySelectorDirectChild(entry, \"notes\");\n      const cipher = this.initLoginCipher();\n      cipher.name = title != null ? this.getValueOrDefault(title.textContent, \"--\") : \"--\";\n      cipher.notes =\n        notes != null\n          ? this.getValueOrDefault(notes.textContent, \"\").split(notesDelimiter).join(\"\\n\")\n          : null;\n      cipher.login.username =\n        username != null ? this.getValueOrDefault(username.textContent) : null;\n      cipher.login.password =\n        password != null ? this.getValueOrDefault(password.textContent) : null;\n      cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n      if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n        cipher.login.username = this.getValueOrDefault(email.textContent);\n      } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n        cipher.notes = this.isNullOrWhitespace(cipher.notes)\n          ? \"Email: \" + email.textContent\n          : cipher.notes + \"\\n\" + \"Email: \" + email.textContent;\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 1) {\n        return;\n      }\n      if (value.length > 5) {\n        this.processFolder(result, value[5]);\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      if (value.length > 4) {\n        cipher.notes = this.getValueOrDefault(value[4], \"\").split(\"¬\").join(\"\\n\");\n      }\n      if (value.length > 2) {\n        cipher.login.username = this.getValueOrDefault(value[2]);\n      }\n      if (value.length > 3) {\n        cipher.login.password = this.getValueOrDefault(value[3]);\n      }\n      if (value.length > 1) {\n        cipher.login.uris = this.makeUriArray(value[1]);\n      }\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.trash === \"true\") {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.name);\n      cipher.notes = this.getValueOrDefault(value.notes);\n      if (value.type === \"LoginItem\") {\n        cipher.login.uris = this.makeUriArray(value.website);\n        cipher.login.password = this.getValueOrDefault(value.password);\n        cipher.login.username = this.getValueOrDefault(value.username);\n      } else if (value.type === \"CreditCardItem\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n        cipher.card.number = this.getValueOrDefault(value.number);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        cipher.card.code = this.getValueOrDefault(value.verification);\n\n        try {\n          const expMonth = this.getValueOrDefault(value.expiryMonth);\n          if (expMonth != null) {\n            const expMonthNumber = parseInt(expMonth, null);\n            if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n              cipher.card.expMonth = expMonthNumber.toString();\n            }\n          }\n        } catch {\n          // Ignore error\n        }\n        try {\n          const expYear = this.getValueOrDefault(value.expiryYear);\n          if (expYear != null) {\n            const expYearNumber = parseInt(expYear, null);\n            if (expYearNumber != null) {\n              cipher.card.expYear = expYearNumber.toString();\n            }\n          }\n        } catch {\n          // Ignore error\n        }\n\n        const pin = this.getValueOrDefault(value.pin);\n        if (pin != null) {\n          this.processKvp(cipher, \"PIN\", pin);\n        }\n        const zip = this.getValueOrDefault(value.zipCode);\n        if (zip != null) {\n          this.processKvp(cipher, \"Zip Code\", zip);\n        }\n      }\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    let i = 1;\n    results.forEach((value) => {\n      const folder =\n        !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith(\"/\")\n          ? value.Folder.replace(\"/\", \"\")\n          : value.Folder;\n      const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n      this.processFolder(result, folderName);\n\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value.Note);\n      cipher.name = this.getValueOrDefault(value.Name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Login);\n      cipher.login.password = this.getValueOrDefault(value.Pwd);\n      cipher.login.uris = this.makeUriArray(value.Url);\n\n      if (!this.isNullOrWhitespace(value.Rf_fields)) {\n        let fields: string[] = [value.Rf_fields];\n        if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n          fields = fields.concat(value.__parsed_extra);\n        }\n        fields.forEach((field: string) => {\n          const parts = field.split(\":\");\n          if (parts.length < 3) {\n            return;\n          }\n          const key = parts[0] === \"-no-name-\" ? null : parts[0];\n          const val = parts.length === 4 && parts[2] === \"rck\" ? parts[1] : parts[2];\n          this.processKvp(cipher, key, val);\n        });\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n\n      if (\n        i === results.length &&\n        cipher.name === \"--\" &&\n        this.isNullOrWhitespace(cipher.login.password)\n      ) {\n        return;\n      }\n\n      result.ciphers.push(cipher);\n      i++;\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SafariCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Title, \"--\");\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      cipher.login.totp = this.getValueOrDefault(value.OTPAuth);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const db = doc.querySelector(\"database\");\n    if (db == null) {\n      result.errorMessage = \"Missing `database` node.\";\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const foldersMap = new Map<string, number>();\n\n    Array.from(doc.querySelectorAll(\"database > label\")).forEach((labelEl) => {\n      const name = labelEl.getAttribute(\"name\");\n      const id = labelEl.getAttribute(\"id\");\n      if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n        foldersMap.set(id, result.folders.length);\n        const folder = new FolderView();\n        folder.name = name;\n        result.folders.push(folder);\n      }\n    });\n\n    Array.from(doc.querySelectorAll(\"database > card\")).forEach((cardEl) => {\n      if (cardEl.getAttribute(\"template\") === \"true\" || cardEl.getAttribute(\"deleted\") === \"true\") {\n        return;\n      }\n\n      const labelIdEl = this.querySelectorDirectChild(cardEl, \"label_id\");\n      if (labelIdEl != null) {\n        const labelId = labelIdEl.textContent;\n        if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n          result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n        }\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(cardEl.getAttribute(\"title\"), \"--\");\n\n      if (cardEl.getAttribute(\"star\") === \"true\") {\n        cipher.favorite = true;\n      }\n\n      const cardType = cardEl.getAttribute(\"type\");\n      if (cardType === \"note\") {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n      } else {\n        Array.from(this.querySelectorAllDirectChild(cardEl, \"field\")).forEach((fieldEl) => {\n          const text = fieldEl.textContent;\n          if (this.isNullOrWhitespace(text)) {\n            return;\n          }\n          const name = fieldEl.getAttribute(\"name\");\n          const fieldType = this.getValueOrDefault(fieldEl.getAttribute(\"type\"), \"\").toLowerCase();\n          if (fieldType === \"login\") {\n            cipher.login.username = text;\n          } else if (fieldType === \"password\" || fieldType === \"secret\") {\n            // safeInCloud allows for more than one password. we just insert them here and find the one used as password later\n            this.processKvp(cipher, name, text, FieldType.Hidden);\n          } else if (fieldType === \"one_time_password\") {\n            cipher.login.totp = text;\n          } else if (fieldType === \"notes\") {\n            cipher.notes += text + \"\\n\";\n          } else if (fieldType === \"weblogin\" || fieldType === \"website\") {\n            cipher.login.uris = this.makeUriArray(text);\n          } else {\n            this.processKvp(cipher, name, text);\n          }\n        });\n      }\n\n      Array.from(this.querySelectorAllDirectChild(cardEl, \"notes\")).forEach((notesEl) => {\n        cipher.notes += notesEl.textContent + \"\\n\";\n      });\n\n      this.setPassword(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  // Choose a password from all passwords. Take one that has password in its name, or the first one if there is no such entry\n  // if its name is password, we can safely remove it form the fields. otherwise, it would maybe be best to keep it as a hidden field\n  setPassword(cipher: CipherView) {\n    const candidates = cipher.fields.filter((field) => field.type === FieldType.Hidden);\n    if (!candidates.length) {\n      return;\n    }\n\n    let choice: FieldView;\n    for (const field of candidates) {\n      if (this.passwordFieldNames.includes(field.name.toLowerCase())) {\n        choice = field;\n        cipher.fields = cipher.fields.filter((f) => f !== choice);\n        break;\n      }\n    }\n\n    if (!choice) {\n      choice = candidates[0];\n    }\n\n    cipher.login.password = choice.value;\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), \"--\");\n      cipher.notes = this.getValueOrDefault(value.notes);\n      cipher.login.username = this.getValueOrDefault(value.username);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Title);\n      cipher.notes = this.getValueOrDefault(value.Comment);\n      cipher.login.uris = this.makeUriArray(value.Url);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.username = this.getValueOrDefault(value.Username);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length < 3) {\n        return;\n      }\n\n      this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n      const cipher = this.initLoginCipher();\n      cipher.notes = this.getValueOrDefault(value[value.length - 2], \"\");\n      cipher.name = this.getValueOrDefault(value[1], \"--\");\n\n      if (value[0] === \"Web Logins\" || value[0] === \"Servers\" || value[0] === \"Email Accounts\") {\n        cipher.login.username = this.getValueOrDefault(value[2]);\n        cipher.login.password = this.getValueOrDefault(value[3]);\n        cipher.login.uris = this.makeUriArray(value[4]);\n        this.parseFieldsToNotes(cipher, 5, value);\n      } else {\n        this.parseFieldsToNotes(cipher, 2, value);\n      }\n\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n    // last 3 rows do not get parsed\n    for (let i = startIndex; i < value.length - 3; i++) {\n      if (this.isNullOrWhitespace(value[i])) {\n        continue;\n      }\n      cipher.notes += value[i] + \"\\n\";\n    }\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const doc = this.parseXml(data);\n    if (doc == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    const loginNodes = doc.querySelectorAll(\"root > Database > Logins > Login\");\n    Array.from(loginNodes).forEach((loginNode) => {\n      const accountId = loginNode.getAttribute(\"ID\");\n      if (this.isNullOrWhitespace(accountId)) {\n        return;\n      }\n\n      const usernameText = loginNode.getAttribute(\"Name\");\n      const passwordText = loginNode.getAttribute(\"Password\");\n      let titleText: string = null;\n      let linkText: string = null;\n      let notesText: string = null;\n      let groupId: string = null;\n      let groupText: string = null;\n\n      const accountLogin = doc.querySelector(\n        \"root > Database > Accounts > Account > \" +\n          'LoginLinks > Login[SourceLoginID=\"' +\n          accountId +\n          '\"]'\n      );\n      if (accountLogin != null) {\n        const account = accountLogin.parentElement.parentElement;\n        if (account != null) {\n          titleText = account.getAttribute(\"Name\");\n          linkText = account.getAttribute(\"Link\");\n          groupId = account.getAttribute(\"ParentID\");\n          notesText = account.getAttribute(\"Comments\");\n          if (!this.isNullOrWhitespace(notesText)) {\n            notesText = notesText.split(\"/n\").join(\"\\n\");\n          }\n        }\n      }\n\n      if (!this.isNullOrWhitespace(groupId)) {\n        groupText = this.buildGroupText(doc, groupId, \"\");\n        this.processFolder(result, groupText);\n      }\n\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(titleText, \"--\");\n      cipher.notes = this.getValueOrDefault(notesText);\n      cipher.login.username = this.getValueOrDefault(usernameText);\n      cipher.login.password = this.getValueOrDefault(passwordText);\n      cipher.login.uris = this.makeUriArray(linkText);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  buildGroupText(doc: Document, groupId: string, groupText: string): string {\n    const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n    if (group == null) {\n      return groupText;\n    }\n    if (!this.isNullOrWhitespace(groupText)) {\n      groupText = \"/\" + groupText;\n    }\n    groupText = group.getAttribute(\"Name\") + groupText;\n    return this.buildGroupText(doc, group.getAttribute(\"ParentID\"), groupText);\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { SecureNoteType } from \"../enums/secureNoteType\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CardView } from \"../models/view/cardView\";\nimport { SecureNoteView } from \"../models/view/secureNoteView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nconst PropertiesToIgnore = [\n  \"kind\",\n  \"autologin\",\n  \"favorite\",\n  \"hexcolor\",\n  \"protectedwithpassword\",\n  \"subdomainonly\",\n  \"type\",\n  \"tk_export_version\",\n  \"note\",\n  \"title\",\n  \"document_content\",\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.favorite, \"\").toLowerCase() === \"true\";\n      cipher.name = this.getValueOrDefault(value.name, \"--\");\n      cipher.notes = this.getValueOrDefault(value.memo, \"\");\n      cipher.login.username = this.getValueOrDefault(value.login);\n      cipher.login.password = this.getValueOrDefault(value.password);\n      cipher.login.uris = this.makeUriArray(value.url);\n\n      if (value.kind !== \"login\") {\n        cipher.name = this.getValueOrDefault(value.title, \"--\");\n        cipher.notes = this.getValueOrDefault(value.note, \"\");\n      }\n\n      if (value.kind === \"cc\") {\n        cipher.type = CipherType.Card;\n        cipher.card = new CardView();\n        cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n        cipher.card.number = this.getValueOrDefault(value.number);\n        cipher.card.brand = this.getCardBrand(cipher.card.number);\n        if (!this.isNullOrWhitespace(value.expiryDate)) {\n          try {\n            const expDate = new Date(value.expiryDate);\n            cipher.card.expYear = expDate.getFullYear().toString();\n            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n          } catch {\n            // Ignore error\n          }\n        }\n      } else if (value.kind !== \"login\") {\n        cipher.type = CipherType.SecureNote;\n        cipher.secureNote = new SecureNoteView();\n        cipher.secureNote.type = SecureNoteType.Generic;\n        if (!this.isNullOrWhitespace(cipher.notes)) {\n          cipher.notes = this.getValueOrDefault(value.document_content, \"\");\n        }\n        for (const property in value) {\n          if (\n            value.hasOwnProperty(property) && // eslint-disable-line\n            PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n            !this.isNullOrWhitespace(value[property])\n          ) {\n            this.processKvp(cipher, property, value[property]);\n          }\n        }\n      }\n\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, false);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (value.length !== 5) {\n        return;\n      }\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value[0], \"--\");\n      cipher.notes = this.getValueOrDefault(value[4]);\n      cipher.login.username = this.getValueOrDefault(value[1]);\n      cipher.login.password = this.getValueOrDefault(value[2]);\n      cipher.login.uris = this.makeUriArray(value[3]);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class YotiCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      const cipher = this.initLoginCipher();\n      cipher.name = this.getValueOrDefault(value.Name, \"--\");\n      cipher.login.username = this.getValueOrDefault(value[\"User name\"]);\n      cipher.login.password = this.getValueOrDefault(value.Password);\n      cipher.login.uris = this.makeUriArray(value.URL);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n}\n","import { ImportResult } from \"../models/domain/importResult\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nimport { BaseImporter } from \"./baseImporter\";\nimport { Importer } from \"./importer\";\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n  parse(data: string): Promise<ImportResult> {\n    const result = new ImportResult();\n    const results = this.parseCsv(data, true);\n    if (results == null) {\n      result.success = false;\n      return Promise.resolve(result);\n    }\n\n    results.forEach((value) => {\n      if (\n        this.isNullOrWhitespace(value[\"Password Name\"]) &&\n        this.isNullOrWhitespace(value[\"Secret Name\"])\n      ) {\n        return;\n      }\n      this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n      const cipher = this.initLoginCipher();\n      cipher.favorite = this.getValueOrDefault(value.Favorite, \"0\") === \"1\";\n      cipher.notes = this.getValueOrDefault(value.Notes);\n      cipher.name = this.getValueOrDefault(\n        value[\"Password Name\"],\n        this.getValueOrDefault(value[\"Secret Name\"], \"--\")\n      );\n      cipher.login.uris = this.makeUriArray(\n        this.getValueOrDefault(value[\"Password URL\"], this.getValueOrDefault(value[\"Secret URL\"]))\n      );\n      this.parseData(cipher, value.SecretData);\n      this.parseData(cipher, value.CustomData);\n      this.convertToNoteIfNeeded(cipher);\n      this.cleanupCipher(cipher);\n      result.ciphers.push(cipher);\n    });\n\n    if (this.organization) {\n      this.moveFoldersToCollections(result);\n    }\n\n    result.success = true;\n    return Promise.resolve(result);\n  }\n\n  private parseData(cipher: CipherView, data: string) {\n    if (this.isNullOrWhitespace(data)) {\n      return;\n    }\n    const dataLines = this.splitNewLine(data);\n    dataLines.forEach((line) => {\n      const delimPosition = line.indexOf(\":\");\n      if (delimPosition < 0) {\n        return;\n      }\n      const field = line.substring(0, delimPosition);\n      const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n      if (\n        this.isNullOrWhitespace(field) ||\n        this.isNullOrWhitespace(value) ||\n        field === \"SecretType\"\n      ) {\n        return;\n      }\n      const fieldLower = field.toLowerCase();\n      if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n        cipher.login.username = value;\n      } else if (\n        cipher.login.password == null &&\n        this.passwordFieldNames.indexOf(fieldLower) > -1\n      ) {\n        cipher.login.password = value;\n      } else {\n        this.processKvp(cipher, field, value);\n      }\n    });\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequest\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return {\n        token: storedTwoFactorToken,\n        provider: TwoFactorProviderType.Remember,\n        remember: false,\n      };\n    }\n\n    return {\n      token: null,\n      provider: null,\n      remember: false,\n    };\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequest\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export function getDomain(host: string): string | null {\n  return null;\n}\n\nexport function isValid(host: string): boolean {\n  return true;\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  userId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  sizeName: string;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.userId = userId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  userId: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse, userId: string) {\n    this.userId = userId;\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse, userId?: string) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.userId = userId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.key = data.key;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string;\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, alreadyEncrypted = false, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        userId: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"userId\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login, alreadyEncrypted);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card, alreadyEncrypted);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(userId: string): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.userId = this.organizationId != null ? userId : null;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    alreadyEncrypted: boolean,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      alreadyEncrypted,\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string = \"en\";\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class ImportResult {\n  success = false;\n  missingPassword = false;\n  errorMessage: string;\n  ciphers: CipherView[] = [];\n  folders: FolderView[] = [];\n  folderRelationships: [number, number][] = [];\n  collections: CollectionView[] = [];\n  collectionRelationships: [number, number][] = [];\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequest\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u, alreadyEncrypted));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        password: null,\n      },\n      alreadyEncrypted\n    );\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        userId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"accessId\", \"userId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class Card {\n  static template(): Card {\n    const req = new Card();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: Card, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: Card, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { SecureNote } from \"./secureNote\";\n\nexport class Cipher {\n  static template(): Cipher {\n    const req = new Cipher();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: Cipher, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => Field.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = Login.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNote.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = Card.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = Identity.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: Cipher, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => Field.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = Login.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = Card.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: Field[];\n  login: Login;\n  secureNote: SecureNote;\n  card: Card;\n  identity: Identity;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new Field(f));\n      } else {\n        this.fields = o.fields.map((f) => new Field(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new Login(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher } from \"./cipher\";\n\nexport class CipherWithIds extends Cipher {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class Collection {\n  static template(): Collection {\n    const req = new Collection();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: Collection, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: Collection, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { Collection } from \"./collection\";\n\nexport class CollectionWithId extends Collection {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class Event {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class Field {\n  static template(): Field {\n    const req = new Field();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: Field, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: Field, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class Folder {\n  static template(): Folder {\n    const req = new Folder();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: Folder, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: Folder, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { Folder } from \"./folder\";\n\nexport class FolderWithId extends Folder {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class Identity {\n  static template(): Identity {\n    const req = new Identity();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: Identity, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: Identity, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUri } from \"./loginUri\";\n\nexport class Login {\n  static template(): Login {\n    const req = new Login();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: Login, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUri.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: Login, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUri.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUri[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUri {\n  static template(): LoginUri {\n    const req = new LoginUri();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUri, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNote {\n  static template(): SecureNote {\n    const req = new SecureNote();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNote, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { EmailTokenRequest } from \"./emailTokenRequest\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folderRequest\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nexport interface TokenRequestTwoFactor {\n  provider: TwoFactorProviderType;\n  token: string;\n  remember: boolean;\n}\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { CipherRequest } from \"./cipherRequest\";\nimport { FolderRequest } from \"./folderRequest\";\nimport { KvpRequest } from \"./kvpRequest\";\n\nexport class ImportCiphersRequest {\n  ciphers: CipherRequest[] = [];\n  folders: FolderRequest[] = [];\n  folderRelationships: KvpRequest<number, number>[] = [];\n}\n","import { CipherRequest } from \"./cipherRequest\";\nimport { CollectionRequest } from \"./collectionRequest\";\nimport { KvpRequest } from \"./kvpRequest\";\n\nexport class ImportOrganizationCiphersRequest {\n  ciphers: CipherRequest[] = [];\n  collections: CollectionRequest[] = [];\n  collectionRelationships: KvpRequest<number, number>[] = [];\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./passwordRequest\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","export class KvpRequest<TK, TV> {\n  key: TK;\n  value: TV;\n\n  constructor(key: TK, value: TV) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","export class OrganizationSubscriptionUpdateRequest {\n  constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) {}\n}\n","import { TaxInfoUpdateRequest } from \"./taxInfoUpdateRequest\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","import { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","export class OrganizationUserResetPasswordEnrollmentRequest {\n  resetPasswordKey: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../request/organizationTaxInfoUpdateRequest\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { OrganizationCreateRequest } from \"../organizationCreateRequest\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./sendRequest\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"./folderWithIdRequest\";\nimport { SendWithIdRequest } from \"./sendWithIdRequest\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserBilling(): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" + sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (\n      Utils.isNullOrWhitespace(clientId) ||\n      Utils.isNullOrWhitespace(clientSecret) ||\n      this.apiKeyRefresh == null\n    ) {\n      throw new Error();\n    }\n\n    await this.apiKeyRefresh(clientId, clientSecret);\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, await this.stateService.getUserId(), collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    const userId = await this.stateService.getUserId();\n    await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData(await this.stateService.getUserId());\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      // eslint-disable-next-line\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIds as CipherExport } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId as CollectionExport } from \"../models/export/collectionWithId\";\nimport { Event } from \"../models/export/event\";\nimport { FolderWithId as FolderExport } from \"../models/export/folderWithId\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = 100000;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new Event(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { FolderView } from \"../models/view/folderView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    // eslint-disable-next-line\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(): Promise<TreeNode<FolderView>[]> {\n    const folders = await this.getAllDecrypted();\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new FolderData(response, userId);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { ImportService as ImportServiceAbstraction } from \"../abstractions/import.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport {\n  featuredImportOptions,\n  ImportOption,\n  ImportType,\n  regularImportOptions,\n} from \"../enums/importOptions\";\nimport { AscendoCsvImporter } from \"../importers/ascendoCsvImporter\";\nimport { AvastCsvImporter } from \"../importers/avastCsvImporter\";\nimport { AvastJsonImporter } from \"../importers/avastJsonImporter\";\nimport { AviraCsvImporter } from \"../importers/aviraCsvImporter\";\nimport { BitwardenCsvImporter } from \"../importers/bitwardenCsvImporter\";\nimport { BitwardenJsonImporter } from \"../importers/bitwardenJsonImporter\";\nimport { BitwardenPasswordProtectedImporter } from \"../importers/bitwardenPasswordProtectedImporter\";\nimport { BlackBerryCsvImporter } from \"../importers/blackBerryCsvImporter\";\nimport { BlurCsvImporter } from \"../importers/blurCsvImporter\";\nimport { ButtercupCsvImporter } from \"../importers/buttercupCsvImporter\";\nimport { ChromeCsvImporter } from \"../importers/chromeCsvImporter\";\nimport { ClipperzHtmlImporter } from \"../importers/clipperzHtmlImporter\";\nimport { CodebookCsvImporter } from \"../importers/codebookCsvImporter\";\nimport { DashlaneCsvImporter } from \"../importers/dashlaneImporters/dashlaneCsvImporter\";\nimport { DashlaneJsonImporter } from \"../importers/dashlaneImporters/dashlaneJsonImporter\";\nimport { EncryptrCsvImporter } from \"../importers/encryptrCsvImporter\";\nimport { EnpassCsvImporter } from \"../importers/enpassCsvImporter\";\nimport { EnpassJsonImporter } from \"../importers/enpassJsonImporter\";\nimport { FirefoxCsvImporter } from \"../importers/firefoxCsvImporter\";\nimport { FSecureFskImporter } from \"../importers/fsecureFskImporter\";\nimport { GnomeJsonImporter } from \"../importers/gnomeJsonImporter\";\nimport { ImportError } from \"../importers/importError\";\nimport { Importer } from \"../importers/importer\";\nimport { KasperskyTxtImporter } from \"../importers/kasperskyTxtImporter\";\nimport { KeePass2XmlImporter } from \"../importers/keepass2XmlImporter\";\nimport { KeePassXCsvImporter } from \"../importers/keepassxCsvImporter\";\nimport { KeeperCsvImporter } from \"../importers/keeperImporters/keeperCsvImporter\";\nimport { LastPassCsvImporter } from \"../importers/lastpassCsvImporter\";\nimport { LogMeOnceCsvImporter } from \"../importers/logMeOnceCsvImporter\";\nimport { MeldiumCsvImporter } from \"../importers/meldiumCsvImporter\";\nimport { MSecureCsvImporter } from \"../importers/msecureCsvImporter\";\nimport { MykiCsvImporter } from \"../importers/mykiCsvImporter\";\nimport { NordPassCsvImporter } from \"../importers/nordpassCsvImporter\";\nimport { OnePassword1PifImporter } from \"../importers/onepasswordImporters/onepassword1PifImporter\";\nimport { OnePassword1PuxImporter } from \"../importers/onepasswordImporters/onepassword1PuxImporter\";\nimport { OnePasswordMacCsvImporter } from \"../importers/onepasswordImporters/onepasswordMacCsvImporter\";\nimport { OnePasswordWinCsvImporter } from \"../importers/onepasswordImporters/onepasswordWinCsvImporter\";\nimport { PadlockCsvImporter } from \"../importers/padlockCsvImporter\";\nimport { PassKeepCsvImporter } from \"../importers/passkeepCsvImporter\";\nimport { PassmanJsonImporter } from \"../importers/passmanJsonImporter\";\nimport { PasspackCsvImporter } from \"../importers/passpackCsvImporter\";\nimport { PasswordAgentCsvImporter } from \"../importers/passwordAgentCsvImporter\";\nimport { PasswordBossJsonImporter } from \"../importers/passwordBossJsonImporter\";\nimport { PasswordDragonXmlImporter } from \"../importers/passwordDragonXmlImporter\";\nimport { PasswordSafeXmlImporter } from \"../importers/passwordSafeXmlImporter\";\nimport { PasswordWalletTxtImporter } from \"../importers/passwordWalletTxtImporter\";\nimport { RememBearCsvImporter } from \"../importers/rememBearCsvImporter\";\nimport { RoboFormCsvImporter } from \"../importers/roboformCsvImporter\";\nimport { SafariCsvImporter } from \"../importers/safariCsvImporter\";\nimport { SafeInCloudXmlImporter } from \"../importers/safeInCloudXmlImporter\";\nimport { SaferPassCsvImporter } from \"../importers/saferpassCsvImport\";\nimport { SecureSafeCsvImporter } from \"../importers/secureSafeCsvImporter\";\nimport { SplashIdCsvImporter } from \"../importers/splashIdCsvImporter\";\nimport { StickyPasswordXmlImporter } from \"../importers/stickyPasswordXmlImporter\";\nimport { TrueKeyCsvImporter } from \"../importers/truekeyCsvImporter\";\nimport { UpmCsvImporter } from \"../importers/upmCsvImporter\";\nimport { YotiCsvImporter } from \"../importers/yotiCsvImporter\";\nimport { ZohoVaultCsvImporter } from \"../importers/zohoVaultCsvImporter\";\nimport { Utils } from \"../misc/utils\";\nimport { ImportResult } from \"../models/domain/importResult\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KvpRequest } from \"../models/request/kvpRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\n\nexport class ImportService implements ImportServiceAbstraction {\n  featuredImportOptions = featuredImportOptions as readonly ImportOption[];\n\n  regularImportOptions = regularImportOptions as readonly ImportOption[];\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService\n  ) {}\n\n  getImportOptions(): ImportOption[] {\n    return this.featuredImportOptions.concat(this.regularImportOptions);\n  }\n\n  async import(\n    importer: Importer,\n    fileContents: string,\n    organizationId: string = null\n  ): Promise<ImportError> {\n    const importResult = await importer.parse(fileContents);\n    if (importResult.success) {\n      if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n        return new ImportError(this.i18nService.t(\"importNothingError\"));\n      } else if (importResult.ciphers.length > 0) {\n        const halfway = Math.floor(importResult.ciphers.length / 2);\n        const last = importResult.ciphers.length - 1;\n\n        if (\n          this.badData(importResult.ciphers[0]) &&\n          this.badData(importResult.ciphers[halfway]) &&\n          this.badData(importResult.ciphers[last])\n        ) {\n          return new ImportError(this.i18nService.t(\"importFormatError\"));\n        }\n      }\n      try {\n        await this.postImport(importResult, organizationId);\n      } catch (error) {\n        const errorResponse = new ErrorResponse(error, 400);\n        return this.handleServerError(errorResponse, importResult);\n      }\n      return null;\n    } else {\n      if (!Utils.isNullOrWhitespace(importResult.errorMessage)) {\n        return new ImportError(importResult.errorMessage, importResult.missingPassword);\n      } else {\n        return new ImportError(\n          this.i18nService.t(\"importFormatError\"),\n          importResult.missingPassword\n        );\n      }\n    }\n  }\n\n  getImporter(\n    format: ImportType | \"bitwardenpasswordprotected\",\n    organizationId: string = null,\n    password: string = null\n  ): Importer {\n    const importer = this.getImporterInstance(format, password);\n    if (importer == null) {\n      return null;\n    }\n    importer.organizationId = organizationId;\n    return importer;\n  }\n\n  private getImporterInstance(format: ImportType | \"bitwardenpasswordprotected\", password: string) {\n    if (format == null) {\n      return null;\n    }\n\n    switch (format) {\n      case \"bitwardencsv\":\n        return new BitwardenCsvImporter();\n      case \"bitwardenjson\":\n        return new BitwardenJsonImporter(this.cryptoService, this.i18nService);\n      case \"bitwardenpasswordprotected\":\n        return new BitwardenPasswordProtectedImporter(\n          this.cryptoService,\n          this.i18nService,\n          password\n        );\n      case \"lastpasscsv\":\n      case \"passboltcsv\":\n        return new LastPassCsvImporter();\n      case \"keepassxcsv\":\n        return new KeePassXCsvImporter();\n      case \"aviracsv\":\n        return new AviraCsvImporter();\n      case \"blurcsv\":\n        return new BlurCsvImporter();\n      case \"safeincloudxml\":\n        return new SafeInCloudXmlImporter();\n      case \"padlockcsv\":\n        return new PadlockCsvImporter();\n      case \"keepass2xml\":\n        return new KeePass2XmlImporter();\n      case \"chromecsv\":\n      case \"operacsv\":\n      case \"vivaldicsv\":\n        return new ChromeCsvImporter();\n      case \"firefoxcsv\":\n        return new FirefoxCsvImporter();\n      case \"upmcsv\":\n        return new UpmCsvImporter();\n      case \"saferpasscsv\":\n        return new SaferPassCsvImporter();\n      case \"safaricsv\":\n        return new SafariCsvImporter();\n      case \"meldiumcsv\":\n        return new MeldiumCsvImporter();\n      case \"1password1pif\":\n        return new OnePassword1PifImporter();\n      case \"1password1pux\":\n        return new OnePassword1PuxImporter();\n      case \"1passwordwincsv\":\n        return new OnePasswordWinCsvImporter();\n      case \"1passwordmaccsv\":\n        return new OnePasswordMacCsvImporter();\n      case \"keepercsv\":\n        return new KeeperCsvImporter();\n      // case \"keeperjson\":\n      //   return new KeeperJsonImporter();\n      case \"passworddragonxml\":\n        return new PasswordDragonXmlImporter();\n      case \"enpasscsv\":\n        return new EnpassCsvImporter();\n      case \"enpassjson\":\n        return new EnpassJsonImporter();\n      case \"pwsafexml\":\n        return new PasswordSafeXmlImporter();\n      case \"dashlanecsv\":\n        return new DashlaneCsvImporter();\n      case \"dashlanejson\":\n        return new DashlaneJsonImporter();\n      case \"msecurecsv\":\n        return new MSecureCsvImporter();\n      case \"stickypasswordxml\":\n        return new StickyPasswordXmlImporter();\n      case \"truekeycsv\":\n        return new TrueKeyCsvImporter();\n      case \"clipperzhtml\":\n        return new ClipperzHtmlImporter();\n      case \"roboformcsv\":\n        return new RoboFormCsvImporter();\n      case \"ascendocsv\":\n        return new AscendoCsvImporter();\n      case \"passwordbossjson\":\n        return new PasswordBossJsonImporter();\n      case \"zohovaultcsv\":\n        return new ZohoVaultCsvImporter();\n      case \"splashidcsv\":\n        return new SplashIdCsvImporter();\n      case \"passkeepcsv\":\n        return new PassKeepCsvImporter();\n      case \"gnomejson\":\n        return new GnomeJsonImporter();\n      case \"passwordagentcsv\":\n        return new PasswordAgentCsvImporter();\n      case \"passpackcsv\":\n        return new PasspackCsvImporter();\n      case \"passmanjson\":\n        return new PassmanJsonImporter();\n      case \"avastcsv\":\n        return new AvastCsvImporter();\n      case \"avastjson\":\n        return new AvastJsonImporter();\n      case \"fsecurefsk\":\n        return new FSecureFskImporter();\n      case \"kasperskytxt\":\n        return new KasperskyTxtImporter();\n      case \"remembearcsv\":\n        return new RememBearCsvImporter();\n      case \"passwordwallettxt\":\n        return new PasswordWalletTxtImporter();\n      case \"mykicsv\":\n        return new MykiCsvImporter();\n      case \"securesafecsv\":\n        return new SecureSafeCsvImporter();\n      case \"logmeoncecsv\":\n        return new LogMeOnceCsvImporter();\n      case \"blackberrycsv\":\n        return new BlackBerryCsvImporter();\n      case \"buttercupcsv\":\n        return new ButtercupCsvImporter();\n      case \"codebookcsv\":\n        return new CodebookCsvImporter();\n      case \"encryptrcsv\":\n        return new EncryptrCsvImporter();\n      case \"yoticsv\":\n        return new YotiCsvImporter();\n      case \"nordpasscsv\":\n        return new NordPassCsvImporter();\n      default:\n        return null;\n    }\n  }\n\n  private async postImport(importResult: ImportResult, organizationId: string = null) {\n    if (organizationId == null) {\n      const request = new ImportCiphersRequest();\n      for (let i = 0; i < importResult.ciphers.length; i++) {\n        const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n        request.ciphers.push(new CipherRequest(c));\n      }\n      if (importResult.folders != null) {\n        for (let i = 0; i < importResult.folders.length; i++) {\n          const f = await this.folderService.encrypt(importResult.folders[i]);\n          request.folders.push(new FolderRequest(f));\n        }\n      }\n      if (importResult.folderRelationships != null) {\n        importResult.folderRelationships.forEach((r) =>\n          request.folderRelationships.push(new KvpRequest(r[0], r[1]))\n        );\n      }\n      return await this.apiService.postImportCiphers(request);\n    } else {\n      const request = new ImportOrganizationCiphersRequest();\n      for (let i = 0; i < importResult.ciphers.length; i++) {\n        importResult.ciphers[i].organizationId = organizationId;\n        const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n        request.ciphers.push(new CipherRequest(c));\n      }\n      if (importResult.collections != null) {\n        for (let i = 0; i < importResult.collections.length; i++) {\n          importResult.collections[i].organizationId = organizationId;\n          const c = await this.collectionService.encrypt(importResult.collections[i]);\n          request.collections.push(new CollectionRequest(c));\n        }\n      }\n      if (importResult.collectionRelationships != null) {\n        importResult.collectionRelationships.forEach((r) =>\n          request.collectionRelationships.push(new KvpRequest(r[0], r[1]))\n        );\n      }\n      return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n    }\n  }\n\n  private badData(c: CipherView) {\n    return (\n      (c.name == null || c.name === \"--\") &&\n      c.type === CipherType.Login &&\n      c.login != null &&\n      Utils.isNullOrWhitespace(c.login.password)\n    );\n  }\n\n  private handleServerError(errorResponse: ErrorResponse, importResult: ImportResult): ImportError {\n    if (errorResponse.validationErrors == null) {\n      return new ImportError(errorResponse.message);\n    }\n\n    let errorMessage = \"\";\n\n    Object.entries(errorResponse.validationErrors).forEach(([key, value], index) => {\n      let item;\n      let itemType;\n      const i = Number(key.match(/[0-9]+/)[0]);\n\n      switch (key.match(/^\\w+/)[0]) {\n        case \"Ciphers\":\n          item = importResult.ciphers[i];\n          itemType = CipherType[item.type];\n          break;\n        case \"Folders\":\n          item = importResult.folders[i];\n          itemType = \"Folder\";\n          break;\n        case \"Collections\":\n          item = importResult.collections[i];\n          itemType = \"Collection\";\n          break;\n        default:\n          return;\n      }\n\n      if (index > 0) {\n        errorMessage += \"\\n\\n\";\n      }\n\n      if (itemType !== \"Folder\" && itemType !== \"Collection\") {\n        errorMessage += \"[\" + (i + 1) + \"] \";\n      }\n\n      errorMessage += \"[\" + itemType + '] \"' + item.name + '\": ' + value;\n    });\n\n    return new ImportError(errorMessage);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.logService.error(e);\n      throw new Error(\"Unable to reach key connector\");\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: () => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback();\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    if (await this.stateService.getIsAuthenticated()) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      return !locked;\n    }\n    return false;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        100000\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLoginRedirect(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.loginRedirect;\n  }\n\n  async setLoginRedirect(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.loginRedirect = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(userId);\n    }\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    const index = this.state.authenticatedAccounts.indexOf(userId);\n    if (index > -1) {\n      this.state.authenticatedAccounts.splice(index, 1);\n      await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    }\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    const userId = await this.stateService.getUserId();\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(userId, response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(userId, response.ciphers);\n      await this.syncSends(userId, response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            const userId = await this.stateService.getUserId();\n            await this.folderService.upsert(new FolderData(remoteFolder, userId));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            const userId = await this.stateService.getUserId();\n            await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            const userId = await this.stateService.getUserId();\n            await this.sendService.upsert(new SendData(remoteSend, userId));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(userId: string, response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f, userId);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(userId: string, response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c, userId);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(userId: string, response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s, userId);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  // Keys aren't stored for a device that is locked or logged out.\n  async isLocked(userId?: string): Promise<boolean> {\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    return !(await this.cryptoService.hasKeyInMemory(userId));\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async isLoggedOut(userId?: string): Promise<boolean> {\n    return !(await this.stateService.getIsAuthenticated({ userId: userId }));\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    if (await this.isLoggedOut(userId)) {\n      return false;\n    }\n\n    if (await this.isLocked(userId)) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private isIE: boolean;\n  private isOldSafari: boolean;\n\n  constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n    this.isIE = platformUtilsService.isIE();\n    const ua = win.navigator.userAgent;\n    this.isOldSafari =\n      platformUtilsService.isSafari() &&\n      (ua.indexOf(\" Version/10.\") > -1 || ua.indexOf(\" Version/9.\") > -1);\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    if (this.isIE || this.isOldSafari) {\n      const forgeLen = algorithm === \"sha256\" ? 32 : 64;\n      const passwordBytes = this.toByteString(password);\n      const saltBytes = this.toByteString(salt);\n      const derivedKeyBytes = (forge as any).pbkdf2(\n        passwordBytes,\n        saltBytes,\n        iterations,\n        forgeLen,\n        algorithm\n      );\n      return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n    }\n\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if ((this.isIE && algorithm === \"sha1\") || algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    if (this.isIE && algorithm === \"sha512\") {\n      const hmac = (forge as any).hmac.create();\n      const keyBytes = this.toByteString(key);\n      const valueBytes = this.toByteString(value);\n      hmac.start(algorithm, keyBytes);\n      hmac.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n    }\n\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = (forge as any).hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = (forge as any).hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n    const decipher = (forge as any).cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString(\"utf8\");\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { StateService as BaseStateService } from \"jslib-common/abstractions/state.service\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\n\nexport abstract class StateService extends BaseStateService<Account> {\n  getRememberEmail: (options?: StorageOptions) => Promise<boolean>;\n  setRememberEmail: (value: boolean, options?: StorageOptions) => Promise<void>;\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"jslib-common/models/request/emergencyAccessAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: any): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: any): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { OrganizationUserAcceptRequest } from \"jslib-common/models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private logService: LogService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: any): Promise<void> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      this.actionPromise = this.apiService\n        .postOrganizationUserAccept(qParams.organizationId, qParams.organizationUserId, request)\n        .then(() => {\n          // Retrieve Public Key\n          return this.apiService.getOrganizationKeys(qParams.organizationId);\n        })\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n          }\n\n          const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n          // RSA Encrypt user's encKey.key with organization public key\n          const encKey = await this.cryptoService.getEncKey();\n          const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n          // Create request and execute enrollment\n          const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n          resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n          return this.apiService.putOrganizationUserResetPasswordEnrollment(\n            qParams.organizationId,\n            await this.stateService.getUserId(),\n            resetRequest\n          );\n        });\n    } else {\n      this.actionPromise = this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    }\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: any): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: any): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.apiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a routerLink=\"/\" [queryParams]=\"{ email: email }\" class=\"btn btn-primary btn-block\">\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"jslib-angular/components/hint.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"jslib-angular/components/lock.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { RouterService } from \"../services/router.service\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigate([this.successRoute]);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"jslib-angular/components/login.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { PolicyData } from \"jslib-common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nimport { StateService } from \"../../abstractions/state.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyService: PolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.stateService.setLoginRedirect({ route: \"/settings/premium\" });\n      } else if (qParams.org != null) {\n        this.stateService.setLoginRedirect({\n          route: \"/settings/create-organization\",\n          qParams: { plan: qParams.org },\n        });\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        this.stateService.setLoginRedirect({\n          route: \"/setup/families-for-enterprise\",\n          qParams: { token: qParams.sponsorshipToken },\n        });\n      }\n      await super.ngOnInit();\n      this.rememberEmail = await this.stateService.getRememberEmail();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.apiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.enforcedPasswordPolicyOptions =\n          await this.policyService.getMasterPasswordPolicyOptions(policyList);\n      }\n    }\n  }\n\n  async goAfterLogIn() {\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          this.masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const loginRedirect = await this.stateService.getLoginRedirect();\n    if (loginRedirect != null) {\n      this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n      await this.stateService.setLoginRedirect(null);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    await this.stateService.setRememberEmail(this.rememberEmail);\n    if (!this.rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit();\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"showResetPasswordAutoEnrollWarning\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"form-text\">\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </small>\n          </div>\n          <div class=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              id=\"rememberEmail\"\n              name=\"RememberEmail\"\n              [(ngModel)]=\"rememberEmail\"\n            />\n            <label class=\"form-check-label\" for=\"rememberEmail\">{{ \"rememberEmail\" | i18n }}</label>\n          </div>\n          <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n            >\n              <i class=\"bwi bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n          <div class=\"d-flex\">\n            <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\n              <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"jslib-common/models/request/deleteRecoverRequest\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"jslib-common/models/request/twoFactorRecoveryRequest\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"jslib-angular/components/register.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyData } from \"jslib-common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.stateService.setLoginRedirect({ route: \"/settings/premium\" });\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        this.stateService.setLoginRedirect({\n          route: \"/settings/create-organization\",\n          qParams: { plan: qParams.org },\n        });\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        this.stateService.setLoginRedirect({\n          route: \"/setup/families-for-enterprise\",\n          qParams: { token: qParams.sponsorshipToken },\n        });\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.apiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n\n    await super.ngOnInit();\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.masterPasswordScore,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit();\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <p class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</p>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <div class=\"form-group\">\n                  <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n                  <input\n                    id=\"email\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    name=\"Email\"\n                    [(ngModel)]=\"email\"\n                    required\n                    [appAutofocus]=\"email === ''\"\n                    inputmode=\"email\"\n                    appInputVerbatim=\"false\"\n                  />\n                  <small class=\"form-text text-muted\">{{ \"emailAddressDesc\" | i18n }}</small>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"name\">{{ \"yourName\" | i18n }}</label>\n                  <input\n                    id=\"name\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    name=\"Name\"\n                    [(ngModel)]=\"name\"\n                    [appAutofocus]=\"email !== ''\"\n                  />\n                  <small class=\"form-text text-muted\">{{ \"yourNameDesc\" | i18n }}</small>\n                </div>\n                <div class=\"form-group\">\n                  <app-callout\n                    type=\"info\"\n                    [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                    *ngIf=\"enforcedPolicyOptions\"\n                  >\n                  </app-callout>\n                  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                  <div class=\"d-flex\">\n                    <div class=\"w-100\">\n                      <input\n                        id=\"masterPassword\"\n                        type=\"{{ showPassword ? 'text' : 'password' }}\"\n                        name=\"MasterPassword\"\n                        class=\"text-monospace form-control mb-1\"\n                        [(ngModel)]=\"masterPassword\"\n                        (input)=\"updatePasswordStrength()\"\n                        required\n                        appInputVerbatim\n                      />\n                      <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                      </app-password-strength>\n                    </div>\n                    <div>\n                      <button\n                        type=\"button\"\n                        class=\"ml-1 btn btn-link\"\n                        appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                        (click)=\"togglePassword(false)\"\n                      >\n                        <i\n                          class=\"bwi bwi-lg\"\n                          aria-hidden=\"true\"\n                          [ngClass]=\"{\n                            'bwi-eye': !showPassword,\n                            'bwi-eye-slash': showPassword\n                          }\"\n                        ></i>\n                      </button>\n                      <div class=\"progress-bar invisible\"></div>\n                    </div>\n                  </div>\n                  <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                  <div class=\"d-flex\">\n                    <input\n                      id=\"masterPasswordRetype\"\n                      type=\"{{ showPassword ? 'text' : 'password' }}\"\n                      name=\"MasterPasswordRetype\"\n                      class=\"text-monospace form-control\"\n                      [(ngModel)]=\"confirmMasterPassword\"\n                      required\n                      appInputVerbatim\n                    />\n                    <button\n                      type=\"button\"\n                      class=\"ml-1 btn btn-link\"\n                      appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                      (click)=\"togglePassword(true)\"\n                    >\n                      <i\n                        class=\"bwi bwi-lg\"\n                        aria-hidden=\"true\"\n                        [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                      ></i>\n                    </button>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n                  <input\n                    id=\"hint\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    name=\"Hint\"\n                    [(ngModel)]=\"hint\"\n                  />\n                  <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n                </div>\n                <div [hidden]=\"!showCaptcha()\">\n                  <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n                </div>\n                <div class=\"form-group\" *ngIf=\"showTerms\">\n                  <div class=\"form-check\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      id=\"acceptPolicies\"\n                      [(ngModel)]=\"acceptPolicies\"\n                      name=\"AcceptPolicies\"\n                    />\n                    <label class=\"form-check-label small text-muted\" for=\"acceptPolicies\">\n                      {{ \"acceptPolicies\" | i18n }}<br />\n                      <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n                        \"termsOfService\" | i18n\n                      }}</a\n                      >,\n                      <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n                        \"privacyPolicy\" | i18n\n                      }}</a>\n                    </label>\n                  </div>\n                </div>\n                <hr />\n                <div class=\"d-flex mb-2\">\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary btn-block btn-submit\"\n                    [disabled]=\"form.loading\"\n                  >\n                    <span>{{ \"submit\" | i18n }}</span>\n                    <i\n                      class=\"bwi bwi-spinner bwi-spin\"\n                      title=\"{{ 'loading' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                  </button>\n                  <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                    {{ \"cancel\" | i18n }}\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"jslib-angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"jslib-angular/components/set-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  (input)=\"updatePasswordStrength()\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"jslib-angular/components/sso.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"jslib-angular/components/two-factor-options.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"jslib-angular/components/two-factor.component\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const loginRedirect = await this.stateService.getLoginRedirect();\n    if (loginRedirect != null) {\n      this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n      await this.stateService.setLoginRedirect(null);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"jslib-angular/components/update-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    (input)=\"updatePasswordStrength()\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [score]=\"masterPasswordScore\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"jslib-angular/components/update-temp-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  (input)=\"updatePasswordStrength()\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"jslib-common/models/request/verifyEmailRequest\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"jslib-common/models/request/verifyDeleteRecoverRequest\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SettingsService } from \"jslib-common/abstractions/settings.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { DisableSendPolicy } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicy } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicy } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicy } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicy } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicy } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicy } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicy } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicy } from \"./organizations/policies/two-factor-authentication.component\";\nimport { PolicyListService } from \"./services/policy-list.service\";\nimport { RouterService } from \"./services/router.service\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n\n  constructor(\n    private broadcasterService: BroadcasterService,\n    private tokenService: TokenService,\n    private folderService: FolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: PolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n          case \"loggedOut\":\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            if (typeof message.text === \"string\" && typeof crypto.subtle === 'undefined') {\n              message.title=\"This browser requires HTTPS to use the web vault\";\n              message.text=\"Check the Vaultwarden wiki for details on how to enable it\";\n            }\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n      new ResetPasswordPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { BitwardenToastModule } from \"jslib-angular/components/toastr.component\";\n\nimport { AppComponent } from \"./app.component\";\nimport { OssRoutingModule } from \"./oss-routing.module\";\nimport { OssModule } from \"./oss.module\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { WildcardRoutingModule } from \"./wildcard-routing.module\";\n\n@NgModule({\n  imports: [\n    OssModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ServicesModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    InfiniteScrollModule,\n    DragDropModule,\n    OssRoutingModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: any): Promise<void>;\n  abstract unauthedHandler(qParams: any): Promise<void>;\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      await this.stateService.setLoginRedirect(null);\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          await this.stateService.setLoginRedirect({\n            route: this.getRedirectRoute(),\n            qParams: qParams,\n          });\n\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n\n  getRedirectRoute() {\n    const urlTree = this.router.parseUrl(this.router.url);\n    urlTree.queryParams = {};\n    return urlTree.toString();\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { EventView } from \"jslib-common/models/view/eventView\";\n\nimport { EventService } from \"src/app/services/event.service\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.i18nService.t(\"unknown\"),\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.platformUtilsService.saveFile(window, data, { type: \"text/plain\" }, fileName);\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"jslib-common/enums/providerUserType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"jslib-common/models/response/organizationUserResponse\";\nimport { ProviderUserUserDetailsResponse } from \"jslib-common/models/response/provider/providerUserResponse\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.allUsers != null ? this.allUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.allUsers != null &&\n      this.statusMap != null &&\n      this.allUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<any>;\n\n  protected allUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<any>;\n  abstract reinviteUser(id: string): Promise<any>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<any>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.allUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.deleteWarningMessage(user),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected deleteWarningMessage(user: UserType): string {\n    return this.i18nService.t(\"removeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"jslib-angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h2>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() score?: number;\n  @Input() showText = false;\n\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnChanges(): void {\n    this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n    switch (this.score) {\n      case 4:\n        this.color = \"bg-success\";\n        this.text = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        this.color = \"bg-primary\";\n        this.text = this.i18nService.t(\"good\");\n        break;\n      case 2:\n        this.color = \"bg-warning\";\n        this.text = this.i18nService.t(\"weak\");\n        break;\n      default:\n        this.color = \"bg-danger\";\n        this.text = this.score != null ? this.i18nService.t(\"weak\") : null;\n        break;\n    }\n  }\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }}, Bitwarden Inc. (Powered by Vaultwarden)</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }}, Bitwarden Inc. (Powered by Vaultwarden)<br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure provides are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"myVault\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/settings\">{{ \"settings\" | i18n }}</a>\n        </li>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-item nav-link dropdown-toggle\"\n          href=\"#\"\n          id=\"nav-profile\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </a>\n        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\">\n          <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp>\n            <app-avatar\n              [data]=\"name\"\n              [email]=\"email\"\n              size=\"25\"\n              fontSize=\"14\"\n              [circle]=\"true\"\n            ></app-avatar>\n            <div class=\"ml-2 overflow-hidden\">\n              <span>{{ \"loggedInAs\" | i18n }}</span>\n              <small class=\"text-muted\">{{ name }}</small>\n            </div>\n          </div>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\">\n            <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a\n            class=\"dropdown-item\"\n            href=\"https://github.com/dani-garcia/vaultwarden\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n            {{ \"getHelp\" | i18n }}\n          </a>\n          <a\n            class=\"dropdown-item\"\n            href=\"https://bitwarden.com/download/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n            {{ \"getApps\" | i18n }}\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\">\n            <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"lockNow\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\">\n            <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n            {{ \"logOut\" | i18n }}\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nconst BroadcasterSubscriptionId = \"OrganizationLayoutComponent\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization: Organization;\n  businessTokenPromise: Promise<any>;\n  private organizationId: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"updatedOrgLicense\":\n            await this.load();\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showToolsTab || this.organization.isOwner;\n  }\n\n  get showManageTab(): boolean {\n    return (\n      this.organization.canManageUsers ||\n      this.organization.canViewAllCollections ||\n      this.organization.canViewAssignedCollections ||\n      this.organization.canManageGroups ||\n      this.organization.canManagePolicies ||\n      this.organization.canAccessEventLogs\n    );\n  }\n\n  get showToolsTab(): boolean {\n    return this.organization.canAccessImportExport || this.organization.canAccessReports;\n  }\n\n  get toolsRoute(): string {\n    return this.organization.canAccessImportExport\n      ? \"tools/import\"\n      : \"tools/exposed-passwords-report\";\n  }\n\n  get manageRoute(): string {\n    let route: string;\n    switch (true) {\n      case this.organization.canManageUsers:\n        route = \"manage/people\";\n        break;\n      case this.organization.canViewAssignedCollections || this.organization.canViewAllCollections:\n        route = \"manage/collections\";\n        break;\n      case this.organization.canManageGroups:\n        route = \"manage/groups\";\n        break;\n      case this.organization.canManagePolicies:\n        route = \"manage/policies\";\n        break;\n      case this.organization.canAccessEventLogs:\n        route = \"manage/events\";\n        break;\n    }\n    return route;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ organization.name }}</span>\n          <small class=\"text-muted\">{{ \"organization\" | i18n }}</small>\n        </div>\n        <div\n          class=\"ml-3 card border-danger text-danger bg-transparent\"\n          *ngIf=\"!organization.enabled\"\n        >\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"organizationIsDisabled\" | i18n }}\n          </div>\n        </div>\n        <div\n          class=\"ml-3 card border-info text-info bg-transparent\"\n          *ngIf=\"organization.isProviderUser\"\n        >\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"accessingUsingProvider\" | i18n: organization.providerName }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"vault\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showToolsTab\">\n          <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-wrench\" aria-hidden=\"true\"></i>\n            {{ \"tools\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"organization.isOwner\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"../scss/styles.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { OrganizationUserBulkConfirmRequest } from \"jslib-common/models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"jslib-common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"jslib-common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ \"removeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"item.user | userName\"\n                [email]=\"item.user.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              ></app-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"jslib-common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { CollectionRequest } from \"jslib-common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { GroupResponse } from \"jslib-common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"jslib-common/models/response/collectionResponse\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\n\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { OrganizationUserUserDetailsResponse } from \"jslib-common/models/response/organizationUserResponse\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div\n        class=\"modal-body\"\n        *ngIf=\"\n          !loading && users && (users | search: searchText:'name':'email':'id') as searchedUsers\n        \"\n      >\n        <div class=\"d-flex\">\n          <div class=\"mr-3\">\n            <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n            <input\n              type=\"search\"\n              class=\"form-control form-control-sm\"\n              id=\"search\"\n              placeholder=\"{{ 'search' | i18n }}\"\n              name=\"SearchText\"\n              [(ngModel)]=\"searchText\"\n            />\n          </div>\n          <div class=\"btn-group btn-group-sm\" role=\"group\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              [ngClass]=\"{ active: !showSelected }\"\n              (click)=\"filterSelected(false)\"\n            >\n              {{ \"all\" | i18n }}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              [ngClass]=\"{ active: showSelected }\"\n              (click)=\"filterSelected(true)\"\n            >\n              {{ \"selected\" | i18n }}\n              <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{\n                selectedCount\n              }}</span>\n            </button>\n          </div>\n        </div>\n        <ng-container *ngIf=\"!searchedUsers.length\">\n          <hr />\n          {{ \"noUsersInList\" | i18n }}\n        </ng-container>\n        <ng-container *ngIf=\"searchedUsers.length\">\n          <table class=\"table table-hover table-list mb-0\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let u of searchedUsers\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <app-avatar\n                    [data]=\"u | userName\"\n                    [email]=\"u.email\"\n                    size=\"25\"\n                    [circle]=\"true\"\n                    [fontSize]=\"14\"\n                  >\n                  </app-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    class=\"badge badge-secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    class=\"badge badge-warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService\n  ) {\n    super(eventService, i18nService, exportService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.useEvents) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getOrganizationUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (userId == null) {\n      return null;\n    }\n\n    if (this.orgUsersUserIdMap.has(userId)) {\n      return this.orgUsersUserIdMap.get(userId);\n    }\n\n    if (r.providerId != null && r.providerId === this.organization.providerId) {\n      return {\n        name: this.organization.providerName,\n      };\n    }\n\n    return null;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { GroupRequest } from \"jslib-common/models/request/groupRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"jslib-common/models/response/collectionResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { GroupResponse } from \"jslib-common/models/response/groupResponse\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (organization == null || !organization.useGroups) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n  accessPolicies = false;\n  accessGroups = false;\n  accessEvents = false;\n  accessSso = false;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.accessPolicies = this.organization.usePolicies;\n      this.accessSso = this.organization.useSso;\n      this.accessEvents = this.organization.useEvents;\n      this.accessGroups = this.organization.useGroups;\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups && accessGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManagePolicies && accessPolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageSso && accessSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { OrganizationKeysRequest } from \"jslib-common/models/request/organizationKeysRequest\";\nimport { OrganizationUserBulkRequest } from \"jslib-common/models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"jslib-common/models/request/organizationUserConfirmRequest\";\nimport { ListResponse } from \"jslib-common/models/response/listResponse\";\nimport { OrganizationUserBulkResponse } from \"jslib-common/models/response/organizationUserBulkResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"jslib-common/models/response/organizationUserResponse\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (!organization.canManageUsers) {\n        this.router.navigate([\"../collections\"], { relativeTo: this.route });\n        return;\n      }\n      this.accessEvents = organization.useEvents;\n      this.accessGroups = organization.useGroups;\n      this.canResetPassword = organization.canManageUsersPassword;\n      this.orgUseResetPassword = organization.useResetPassword;\n      this.callingUserType = organization.type;\n      this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n      // Backfill pub/priv key if necessary\n      if (this.canResetPassword && !this.orgHasKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        const response = await this.apiService.postOrganizationKeys(this.organizationId, request);\n        if (response != null) {\n          this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n          await this.syncService.fullSync(true); // Replace oganizations with new data\n        } else {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n      }\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const resetPasswordPolicy = await this.policyService.getPolicyForOrganization(\n      PolicyType.ResetPassword,\n      this.organizationId\n    );\n    this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n    super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<any> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organizationId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected deleteWarningMessage(user: OrganizationUserUserDetailsResponse): string {\n    if (user.usesKeyConnector) {\n      return this.i18nService.t(\"removeUserConfirmationKeyConnector\");\n    }\n\n    return super.deleteWarningMessage(user);\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{\n          acceptedCount\n        }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span class=\"badge badge-secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span class=\"badge badge-warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nimport { PolicyListService } from \"../../services/policy-list.service\";\nimport { BasePolicy } from \"../policies/base-policy.component\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.usePolicies) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span class=\"badge badge-success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"enabled\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.apiService.getPolicy(this.organizationId, this.policy.type);\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.putPolicy(this.organizationId, this.policy.type, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { OrganizationUserResetPasswordRequest } from \"jslib-common/models/request/organizationUserResetPasswordRequest\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  masterPasswordScore: number;\n  formPromise: Promise<any>;\n  private newPasswordStrengthTimeout: any;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // Get Enforced Policy Options\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.updatePasswordStrength();\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.masterPasswordScore,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.masterPasswordScore < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  updatePasswordStrength() {\n    if (this.newPasswordStrengthTimeout != null) {\n      clearTimeout(this.newPasswordStrengthTimeout);\n    }\n    this.newPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.newPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n                (input)=\"updatePasswordStrength()\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserType } from \"jslib-common/enums/organizationUserType\";\nimport { PermissionsApi } from \"jslib-common/models/api/permissionsApi\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"jslib-common/models/request/organizationUserInviteRequest\";\nimport { OrganizationUserUpdateRequest } from \"jslib-common/models/request/organizationUserUpdateRequest\";\nimport { SelectionReadOnlyRequest } from \"jslib-common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"jslib-common/models/response/collectionResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Manager Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Admin Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { OrganizationUserUpdateGroupsRequest } from \"jslib-common/models/request/organizationUserUpdateGroupsRequest\";\nimport { GroupResponse } from \"jslib-common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new FormControl(false);\n  data: FormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPass\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: FormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{\n      \"personalOwnershipCheckboxDesc\" | i18n\n    }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(private formBuilder: FormBuilder, private organizationService: OrganizationService) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: FormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { PolicyRequest } from \"jslib-common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLogin\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"enabled\" | i18n }}</label>\n  </div>\n</div>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { OrganizationKeysRequest } from \"jslib-common/models/request/organizationKeysRequest\";\nimport { OrganizationUpdateRequest } from \"jslib-common/models/request/organizationUpdateRequest\";\nimport { OrganizationResponse } from \"jslib-common/models/response/organizationResponse\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\nimport { TaxInfoComponent } from \"../../settings/tax-info.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  selfHosted = false;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      try {\n        this.org = await this.apiService.getOrganization(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myOrganization\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"identifier\">{{ \"identifier\" | i18n }}</label>\n        <input\n          id=\"identifier\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Identifier\"\n          [(ngModel)]=\"org.identifier\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ org.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"taxInformation\" | i18n }}</h1>\n</div>\n<p>{{ \"taxInformationDesc\" | i18n }}</p>\n<div *ngIf=\"!org || loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #formTax\n  (ngSubmit)=\"submitTaxInfo()\"\n  [appApiAction]=\"taxFormPromise\"\n  ngNativeValidate\n>\n  <app-tax-info></app-tax-info>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationSubscriptionUpdateRequest } from \"jslib-common/models/request/organizationSubscriptionUpdateRequest\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<any>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n      const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n      this.formPromise = this.apiService.postOrganizationUpdateSubscription(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.newSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.newMaxSeats * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ adjustedSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-6\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { Verification } from \"jslib-common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<any> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.deleteOrganization(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.getOrganizationLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.platformUtilsService.saveFile(\n        window,\n        licenseString,\n        null,\n        \"bitwarden_organization_license.json\"\n      );\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { UserBillingComponent } from \"../../settings/user-billing.component\";\n\n@Component({\n  selector: \"app-org-billing\",\n  templateUrl: \"../../settings/user-billing.component.html\",\n})\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>\n    {{ \"billing\" | i18n }}\n  </h1>\n  <button\n    (click)=\"load()\"\n    class=\"btn btn-sm btn-outline-primary ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"addCredit()\"\n    *ngIf=\"!showAddCredit\"\n  >\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <label class=\"sr-only\" for=\"verifyAmount1\">{{ \"amount\" | i18n: \"1\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount1\"\n            placeholder=\"xx\"\n            name=\"Amount1\"\n            [(ngModel)]=\"verifyAmount1\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <label class=\"sr-only\" for=\"verifyAmount2\">{{ \"amount\" | i18n: \"2\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount2\"\n            placeholder=\"xx\"\n            name=\"Amount2\"\n            [(ngModel)]=\"verifyAmount2\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"changePayment()\"\n    *ngIf=\"!showAdjustPayment\"\n  >\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    [organizationId]=\"organizationId\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <h2 class=\"spaced-header\">{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { OrganizationSubscriptionResponse } from \"jslib-common/models/response/organizationSubscriptionResponse\";\n\n@Component({\n  selector: \"app-org-subscription\",\n  templateUrl: \"organization-subscription.component.html\",\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  organizationId: string;\n  adjustSeatsAdd = true;\n  showAdjustSeats = false;\n  showAdjustSeatAutoscale = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  showDownloadLicense = false;\n  showChangePlan = false;\n  sub: OrganizationSubscriptionResponse;\n  selfHosted = false;\n\n  userOrg: Organization;\n\n  removeSponsorshipPromise: Promise<any>;\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    this.userOrg = await this.organizationService.get(this.organizationId);\n    this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan(changed: boolean) {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(updated: boolean) {\n    this.showUpdateLicense = false;\n    if (updated) {\n      this.load();\n      this.messagingService.send(\"updatedOrgLicense\");\n    }\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async removeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeSponsorshipConfirmation\"),\n      this.i18nService.t(\"removeSponsorship\"),\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    try {\n      this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n      await this.removeSponsorshipPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  get isExpired() {\n    return (\n      this.sub != null && this.sub.expiration != null && new Date(this.sub.expiration) < new Date()\n    );\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.sub.plan.seatPrice;\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <dl>\n          <dt>{{ \"billingPlan\" | i18n }}</dt>\n          <dd>{{ sub.plan.name }}</dd>\n          <ng-container *ngIf=\"subscription\">\n            <dt>{{ \"status\" | i18n }}</dt>\n            <dd>\n              <span class=\"text-capitalize\">{{\n                isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n              }}</span>\n              <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n                \"pendingCancellation\" | i18n\n              }}</span>\n            </dd>\n            <dt>{{ \"nextCharge\" | i18n }}</dt>\n            <dd>\n              {{\n                nextInvoice\n                  ? (nextInvoice.date | date: \"mediumDate\") +\n                    \", \" +\n                    (nextInvoice.amount | currency: \"$\")\n                  : \"-\"\n              }}\n            </dd>\n          </ng-container>\n        </dl>\n      </div>\n      <div class=\"col-8\" *ngIf=\"subscription\">\n        <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n        <table class=\"table\">\n          <tbody>\n            <tr *ngFor=\"let i of subscription.items\">\n              <td>\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency: \"$\" }}\n              </td>\n              <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <ng-container *ngIf=\"userOrg?.providerId != null\">\n        <div class=\"col-sm\">\n          <dl>\n            <dt>{{ \"provider\" | i18n }}</dt>\n            <dd>{{ \"yourProviderIs\" | i18n: userOrg.providerName }}</dd>\n          </dl>\n        </div>\n      </ng-container>\n    </div>\n    <ng-container>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan(true)\"\n        (onCanceled)=\"closeChangePlan(false)\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </ng-container>\n    <h2 class=\"spaced-header\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p class=\"mb-4\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <div class=\"mt-3\">\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </div>\n    </ng-container>\n    <button\n      #removeSponsorshipBtn\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-submit\"\n      (click)=\"removeSponsorship()\"\n      [appApiAction]=\"removeSponsorshipPromise\"\n      [disabled]=\"removeSponsorshipBtn.loading\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"removeSponsorship\" | i18n }}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n\n    <h2 class=\"spaced-header\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"canDownloadLicense\"\n        [disabled]=\"showDownloadLicense\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-1\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n      <app-download-license\n        [organizationId]=\"organizationId\"\n        (onDownloaded)=\"closeDownloadLicense()\"\n        (onCanceled)=\"closeDownloadLicense()\"\n      ></app-download-license>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"selfHosted\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ sub.plan.name }}</dd>\n      <dt>{{ \"expiration\" | i18n }}</dt>\n      <dd *ngIf=\"sub.expiration\">\n        {{ sub.expiration | date: \"mediumDate\" }}\n        <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n          <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {{ \"licenseIsExpired\" | i18n }}\n        </span>\n      </dd>\n      <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        ></app-update-license>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  access2fa = false;\n  selfHosted: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.selfHosted = await this.platformUtilsService.isSelfHost();\n      const organization = await this.organizationService.get(params.organizationId);\n      this.access2fa = organization.use2fa;\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myOrganization\" | i18n }}\n          </a>\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!selfHosted\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"access2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"twoStepLogin\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<p *ngIf=\"organizationId\">{{ \"twoStepLoginOrganizationDesc\" | i18n }}</p>\n<app-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</app-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<app-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</app-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <a\n          href=\"#\"\n          appStopClick\n          class=\"badge badge-primary\"\n          *ngIf=\"!canAccessPremium && p.premium\"\n          (click)=\"premiumRequired()\"\n        >\n          {{ \"premium\" | i18n }}\n        </a>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary btn-sm\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ValidationService } from \"jslib-angular/services/validation.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"jslib-common/enums/planSponsorshipType\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"jslib-common/models/request/organization/organizationSponsorshipRedeemRequest\";\n\nimport { DeleteOrganizationComponent } from \"src/app/organizations/settings/delete-organization.component\";\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n\n      this.existingFamilyOrganizations = (await this.organizationService.getAll()).filter(\n        (o) => o.planProductType === ProductType.Families\n      );\n\n      if (this.existingFamilyOrganizations.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\nimport { ExportComponent as BaseExportComponent } from \"../../tools/export.component\";\n\n@Component({\n  selector: \"app-org-export\",\n  templateUrl: \"../../tools/export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    private route: ActivatedRoute,\n    policyService: PolicyService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n    });\n    await super.ngOnInit();\n  }\n\n  async checkExportDisabled() {\n    return;\n  }\n\n  getExportData() {\n    return this.exportService.getOrganizationExport(this.organizationId, this.format);\n  }\n\n  getFileName() {\n    return super.getFileName(\"org\");\n  }\n\n  async collectEvent(): Promise<any> {\n    // TODO\n    // await this.eventService.collect(EventType.Organization_ClientExportedVault);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  ngNativeValidate\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"exportForm\"\n>\n  <div class=\"page-header\">\n    <h1>{{ \"exportVault\" | i18n }}</h1>\n  </div>\n\n  <app-callout type=\"error\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n    {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n  </app-callout>\n  <app-export-scope-callout\n    [organizationId]=\"organizationId\"\n    *ngIf=\"!disabledByPolicy\"\n  ></app-export-scope-callout>\n\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n      <select class=\"form-control\" id=\"format\" name=\"Format\" formControlName=\"format\">\n        <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <app-verify-master-password ngDefaultControl formControlName=\"secret\" name=\"secret\">\n      </app-verify-master-password>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || exportForm.disabled\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n      *ngIf=\"form.loading\"\n    ></i>\n    <span *ngIf=\"!form.loading\">{{ \"exportVault\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../tools/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"../../tools/exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    const dynamicSuper = Object.getPrototypeOf(this.constructor.prototype);\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      // TODO: We should do something about this, calling super in an async function is bad\n      dynamicSuper.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"button\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\" (click)=\"load()\">\n  <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n  <span>{{ \"checkExposedPasswords\" | i18n }}</span>\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span class=\"badge badge-warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ImportService } from \"jslib-common/abstractions/import.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\n\nimport { ImportComponent as BaseImportComponent } from \"../../tools/import.component\";\n\n@Component({\n  selector: \"app-org-import\",\n  templateUrl: \"../../tools/import.component.html\",\n})\nexport class ImportComponent extends BaseImportComponent {\n  organizationName: string;\n\n  constructor(\n    i18nService: I18nService,\n    importService: ImportService,\n    router: Router,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(i18nService, importService, router, platformUtilsService, policyService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.successNavigate = [\"organizations\", this.organizationId, \"vault\"];\n      await super.ngOnInit();\n      this.importBlockedByPolicy = false;\n    });\n    const organization = await this.organizationService.get(this.organizationId);\n    this.organizationName = organization.name;\n  }\n\n  async submit() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"importWarning\", this.organizationName),\n      this.i18nService.t(\"warning\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    super.submit();\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"importData\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"importBlockedByPolicy\">\n  {{ \"personalOwnershipPolicyInEffectImports\" | i18n }}\n</app-callout>\n<form #form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"type\">1. {{ \"selectFormat\" | i18n }}</label>\n        <select\n          id=\"type\"\n          name=\"Format\"\n          [(ngModel)]=\"format\"\n          class=\"form-control\"\n          [disabled]=\"importBlockedByPolicy\"\n          required\n        >\n          <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          <ng-container *ngIf=\"importOptions && importOptions.length\">\n            <option value=\"-\" disabled></option>\n            <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </ng-container>\n        </select>\n      </div>\n    </div>\n  </div>\n  <app-callout type=\"info\" title=\"{{ getFormatInstructionTitle() }}\" *ngIf=\"format\">\n    <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/export-your-data/\">\n        https://bitwarden.com/help/export-your-data/</a\n      >\n    </ng-container>\n    <ng-container *ngIf=\"format === 'lastpasscsv'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-lastpass/\">\n        https://bitwarden.com/help/import-from-lastpass/</a\n      >\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keepassxcsv'\">\n      Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and\n      save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'aviracsv'\">\n      In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the\n      CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'blurcsv'\">\n      In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export\n      Data\", then click \"Export CSV\" for your \"Accounts\".\n    </ng-container>\n    <ng-container *ngIf=\"format === 'safeincloudxml'\">\n      Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\"\n      and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'padlockcsv'\">\n      Using the Padlock desktop application, click the hamburger icon in the top left corner and\n      navigate to \"Settings\" &rarr; \"Export\" button and save the file \"As CSV\".\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keepass2xml'\">\n      Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the\n      \"KeePass XML (2.x)\" option.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'upmcsv'\">\n      Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr;\n      \"Export\" and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'saferpasscsv'\">\n      Using the SaferPass browser extension, click the hamburger icon in the top left corner and\n      navigate to \"Settings\". Click the \"Export accounts\" button to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'meldiumcsv'\">\n      Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and\n      click \"Show me my data\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keepercsv'\">\n      Log into the Keeper web vault (keepersecurity.com/vault). Click on your \"account email\" (top\n      right) and select \"Settings\". Go to \"Export\" and find the \"Export to .csv File\" option. Click\n      \"Export\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'keeperjson'\">\n      Log into the Keeper web vault (keepersecurity.com/vault). Click on your \"account email\" (top\n      right) and select \"Settings\". Go to \"Export\" and find the \"Export to .json File\" option. Click\n      \"Export\" to save the JSON file.\n    </ng-container>\n    <ng-container\n      *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\"\n    >\n      <span *ngIf=\"format !== 'chromecsv'\">\n        The process is exactly the same as importing from Google Chrome.\n      </span>\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-chrome/\">\n        https://bitwarden.com/help/import-from-chrome/</a\n      >\n    </ng-container>\n    <ng-container *ngIf=\"format === 'firefoxcsv'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-firefox/\">\n        https://bitwarden.com/help/import-from-firefox/</a\n      >.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'safaricsv'\">\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-safari/\">\n        https://bitwarden.com/help/import-from-safari/</a\n      >.\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        format === '1password1pux' ||\n        format === '1password1pif' ||\n        format === '1passwordwincsv' ||\n        format === '1passwordmaccsv'\n      \"\n    >\n      See detailed instructions on our help site at\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bitwarden.com/help/import-from-1password/\">\n        https://bitwarden.com/help/import-from-1password/</a\n      >.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passworddragonxml'\">\n      Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To\n      XML\". In the dialog that pops up select \"All Rows\" and check all fields. Click the \"Export\"\n      button and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'enpasscsv'\">\n      Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\".\n      Select \"OK\" to the warning alert and save the CSV file. Note that the importer only supports\n      files exported while Enpass is set to the English language, so adjust your settings\n      accordingly.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'enpassjson'\">\n      Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr;\n      \"Export\". Select the \".json\" file format option and save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'pwsafexml'\">\n      Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML\n      format...\" and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'dashlanecsv'\">\n      Log in to Dashlane, click on \"My Account\" &rarr; \"Settings\" &rarr; \"Export file\" and select\n      \"Export as a CSV file\". This will download a zip archive containing various CSV files. Unzip\n      the archive and import each CSV file individually.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'dashlanejson'\">\n      Dashlane no longer supports the JSON format. Only use this if you have an existing JSON for\n      import. Use the CSV importer when creating new exports.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'msecurecsv'\">\n      Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\"\n      and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'stickypasswordxml'\">\n      Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\"\n      &rarr; \"Export all\". Select the unencrypted format XML option and save the XML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'truekeycsv'\">\n      Using the True Key desktop application, click the gear icon (top right) and then navigate to\n      \"App Settings\". Click the \"Export\" button, enter your password and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'clipperzhtml'\">\n      Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the\n      top right to expand the navigation bar. Navigate to \"Data\" &rarr; \"Export\". Click the\n      \"download HTML+JSON\" button to save the HTML file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'roboformcsv'\">\n      Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr;\n      \"Options\" &rarr; \"Account &amp; Data\" and click the \"Export\" button. Select all of your data,\n      change the \"Format\" to \"CSV file\" and then click the \"Export\" button to save the CSV file.\n      Note: RoboForm only allows you to export Logins. Other items will not be exported.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passboltcsv'\">\n      Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the\n      passwords you would like to export and click the \"Export\" button at the top of the listing.\n      Choose the \"csv (lastpass)\" export format and click the \"Export\" button.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'ascendocsv'\">\n      Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the\n      dialog that pops up, select the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save\n      the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passwordbossjson'\">\n      Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr;\n      \"Password Boss JSON - not encrypted\" and save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'zohovaultcsv'\">\n      Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\".\n      Select \"All Secrets\" and click the \"Zoho Vault Format CSV\" button. Highlight and copy the data\n      from the textarea. Open a text editor like Notepad and paste the data. Save the data from the\n      text editor as\n      <code>zoho_export.csv</code>.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'splashidcsv'\">\n      Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top\n      right corner. Navigate to \"Export\" &rarr; \"Export as CSV\" and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passkeepcsv'\">\n      Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\"\n      section and click \"Backup to CSV\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'gnomejson'\">\n      Make sure you have python-keyring and python-gnomekeyring installed. Save the\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\"\n        >GNOME Keyring Import/Export</a\n      >\n      python script to your desktop as <code>pw_helper.py</code>. Open terminal and run\n      <code>chmod +rx Desktop/pw_helper.py</code> and then\n      <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the\n      resulting <code>my_passwords.json</code> file here to Bitwarden.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passwordagentcsv'\">\n      Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the\n      \"Fields to export\" button and check all of the fields, change the \"Output format\" to \"CSV\",\n      and then click the \"Start\" button to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passpackcsv'\">\n      Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the\n      \"Download\" button to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passmanjson'\">\n      Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\"\n      window switch to the \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your\n      vault's passphrase and click the \"Export\" button to save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'avastcsv'\">\n      Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export\n      data\". Select the \"Export\" button for the \"Export to CSV file\" option to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'avastjson'\">\n      Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export\n      data\". Select the \"Export\" button for the \"Export to JSON file\" option to save the JSON file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'fsecurefsk'\">\n      Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export\n      Passwords\". Select the \"Export\" button, enter your master password, and save the FSK file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'kasperskytxt'\">\n      Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr;\n      \"Import/Export\". Locate the \"Export to text file\" section and select the \"Export\" button to\n      save the TXT file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'remembearcsv'\">\n      Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr;\n      \"Export\". Enter your master password and select the \"Export Anyway\" button to save the CSV\n      file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'passwordwallettxt'\">\n      Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr;\n      \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT\n      file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'mykicsv'\">\n      Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\"\n      and then scan the QR code with your mobile device. Various CSV files will then be saved to\n      your computer's downloads folder.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'securesafecsv'\">\n      Export your SecureSafe password safe to a CSV file with a comma delimiter.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'logmeoncecsv'\">\n      Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and\n      select \"CSV File\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'blackberrycsv'\">\n      Open the BlackBerry Password Keeper application, then navigate to \"Settings\" &rarr;\n      \"Import/Export\". Select \"Export Passwords\" and follow the instructions on screen to save the\n      unencrypted CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'buttercupcsv'\">\n      Open the Buttercup desktop application and unlock your vault. Right click on your vault's icon\n      and select \"Export\" to save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'codebookcsv'\">\n      Open the Codebook desktop application and log in. Navigate to \"File\" &rarr; \"Export all\", then\n      click \"Yes\" on the dialog and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'encryptrcsv'\">\n      Open the newest version of the Encryptr desktop application and allow all of your data to\n      sync. Once syncing of your data is complete, the download icon in the top right corner will\n      turn pink. Click the download icon and save the CSV file.\n    </ng-container>\n    <ng-container *ngIf=\"format === 'yoticsv'\">\n      From the Yoti browser extension, click on \"Settings\", then \"Export Saved Logins\" and save the\n      CSV file.\n    </ng-container>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"file\">2. {{ \"selectImportFile\" | i18n }}</label>\n        <input\n          type=\"file\"\n          id=\"file\"\n          class=\"form-control-file\"\n          name=\"file\"\n          [disabled]=\"importBlockedByPolicy\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"fileContents\">{{ \"orCopyPasteFileContents\" | i18n }}</label>\n    <textarea\n      id=\"fileContents\"\n      class=\"form-control\"\n      name=\"FileContents\"\n      [(ngModel)]=\"fileContents\"\n      [disabled]=\"importBlockedByPolicy\"\n    ></textarea>\n  </div>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary btn-submit\"\n    [disabled]=\"loading || importBlockedByPolicy\"\n    [ngClass]=\"{ manual: importBlockedByPolicy }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"importData\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../tools/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../tools/inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              class=\"badge badge-primary\"\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../tools/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../tools/reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span class=\"badge badge-warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent {\n  organization: Organization;\n  accessReports = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      this.accessReports = this.organization.useTotp;\n      this.loading = false;\n    });\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n  }\n}\n","<div class=\"container page-content\">\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\">\n          <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n          <div class=\"list-group list-group-flush\">\n            <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"importData\" | i18n }}\n            </a>\n            <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"exportVault\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"card\" *ngIf=\"organization.canAccessReports\">\n          <div class=\"card-header d-flex\">\n            {{ \"reports\" | i18n }}\n            <div class=\"ml-auto\">\n              <a\n                href=\"#\"\n                appStopClick\n                class=\"badge badge-primary\"\n                *ngIf=\"!accessReports\"\n                (click)=\"upgradeOrganization()\"\n              >\n                {{ \"upgrade\" | i18n }}\n              </a>\n            </div>\n          </div>\n          <div class=\"list-group list-group-flush\">\n            <a\n              routerLink=\"exposed-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"exposedPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"reused-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"reusedPasswordsReport\" | i18n }}\n            </a>\n            <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"weakPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"unsecured-websites-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"unsecuredWebsitesReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"inactive-two-factor-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"inactive2faReport\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../tools/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../tools/unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../tools/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../tools/weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span class=\"badge badge-{{ passwordStrengthMap.get(c.id)[1] }}\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherCreateRequest } from \"jslib-common/models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"jslib-common/models/request/cipherRequest\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div *ngIf=\"!cipher.login.totp || !totpCode\">\n                <img\n                  src=\"../../images/totp-countdown.png\"\n                  id=\"totpImage\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  class=\"ml-2\"\n                />\n                <a\n                  href=\"#\"\n                  appStopClick\n                  class=\"badge badge-primary ml-3\"\n                  (click)=\"premiumRequired()\"\n                  *ngIf=\"!organization && !cipher.organizationId && !canAccessPremium\"\n                >\n                  {{ \"premium\" | i18n }}\n                </a>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  class=\"badge badge-primary ml-3\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\">\n                <span class=\"totp-countdown mr-3 ml-2\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span class=\"totp-code mr-2\" title=\"{{ 'verificationCodeTotp' | i18n }}\">{{\n                  totpCodeFormatted\n                }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <select\n                id=\"cardBrand\"\n                class=\"form-control\"\n                name=\"Card.Brand\"\n                [(ngModel)]=\"cipher.card.brand\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <select\n                id=\"cardExpMonth\"\n                class=\"form-control\"\n                name=\"Card.ExpMonth\"\n                [(ngModel)]=\"cipher.card.expMonth\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <select\n                id=\"idTitle\"\n                class=\"form-control\"\n                name=\"Identity.Title\"\n                [(ngModel)]=\"cipher.identity.title\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"password-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            href=\"#\"\n            appStopClick\n            appStopProp\n            (click)=\"selectCipher(c)\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"!organization && c.organizationId\">\n            <i\n              class=\"bwi bwi-collection\"\n              appStopProp\n              title=\"{{ 'shared' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n          </ng-container>\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n              <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"copy(c, c.login.username, 'username', 'Username')\"\n                >\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copyUsername\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                  *ngIf=\"c.viewPassword\"\n                >\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copyPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                  *ngIf=\"displayTotpCopyButton(c)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copyVerificationCode\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  *ngIf=\"c.login.canLaunch\"\n                  (click)=\"launch(c.login.launchUri)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                  {{ \"launch\" | i18n }}\n                </a>\n              </ng-container>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\">\n                <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                {{ \"attachments\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n                (click)=\"clone(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n                {{ \"clone\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n                (click)=\"share(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n                {{ \"moveToOrganization\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"c.organizationId && !c.isDeleted\"\n                (click)=\"collections(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n                {{ \"collections\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"c.organizationId && accessEvents\"\n                (click)=\"events(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                {{ \"eventLogs\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"restore(c)\"\n                *ngIf=\"c.isDeleted\"\n              >\n                <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n                {{ \"restore\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"jslib-common/models/request/cipherCollectionsRequest\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { Collection } from \"jslib-common/models/domain/collection\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CollectionDetailsResponse } from \"jslib-common/models/response/collectionResponse\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\nimport { GroupingsComponent as BaseGroupingsComponent } from \"../../vault/groupings.component\";\n\n@Component({\n  selector: \"app-org-vault-groupings\",\n  templateUrl: \"../../vault/groupings.component.html\",\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    folderService: FolderService,\n    stateService: StateService,\n    private apiService: ApiService,\n    private i18nService: I18nService\n  ) {\n    super(collectionService, folderService, stateService);\n  }\n\n  async loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      await super.loadCollections(this.organization.id);\n      return;\n    }\n\n    const collections = await this.apiService.getCollections(this.organization.id);\n    if (collections != null && collections.data != null && collections.data.length) {\n      const collectionDomains = collections.data.map(\n        (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n      );\n      this.collections = await this.collectionService.decryptMany(collectionDomains);\n    } else {\n      this.collections = [];\n    }\n\n    const unassignedCollection = new CollectionView();\n    unassignedCollection.name = this.i18nService.t(\"unassigned\");\n    unassignedCollection.id = \"unassigned\";\n    unassignedCollection.organizationId = this.organization.id;\n    unassignedCollection.readOnly = true;\n    this.collections.push(unassignedCollection);\n    this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n  }\n\n  async collapse(grouping: CollectionView) {\n    await super.collapse(grouping, \"org_\");\n  }\n\n  isCollapsed(grouping: CollectionView) {\n    return super.isCollapsed(grouping, \"org_\");\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"card-header d-flex\">\n    {{ \"filters\" | i18n }}\n    <a\n      class=\"ml-auto\"\n      href=\"https://bitwarden.com/help/searching-vault/\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n    >\n      <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n    </a>\n  </div>\n  <div class=\"card-body\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      class=\"form-control\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchTextChanged()\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <ul class=\"bwi-ul card-ul\">\n      <li [ngClass]=\"{ active: selectedAll }\">\n        <a href=\"#\" appStopClick (click)=\"selectAll()\">\n          <i class=\"bwi bwi-li bwi-fw bwi-filter\"></i>{{ \"allItems\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedFavorites }\" *ngIf=\"showFavorites\">\n        <a href=\"#\" appStopClick (click)=\"selectFavorites()\">\n          <i class=\"bwi bwi-li bwi-fw bwi-star\"></i>{{ \"favorites\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedTrash }\" *ngIf=\"showTrash\">\n        <a href=\"#\" appStopClick (click)=\"selectTrash()\">\n          <i class=\"bwi bwi-li bwi-fw bwi-trash\"></i>{{ \"trash\" | i18n }}\n        </a>\n      </li>\n    </ul>\n    <h3>{{ \"types\" | i18n }}</h3>\n    <ul class=\"bwi-ul card-ul\">\n      <li [ngClass]=\"{ active: selectedType === cipherType.Login }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-globe\"></i>{{ \"typeLogin\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedType === cipherType.Card }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-credit-card\"></i>{{ \"typeCard\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedType === cipherType.Identity }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-id-card\"></i>{{ \"typeIdentity\" | i18n }}\n        </a>\n      </li>\n      <li [ngClass]=\"{ active: selectedType === cipherType.SecureNote }\">\n        <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\">\n          <i class=\"bwi bwi-li bwi-fw bwi-sticky-note\"></i>{{ \"typeSecureNote\" | i18n }}\n        </a>\n      </li>\n    </ul>\n    <p *ngIf=\"!loaded\" class=\"text-muted\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n    <ng-container *ngIf=\"loaded\">\n      <ng-container *ngIf=\"showFolders\">\n        <h3 class=\"d-flex\">\n          {{ \"folders\" | i18n }}\n          <a\n            href=\"#\"\n            class=\"text-muted ml-auto\"\n            appStopClick\n            (click)=\"addFolder()\"\n            appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <ul class=\"bwi-ul card-ul\">\n          <ng-template #recursiveFolders let-folders>\n            <li\n              *ngFor=\"let f of folders\"\n              [ngClass]=\"{ active: selectedFolder && f.node.id === selectedFolderId }\"\n            >\n              <div class=\"d-flex\">\n                <i\n                  *ngIf=\"f.children.length\"\n                  class=\"bwi-li bwi\"\n                  title=\"{{ 'toggleCollapse' | i18n }}\"\n                  [ngClass]=\"{\n                    'bwi-angle-right': isCollapsed(f.node),\n                    'bwi-angle-down': !isCollapsed(f.node)\n                  }\"\n                  (click)=\"collapse(f.node)\"\n                ></i>\n                <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectFolder(f.node)\">\n                  <i\n                    *ngIf=\"f.children.length === 0\"\n                    class=\"bwi bwi-li bwi-folder\"\n                    aria-hidden=\"true\"\n                  ></i\n                  >{{ f.node.name }}\n                </a>\n                <a\n                  href=\"#\"\n                  class=\"text-muted ml-auto show-active\"\n                  appStopClick\n                  (click)=\"editFolder(f.node)\"\n                  appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n                  *ngIf=\"f.node.id\"\n                >\n                  <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n              <ul class=\"bwi-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\">\n                <ng-container\n                  *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\"\n                >\n                </ng-container>\n              </ul>\n            </li>\n          </ng-template>\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\">\n          </ng-container>\n        </ul>\n      </ng-container>\n      <ng-container *ngIf=\"showCollections && collections && collections.length\">\n        <h3>{{ \"collections\" | i18n }}</h3>\n        <ul class=\"bwi-ul card-ul\">\n          <ng-template #recursiveCollections let-collections>\n            <li\n              *ngFor=\"let c of collections\"\n              [ngClass]=\"{ active: c.node.id === selectedCollectionId }\"\n            >\n              <i\n                *ngIf=\"c.children.length\"\n                class=\"bwi-li bwi\"\n                title=\"{{ 'toggleCollapse' | i18n }}\"\n                [ngClass]=\"{\n                  'bwi-angle-right': isCollapsed(c.node),\n                  'bwi-angle-down': !isCollapsed(c.node)\n                }\"\n                (click)=\"collapse(c.node)\"\n              ></i>\n              <a href=\"#\" class=\"text-break\" appStopClick (click)=\"selectCollection(c.node)\">\n                <i\n                  *ngIf=\"c.children.length === 0\"\n                  class=\"bwi bwi-li bwi-collection\"\n                  aria-hidden=\"true\"\n                ></i\n                >{{ c.node.name }}\n              </a>\n              <ul class=\"bwi-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\">\n                <ng-container\n                  *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n                >\n                </ng-container>\n              </ul>\n            </li>\n          </ng-template>\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n          >\n          </ng-container>\n        </ul>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { GroupingsComponent } from \"./groupings.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  deleted = false;\n  trashCleanupWarning: string = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\"trashCleanupWarningSelfHosted\");\n    this.route.parent.params.pipe(first()).subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.groupingsComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.groupingsComponent.load(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n        await this.groupingsComponent.load();\n\n        if (qParams == null) {\n          this.groupingsComponent.selectedAll = true;\n          await this.ciphersComponent.reload();\n        } else {\n          if (qParams.deleted) {\n            this.groupingsComponent.selectedTrash = true;\n            await this.filterDeleted(true);\n          } else if (qParams.type) {\n            const t = parseInt(qParams.type, null);\n            this.groupingsComponent.selectedType = t;\n            await this.filterCipherType(t, true);\n          } else if (qParams.collectionId) {\n            this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n            await this.filterCollection(qParams.collectionId, true);\n          } else {\n            this.groupingsComponent.selectedAll = true;\n            await this.ciphersComponent.reload();\n          }\n        }\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async clearGroupingFilters() {\n    this.ciphersComponent.showAddNew = true;\n    this.ciphersComponent.deleted = false;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchVault\");\n    await this.ciphersComponent.applyFilter();\n    this.clearFilters();\n    this.go();\n  }\n\n  async filterCipherType(type: CipherType, load = false) {\n    this.ciphersComponent.showAddNew = true;\n    this.ciphersComponent.deleted = false;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchType\");\n    const filter = (c: CipherView) => c.type === type;\n    if (load) {\n      await this.ciphersComponent.reload(filter);\n    } else {\n      await this.ciphersComponent.applyFilter(filter);\n    }\n    this.clearFilters();\n    this.type = type;\n    this.go();\n  }\n\n  async filterCollection(collectionId: string, load = false) {\n    this.ciphersComponent.showAddNew = true;\n    this.ciphersComponent.deleted = false;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n    const filter = (c: CipherView) => {\n      if (collectionId === \"unassigned\") {\n        return c.collectionIds == null || c.collectionIds.length === 0;\n      } else {\n        return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\n      }\n    };\n    if (load) {\n      await this.ciphersComponent.reload(filter);\n    } else {\n      await this.ciphersComponent.applyFilter(filter);\n    }\n    this.clearFilters();\n    this.collectionId = collectionId;\n    this.go();\n  }\n\n  async filterDeleted(load = false) {\n    this.ciphersComponent.showAddNew = false;\n    this.ciphersComponent.deleted = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n    if (load) {\n      await this.ciphersComponent.reload(null, true);\n    } else {\n      await this.ciphersComponent.applyFilter(null);\n    }\n    this.clearFilters();\n    this.deleted = true;\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private clearFilters() {\n    this.collectionId = null;\n    this.type = null;\n    this.deleted = false;\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.type,\n        collectionId: this.collectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      replaceUrl: true,\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <app-org-vault-groupings\n        [showFolders]=\"false\"\n        [showFavorites]=\"false\"\n        [showTrash]=\"true\"\n        (onAllClicked)=\"clearGroupingFilters()\"\n        (onCipherTypeClicked)=\"filterCipherType($event)\"\n        (onCollectionClicked)=\"filterCollection($event.id)\"\n        (onSearchTextChanged)=\"filterSearchText($event)\"\n        (onTrashClicked)=\"filterDeleted()\"\n      >\n      </app-org-vault-groupings>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vault\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\nimport { LockGuardService } from \"jslib-angular/services/lock-guard.service\";\nimport { UnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"./organizations/manage/collections.component\";\nimport { EventsComponent as OrgEventsComponent } from \"./organizations/manage/events.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"./organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"./organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"./organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"./organizations/manage/policies.component\";\nimport { AccountComponent as OrgAccountComponent } from \"./organizations/settings/account.component\";\nimport { OrganizationBillingComponent } from \"./organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingsComponent } from \"./organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"./organizations/settings/two-factor-setup.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExportComponent as OrgExportComponent } from \"./organizations/tools/export.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"./organizations/tools/exposed-passwords-report.component\";\nimport { ImportComponent as OrgImportComponent } from \"./organizations/tools/import.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"./organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"./organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"./organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"./organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"./organizations/tools/weak-passwords-report.component\";\nimport { VaultComponent as OrgVaultComponent } from \"./organizations/vault/vault.component\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { OrganizationGuardService } from \"./services/organization-guard.service\";\nimport { OrganizationTypeGuardService } from \"./services/organization-type-guard.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { OrganizationsComponent } from \"./settings/organizations.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { UserBillingComponent } from \"./settings/user-billing.component\";\nimport { UserSubscriptionComponent } from \"./settings/user-subscription.component\";\nimport { BreachReportComponent } from \"./tools/breach-report.component\";\nimport { ExportComponent } from \"./tools/export.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { ImportComponent } from \"./tools/import.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { PasswordGeneratorComponent } from \"./tools/password-generator.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\nimport { VaultComponent } from \"./vault/vault.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      { path: \"\", pathMatch: \"full\", component: LoginComponent, canActivate: [UnauthGuardService] },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"createAccount\" },\n      },\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuardService],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\" },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\" },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuardService],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuardService],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuardService],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuardService],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      { path: \"vault\", component: VaultComponent, data: { titleId: \"myVault\" } },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          { path: \"options\", component: OptionsComponent, data: { titleId: \"options\" } },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"two-factor\",\n            component: TwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          { path: \"premium\", component: PremiumComponent, data: { titleId: \"goPremium\" } },\n          { path: \"billing\", component: UserBillingComponent, data: { titleId: \"billing\" } },\n          {\n            path: \"subscription\",\n            component: UserSubscriptionComponent,\n            data: { titleId: \"premiumMembership\" },\n          },\n          {\n            path: \"organizations\",\n            component: OrganizationsComponent,\n            data: { titleId: \"organizations\" },\n          },\n          {\n            path: \"create-organization\",\n            component: CreateOrganizationComponent,\n            data: { titleId: \"newOrganization\" },\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuardService],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          { path: \"import\", component: ImportComponent, data: { titleId: \"importData\" } },\n          { path: \"export\", component: ExportComponent, data: { titleId: \"exportVault\" } },\n          {\n            path: \"generator\",\n            component: PasswordGeneratorComponent,\n            data: { titleId: \"passwordGenerator\" },\n          },\n          {\n            path: \"breach-report\",\n            component: BreachReportComponent,\n            data: { titleId: \"dataBreachReport\" },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            data: { titleId: \"reusedPasswordsReport\" },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            data: { titleId: \"unsecuredWebsitesReport\" },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            data: { titleId: \"weakPasswordsReport\" },\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            data: { titleId: \"exposedPasswordsReport\" },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            data: { titleId: \"inactive2faReport\" },\n          },\n        ],\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuardService, OrganizationGuardService],\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      { path: \"vault\", component: OrgVaultComponent, data: { titleId: \"vault\" } },\n      {\n        path: \"tools\",\n        component: OrgToolsComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: { permissions: [Permissions.AccessImportExport, Permissions.AccessReports] },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"import\",\n          },\n          {\n            path: \"import\",\n            component: OrgImportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"importData\",\n              permissions: [Permissions.AccessImportExport],\n            },\n          },\n          {\n            path: \"export\",\n            component: OrgExportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"exportVault\",\n              permissions: [Permissions.AccessImportExport],\n            },\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: OrgExposedPasswordsReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"exposedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: OrgInactiveTwoFactorReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"inactive2faReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: OrgReusedPasswordsReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"reusedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: OrgUnsecuredWebsitesReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: OrgWeakPasswordsReportComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"weakPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n        ],\n      },\n      {\n        path: \"manage\",\n        component: OrgManageComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: {\n          permissions: [\n            Permissions.CreateNewCollections,\n            Permissions.EditAnyCollection,\n            Permissions.DeleteAnyCollection,\n            Permissions.EditAssignedCollections,\n            Permissions.DeleteAssignedCollections,\n            Permissions.AccessEventLogs,\n            Permissions.ManageGroups,\n            Permissions.ManageUsers,\n            Permissions.ManagePolicies,\n          ],\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"people\",\n          },\n          {\n            path: \"collections\",\n            component: OrgManageCollectionsComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"collections\",\n              permissions: [\n                Permissions.CreateNewCollections,\n                Permissions.EditAnyCollection,\n                Permissions.DeleteAnyCollection,\n                Permissions.EditAssignedCollections,\n                Permissions.DeleteAssignedCollections,\n              ],\n            },\n          },\n          {\n            path: \"events\",\n            component: OrgEventsComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"eventLogs\",\n              permissions: [Permissions.AccessEventLogs],\n            },\n          },\n          {\n            path: \"groups\",\n            component: OrgGroupsComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"groups\",\n              permissions: [Permissions.ManageGroups],\n            },\n          },\n          {\n            path: \"people\",\n            component: OrgPeopleComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"people\",\n              permissions: [Permissions.ManageUsers, Permissions.ManageUsersPassword],\n            },\n          },\n          {\n            path: \"policies\",\n            component: OrgPoliciesComponent,\n            canActivate: [OrganizationTypeGuardService],\n            data: {\n              titleId: \"policies\",\n              permissions: [Permissions.ManagePolicies],\n            },\n          },\n        ],\n      },\n      {\n        path: \"settings\",\n        component: OrgSettingsComponent,\n        canActivate: [OrganizationTypeGuardService],\n        data: { permissions: [Permissions.ManageOrganization] },\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: OrgAccountComponent, data: { titleId: \"myOrganization\" } },\n          {\n            path: \"two-factor\",\n            component: OrgTwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          {\n            path: \"billing\",\n            component: OrganizationBillingComponent,\n            data: { titleId: \"billing\" },\n          },\n          {\n            path: \"subscription\",\n            component: OrganizationSubscriptionComponent,\n            data: { titleId: \"subscription\" },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, registerLocaleData, CommonModule } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { AvatarComponent } from \"jslib-angular/components/avatar.component\";\nimport { CalloutComponent } from \"jslib-angular/components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"jslib-angular/components/export-scope-callout.component\";\nimport { IconComponent } from \"jslib-angular/components/icon.component\";\nimport { VerifyMasterPasswordComponent } from \"jslib-angular/components/verify-master-password.component\";\nimport { A11yInvalidDirective } from \"jslib-angular/directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"jslib-angular/directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"jslib-angular/directives/api-action.directive\";\nimport { AutofocusDirective } from \"jslib-angular/directives/autofocus.directive\";\nimport { BlurClickDirective } from \"jslib-angular/directives/blur-click.directive\";\nimport { BoxRowDirective } from \"jslib-angular/directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"jslib-angular/directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"jslib-angular/directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"jslib-angular/directives/input-verbatim.directive\";\nimport { SelectCopyDirective } from \"jslib-angular/directives/select-copy.directive\";\nimport { StopClickDirective } from \"jslib-angular/directives/stop-click.directive\";\nimport { StopPropDirective } from \"jslib-angular/directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"jslib-angular/directives/true-false-value.directive\";\nimport { ColorPasswordPipe } from \"jslib-angular/pipes/color-password.pipe\";\nimport { I18nPipe } from \"jslib-angular/pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"jslib-angular/pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"jslib-angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { NestedCheckboxComponent } from \"./components/nested-checkbox.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PasswordStrengthComponent } from \"./components/password-strength.component\";\nimport { FooterComponent } from \"./layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"./layouts/navbar.component\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"./organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"./organizations/manage/bulk/bulk-remove.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"./organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"./organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"./organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"./organizations/manage/entity-events.component\";\nimport { EntityUsersComponent as OrgEntityUsersComponent } from \"./organizations/manage/entity-users.component\";\nimport { EventsComponent as OrgEventsComponent } from \"./organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"./organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"./organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"./organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"./organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"./organizations/manage/policies.component\";\nimport { PolicyEditComponent as OrgPolicyEditComponent } from \"./organizations/manage/policy-edit.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"./organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"./organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"./organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"./organizations/manage/user-groups.component\";\nimport { DisableSendPolicyComponent } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicyComponent } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicyComponent } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"./organizations/policies/two-factor-authentication.component\";\nimport { AccountComponent as OrgAccountComponent } from \"./organizations/settings/account.component\";\nimport { AdjustSubscription } from \"./organizations/settings/adjust-subscription.component\";\nimport { ChangePlanComponent } from \"./organizations/settings/change-plan.component\";\nimport { DeleteOrganizationComponent } from \"./organizations/settings/delete-organization.component\";\nimport { DownloadLicenseComponent } from \"./organizations/settings/download-license.component\";\nimport { OrganizationBillingComponent } from \"./organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingComponent } from \"./organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"./organizations/settings/two-factor-setup.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExportComponent as OrgExportComponent } from \"./organizations/tools/export.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"./organizations/tools/exposed-passwords-report.component\";\nimport { ImportComponent as OrgImportComponent } from \"./organizations/tools/import.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"./organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"./organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"./organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"./organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"./organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"./organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"./organizations/vault/attachments.component\";\nimport { CiphersComponent as OrgCiphersComponent } from \"./organizations/vault/ciphers.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"./organizations/vault/collections.component\";\nimport { GroupingsComponent as OrgGroupingsComponent } from \"./organizations/vault/groupings.component\";\nimport { VaultComponent as OrgVaultComponent } from \"./organizations/vault/vault.component\";\nimport { ProvidersComponent } from \"./providers/providers.component\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"./send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { AddCreditComponent } from \"./settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"./settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"./settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"./settings/api-key.component\";\nimport { ChangeEmailComponent } from \"./settings/change-email.component\";\nimport { ChangeKdfComponent } from \"./settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"./settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"./settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./settings/delete-account.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"./settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"./settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"./settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"./settings/emergency-add-edit.component\";\nimport { LinkSsoComponent } from \"./settings/link-sso.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { OrganizationPlansComponent } from \"./settings/organization-plans.component\";\nimport { OrganizationsComponent } from \"./settings/organizations.component\";\nimport { PaymentComponent } from \"./settings/payment.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { ProfileComponent } from \"./settings/profile.component\";\nimport { PurgeVaultComponent } from \"./settings/purge-vault.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"./settings/sponsoring-org-row.component\";\nimport { TaxInfoComponent } from \"./settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"./settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"./settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"./settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"./settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"./settings/update-license.component\";\nimport { UserBillingComponent } from \"./settings/user-billing.component\";\nimport { UserSubscriptionComponent } from \"./settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"./settings/verify-email.component\";\nimport { BreachReportComponent } from \"./tools/breach-report.component\";\nimport { ExportComponent } from \"./tools/export.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { ImportComponent } from \"./tools/import.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./tools/password-generator-history.component\";\nimport { PasswordGeneratorComponent } from \"./tools/password-generator.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { BulkActionsComponent } from \"./vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"./vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"./vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"./vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"./vault/bulk-share.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { FolderAddEditComponent } from \"./vault/folder-add-edit.component\";\nimport { GroupingsComponent } from \"./vault/groupings.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultComponent } from \"./vault/vault.component\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    ToastrModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  declarations: [\n    A11yTitleDirective,\n    A11yInvalidDirective,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiActionDirective,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    AutofocusDirective,\n    AvatarComponent,\n    BlurClickDirective,\n    BoxRowDirective,\n    BreachReportComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    CalloutComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    ColorPasswordPipe,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    ExportComponent,\n    ExportScopeCalloutComponent,\n    ExposedPasswordsReportComponent,\n    FallbackSrcDirective,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    GroupingsComponent,\n    HintComponent,\n    I18nPipe,\n    IconComponent,\n    ImportComponent,\n    InactiveTwoFactorReportComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    LinkSsoComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OptionsComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationsComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCiphersComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEntityUsersComponent,\n    OrgEventsComponent,\n    OrgExportComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupingsComponent,\n    OrgGroupsComponent,\n    OrgImportComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgVaultComponent,\n    OrgWeakPasswordsReportComponent,\n    PasswordGeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PasswordStrengthComponent,\n    PaymentComponent,\n    PersonalOwnershipPolicyComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    ReusedPasswordsReportComponent,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    StopClickDirective,\n    StopPropDirective,\n    TaxInfoComponent,\n    ToolsComponent,\n    TrueFalseValueDirective,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UnsecuredWebsitesReportComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdateTempPasswordComponent,\n    UpdatePasswordComponent,\n    UserBillingComponent,\n    UserLayoutComponent,\n    UserNamePipe,\n    UserSubscriptionComponent,\n    VaultComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyMasterPasswordComponent,\n    VerifyRecoverDeleteComponent,\n    WeakPasswordsReportComponent,\n  ],\n  exports: [\n    A11yTitleDirective,\n    A11yInvalidDirective,\n    ApiActionDirective,\n    AvatarComponent,\n    CalloutComponent,\n    FooterComponent,\n    I18nPipe,\n    InputStripSpacesDirective,\n    NavbarComponent,\n    OrganizationPlansComponent,\n    SearchPipe,\n    StopClickDirective,\n    StopPropDirective,\n    UserNamePipe,\n  ],\n  providers: [DatePipe, SearchPipe, UserNamePipe],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Provider } from \"jslib-common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  @Input() vault = false;\n\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<ng-container *ngIf=\"vault\">\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <ul class=\"bwi-ul card-ul carets\" *ngIf=\"providers && providers.length\">\n      <li *ngFor=\"let p of providers\">\n        <a [routerLink]=\"['/providers', p.id]\" class=\"text-body\">\n          <i class=\"bwi bwi-li bwi-caret-right\" aria-hidden=\"true\"></i> {{ p.name }}\n          <ng-container *ngIf=\"!p.enabled\">\n            <i\n              class=\"bwi bwi-exclamation-triangle text-danger\"\n              title=\"{{ 'providerIsDisabled' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n          </ng-container>\n        </a>\n      </li>\n    </ul>\n  </ng-container>\n</ng-container>\n<ng-container *ngIf=\"!vault\">\n  <app-navbar></app-navbar>\n  <div class=\"container page-content\">\n    <div class=\"page-header d-flex\">\n      <h1>{{ \"providers\" | i18n }}</h1>\n    </div>\n    <p *ngIf=\"!loaded\" class=\"text-muted\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n    <ng-container *ngIf=\"loaded\">\n      <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n        <tbody>\n          <tr *ngFor=\"let p of providers\">\n            <td width=\"30\">\n              <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n            </td>\n            <td>\n              <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n              <ng-container *ngIf=\"!p.enabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle text-danger\"\n                  title=\"{{ 'providerIsDisabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n              </ng-container>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </ng-container>\n  </div>\n  <app-footer></app-footer>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { SendAccess } from \"jslib-common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { SendAccessRequest } from \"jslib-common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { SendAccessResponse } from \"jslib-common/models/response/sendAccessResponse\";\nimport { SendAccessView } from \"jslib-common/models/view/sendAccessView\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, this.decKey);\n      this.platformUtilsService.saveFile(window, decBuf, null, this.send.file.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        100000\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <p class=\"lead text-center mb-4\">Bitwarden Send</p>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n      </p>\n    </div>\n  </div>\n</form>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"jslib-angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <ul class=\"bwi-ul card-ul\">\n            <li [ngClass]=\"{ active: selectedAll }\">\n              <a href=\"#\" appStopClick (click)=\"selectAll()\">\n                <i class=\"bwi bwi-li bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n              </a>\n            </li>\n          </ul>\n          <h3>{{ \"types\" | i18n }}</h3>\n          <ul class=\"bwi-ul card-ul\">\n            <li [ngClass]=\"{ active: selectedType === sendType.Text }\">\n              <a href=\"#\" appStopClick (click)=\"selectType(sendType.Text)\">\n                <i class=\"bwi bwi-li bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n              </a>\n            </li>\n            <li [ngClass]=\"{ active: selectedType === sendType.File }\">\n              <a href=\"#\" appStopClick (click)=\"selectType(sendType.File)\">\n                <i class=\"bwi bwi-li bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <div class=\"dropdown\" appListDropdown>\n                <button\n                  class=\"btn btn-outline-secondary dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  appA11yTitle=\"{{ 'options' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                  <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(s)\">\n                    <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                    {{ \"copySendLink\" | i18n }}\n                  </a>\n                  <a\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"removePassword(s)\"\n                    *ngIf=\"s.password && !disableSend\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                    {{ \"removePassword\" | i18n }}\n                  </a>\n                  <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(s)\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </a>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { EventResponse } from \"jslib-common/models/response/eventResponse\";\n\n@Injectable()\nexport class EventService {\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policies = await this.policyService.getAll();\n        const policy = policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"jslib-angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"jslib-angular/services/modal.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const org = await this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { Permissions } from \"jslib-common/enums/permissions\";\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n  constructor(private organizationService: OrganizationService, private router: Router) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const org = await this.organizationService.get(route.params.organizationId);\n    const permissions = route.data == null ? null : (route.data.permissions as Permissions[]);\n\n    if (\n      (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && org.canAccessEventLogs) ||\n      (permissions.indexOf(Permissions.AccessImportExport) !== -1 && org.canAccessImportExport) ||\n      (permissions.indexOf(Permissions.AccessReports) !== -1 && org.canAccessReports) ||\n      (permissions.indexOf(Permissions.CreateNewCollections) !== -1 &&\n        org.canCreateNewCollections) ||\n      (permissions.indexOf(Permissions.EditAnyCollection) !== -1 && org.canEditAnyCollection) ||\n      (permissions.indexOf(Permissions.DeleteAnyCollection) !== -1 && org.canDeleteAnyCollection) ||\n      (permissions.indexOf(Permissions.EditAssignedCollections) !== -1 &&\n        org.canEditAssignedCollections) ||\n      (permissions.indexOf(Permissions.DeleteAssignedCollections) !== -1 &&\n        org.canDeleteAssignedCollections) ||\n      (permissions.indexOf(Permissions.ManageGroups) !== -1 && org.canManageGroups) ||\n      (permissions.indexOf(Permissions.ManageOrganization) !== -1 && org.isOwner) ||\n      (permissions.indexOf(Permissions.ManagePolicies) !== -1 && org.canManagePolicies) ||\n      (permissions.indexOf(Permissions.ManageUsers) !== -1 && org.canManageUsers) ||\n      (permissions.indexOf(Permissions.ManageUsersPassword) !== -1 && org.canManageUsersPassword) ||\n      (permissions.indexOf(Permissions.ManageSso) !== -1 && org.canManageSso)\n    ) {\n      return true;\n    }\n\n    this.router.navigate([\"/organizations\", org.id]);\n    return false;\n  }\n}\n","import { BasePolicy } from \"../organizations/policies/base-policy.component\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n    router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let titleId: string = null;\n        let rawTitle: string = null;\n        let child = this.activatedRoute.firstChild;\n        while (child != null) {\n          if (child.firstChild != null) {\n            child = child.firstChild;\n          } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n            rawTitle = child.snapshot.data.title;\n            break;\n          } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n            titleId = child.snapshot.data.titleId;\n            break;\n          } else {\n            titleId = null;\n            rawTitle = null;\n            break;\n          }\n        }\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n      }\n    });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import { APP_INITIALIZER, NgModule } from \"@angular/core\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibServicesModule } from \"jslib-angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"jslib-angular/services/modal.service\";\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { ImportService as ImportServiceAbstraction } from \"jslib-common/abstractions/import.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EventService as EventLoggingService } from \"jslib-common/services/event.service\";\nimport { ImportService } from \"jslib-common/services/import.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\n\nimport { StateService as StateServiceAbstraction } from \"../../abstractions/state.service\";\nimport { Account } from \"../../models/account\";\nimport { GlobalState } from \"../../models/globalState\";\nimport { BroadcasterMessagingService } from \"../../services/broadcasterMessaging.service\";\nimport { HtmlStorageService } from \"../../services/htmlStorage.service\";\nimport { I18nService } from \"../../services/i18n.service\";\nimport { MemoryStorageService } from \"../../services/memoryStorage.service\";\nimport { PasswordRepromptService } from \"../../services/passwordReprompt.service\";\nimport { StateService } from \"../../services/state.service\";\nimport { StateMigrationService } from \"../../services/stateMigration.service\";\nimport { WebPlatformUtilsService } from \"../../services/webPlatformUtils.service\";\n\nimport { EventService } from \"./event.service\";\nimport { ModalService } from \"./modal.service\";\nimport { OrganizationGuardService } from \"./organization-guard.service\";\nimport { OrganizationTypeGuardService } from \"./organization-type-guard.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\n\nexport function initFactory(\n  window: Window,\n  environmentService: EnvironmentServiceAbstraction,\n  notificationsService: NotificationsServiceAbstraction,\n  vaultTimeoutService: VaultTimeoutService,\n  i18nService: I18nService,\n  eventLoggingService: EventLoggingService,\n  twoFactorService: TwoFactorServiceAbstraction,\n  stateService: StateServiceAbstraction,\n  platformUtilsService: PlatformUtilsServiceAbstraction,\n  cryptoService: CryptoServiceAbstraction\n): () => void {\n  function getBaseUrl() {\n      // If the base URL is `https://vaultwarden.example.com/base/path/`,\n      // `window.location.href` should have one of the following forms:\n      //\n      // - `https://vaultwarden.example.com/base/path/`\n      // - `https://vaultwarden.example.com/base/path/#/some/route[?queryParam=...]`\n      //\n      // We want to get to just `https://vaultwarden.example.com/base/path`.\n      let baseUrl = window.location.href;\n      baseUrl = baseUrl.replace(/#.*/, '');  // Strip off `#` and everything after.\n      baseUrl = baseUrl.replace(/\\/+$/, ''); // Trim any trailing `/` chars.\n      return baseUrl;\n  }\n  return async () => {\n    await stateService.init();\n\n    const urls = {base: getBaseUrl()};\n    environmentService.setUrls(urls);\n\n    setTimeout(() => notificationsService.init(), 3000);\n\n    vaultTimeoutService.init(true);\n    const locale = await stateService.getLocale();\n    await i18nService.init(locale);\n    eventLoggingService.init(true);\n    twoFactorService.init();\n    const htmlEl = window.document.documentElement;\n    htmlEl.classList.add(\"locale_\" + i18nService.translationLocale);\n\n    // Initial theme is set in index.html which must be updated if there are any changes to theming logic\n    platformUtilsService.onDefaultSystemThemeChange(async (sysTheme) => {\n      const bwTheme = await stateService.getTheme();\n      if (bwTheme === ThemeType.System) {\n        htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n        htmlEl.classList.add(\"theme_\" + sysTheme);\n      }\n    });\n\n    const containerService = new ContainerService(cryptoService);\n    containerService.attachToWindow(window);\n  };\n}\n\n@NgModule({\n  imports: [ToastrModule, JslibServicesModule],\n  declarations: [],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initFactory,\n      deps: [\n        \"WINDOW\",\n        EnvironmentServiceAbstraction,\n        NotificationsServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        I18nServiceAbstraction,\n        EventLoggingServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        StateServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n      multi: true,\n    },\n    OrganizationGuardService,\n    OrganizationTypeGuardService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: I18nServiceAbstraction,\n      useFactory: (window: Window) => new I18nService(window.navigator.language, \"locales\"),\n      deps: [\"WINDOW\"],\n    },\n    { provide: StorageServiceAbstraction, useClass: HtmlStorageService },\n    {\n      provide: \"SECURE_STORAGE\",\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useFactory: (\n        i18nService: I18nServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) => new WebPlatformUtilsService(i18nService, messagingService, logService, stateService),\n      deps: [\n        I18nServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: ImportServiceAbstraction,\n      useClass: ImportService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CollectionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction\n      ) =>\n        new StateMigrationService(\n          storageService,\n          secureStorageService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [StorageServiceAbstraction, \"SECURE_STORAGE\"],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction,\n        logService: LogService,\n        stateMigrationService: StateMigrationServiceAbstraction\n      ) =>\n        new StateService(\n          storageService,\n          secureStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account),\n          false\n        ),\n      deps: [\n        StorageServiceAbstraction,\n        \"SECURE_STORAGE\",\n        LogService,\n        StateMigrationServiceAbstraction,\n      ],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangePassword = true;\n  showChangeKdf = true;\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail =\n      this.showChangeKdf =\n      this.showChangePassword =\n        !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<ng-container *ngIf=\"showChangePassword\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n  </div>\n  <app-change-password></app-change-password>\n</ng-container>\n<ng-container *ngIf=\"showChangeKdf\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"encKeySettings\" | i18n }}</h1>\n  </div>\n  <app-change-kdf></app-change-kdf>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { PayPalConfig } from \"jslib-common/abstractions/environment.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"jslib-common/models/request/bitPayInvoiceRequest\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"jslib-common/models/request/paymentRequest\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.apiService.postOrganizationPayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"jslib-common/models/request/storageRequest\";\nimport { PaymentResponse } from \"jslib-common/models/response/paymentResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.apiService.postOrganizationStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { ApiKeyResponse } from \"jslib-common/models/response/apiKeyResponse\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-verify-master-password\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-verify-master-password>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { EmailRequest } from \"jslib-common/models/request/emailRequest\";\nimport { EmailTokenRequest } from \"jslib-common/models/request/emailTokenRequest\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { KdfRequest } from \"jslib-common/models/request/kdfRequest\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (100000 | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"changeKdf\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"jslib-angular/components/change-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EmergencyAccessStatusType } from \"jslib-common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { CipherWithIdRequest } from \"jslib-common/models/request/cipherWithIdRequest\";\nimport { EmergencyAccessUpdateRequest } from \"jslib-common/models/request/emergencyAccessUpdateRequest\";\nimport { FolderWithIdRequest } from \"jslib-common/models/request/folderWithIdRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { PasswordRequest } from \"jslib-common/models/request/passwordRequest\";\nimport { SendWithIdRequest } from \"jslib-common/models/request/sendWithIdRequest\";\nimport { UpdateKeyRequest } from \"jslib-common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await this.folderService.getAllDecrypted();\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0]);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.apiService.getOrganizationKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","<app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          (input)=\"updatePasswordStrength()\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [score]=\"masterPasswordScore\"\n          [showText]=\"true\"\n        ></app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"changeMasterPassword\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newOrganizationDesc\" | i18n }}</p>\n<app-organization-plans></app-organization-plans>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.deleteAccount(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"jslib-common/models/request/updateDomainsRequest\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"jslib-common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"jslib-common/models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessUpdateRequest } from \"jslib-common/models/request/emergencyAccessUpdateRequest\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          <span class=\"badge badge-primary\" *ngIf=\"readOnly\">{{ \"premium\" | i18n }}</span>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          #submitBtn\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"loading || submitBtn.loading || readOnly\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"loading || submitBtn.loading\"\n          ></i>\n          <span *ngIf=\"!loading && !submitBtn.loading\">{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ChangePasswordComponent } from \"jslib-angular/components/change-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { PolicyData } from \"jslib-common/models/data/policyData\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessPasswordRequest } from \"jslib-common/models/request/emergencyAccessPasswordRequest\";\nimport { PolicyResponse } from \"jslib-common/models/response/policyResponse\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        policies\n      );\n    }\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                (input)=\"updatePasswordStrength()\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessViewResponse } from \"jslib-common/models/response/emergencyAccessResponse\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"jslib-angular/pipes/user-name.pipe\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"jslib-common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"jslib-common/enums/emergencyAccessType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"jslib-common/models/request/emergencyAccessConfirmRequest\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"jslib-common/models/response/emergencyAccessResponse\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <a\n      href=\"#\"\n      appStopClick\n      class=\"badge badge-primary\"\n      *ngIf=\"!canAccessPremium\"\n      (click)=\"premiumRequired()\"\n    >\n      {{ \"premium\" | i18n }}\n    </a>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          class=\"badge badge-secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{\n          \"accepted\" | i18n\n        }}</span>\n        <span\n          class=\"badge badge-warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          class=\"badge badge-success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{\n          \"view\" | i18n\n        }}</span>\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <div class=\"dropdown\" appListDropdown>\n          <button\n            class=\"btn btn-outline-secondary dropdown-toggle\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <div class=\"dropdown-menu dropdown-menu-right\">\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              appStopClick\n              (click)=\"reinvite(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            >\n              <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n              {{ \"resendInvitation\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item text-success\"\n              href=\"#\"\n              appStopClick\n              (click)=\"confirm(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            >\n              <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n              {{ \"confirm\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item text-success\"\n              href=\"#\"\n              appStopClick\n              (click)=\"approve(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            >\n              <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n              {{ \"approve\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item text-warning\"\n              href=\"#\"\n              appStopClick\n              (click)=\"reject(c)\"\n              *ngIf=\"\n                c.status === emergencyAccessStatusType.RecoveryInitiated ||\n                c.status === emergencyAccessStatusType.RecoveryApproved\n              \"\n            >\n              <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n              {{ \"reject\" | i18n }}\n            </a>\n            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\">\n              <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n              {{ \"remove\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<p *ngIf=\"!trustedContacts || !trustedContacts.length\">{{ \"noTrustedContacts\" | i18n }}</p>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span\n          class=\"badge badge-secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span class=\"badge badge-warning\" *ngIf=\"c.status === emergencyAccessStatusType.Accepted\">{{\n          \"accepted\" | i18n\n        }}</span>\n        <span\n          class=\"badge badge-warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          class=\"badge badge-success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.View\">{{\n          \"view\" | i18n\n        }}</span>\n        <span class=\"badge badge-primary\" *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <div class=\"dropdown\" appListDropdown>\n          <button\n            class=\"btn btn-outline-secondary dropdown-toggle\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <div class=\"dropdown-menu dropdown-menu-right\">\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              appStopClick\n              (click)=\"requestAccess(c)\"\n              *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            >\n              <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n              {{ \"requestAccess\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              appStopClick\n              (click)=\"takeover(c)\"\n              *ngIf=\"\n                c.status === emergencyAccessStatusType.RecoveryApproved &&\n                c.type === emergencyAccessType.Takeover\n              \"\n            >\n              <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n              {{ \"takeover\" | i18n }}\n            </a>\n            <a\n              class=\"dropdown-item\"\n              [routerLink]=\"c.id\"\n              *ngIf=\"\n                c.status === emergencyAccessStatusType.RecoveryApproved &&\n                c.type === emergencyAccessType.View\n              \"\n            >\n              <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n              {{ \"view\" | i18n }}\n            </a>\n            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(c)\">\n              <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n              {{ \"remove\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<p *ngIf=\"!grantedContacts || !grantedContacts.length\">{{ \"noGrantedAccess\" | i18n }}</p>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"jslib-angular/components/sso.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\">\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  disableIcons: boolean;\n  enableGravatars: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.disableIcons = await this.stateService.getDisableFavicon();\n    this.enableGravatars = await this.stateService.getEnableGravitars();\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = await this.stateService.getLocale();\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(this.disableIcons);\n    await this.stateService.setEnableGravitars(this.enableGravatars);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.stateService.setTheme(this.theme);\n      this.startingTheme = this.theme;\n      const effectiveTheme = await this.platformUtilsService.getEffectiveTheme();\n      const htmlEl = window.document.documentElement;\n      htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n      htmlEl.classList.add(\"theme_\" + effectiveTheme);\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"optionsUpdated\"));\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"options\" | i18n }}</h1>\n</div>\n<p>{{ \"optionsDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"disableIcons\"\n        name=\"DisableIcons\"\n        [(ngModel)]=\"disableIcons\"\n      />\n      <label class=\"form-check-label\" for=\"disableIcons\">\n        {{ \"disableIcons\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"disableIconsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableGravatars\"\n        name=\"enableGravatars\"\n        [(ngModel)]=\"enableGravatars\"\n      />\n      <label class=\"form-check-label\" for=\"enableGravatars\">\n        {{ \"enableGravatars\" | i18n }}\n      </label>\n      <a\n        href=\"https://gravatar.com/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableGravatarsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { PlanType } from \"jslib-common/enums/planType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { ProductType } from \"jslib-common/enums/productType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { OrganizationCreateRequest } from \"jslib-common/models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"jslib-common/models/request/organizationKeysRequest\";\nimport { OrganizationUpgradeRequest } from \"jslib-common/models/request/organizationUpgradeRequest\";\nimport { ProviderOrganizationCreateRequest } from \"jslib-common/models/request/provider/providerOrganizationCreateRequest\";\nimport { PlanResponse } from \"jslib-common/models/response/planResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  ownedBusiness = false;\n  premiumAccessAddon = false;\n  additionalStorage = 0;\n  additionalSeats = 0;\n  name: string;\n  billingEmail: string;\n  clientOwnerEmail: string;\n  businessName: string;\n  productTypes = ProductType;\n  formPromise: Promise<any>;\n  singleOrgPolicyBlock = false;\n  discount = 0;\n\n  plans: PlanResponse[];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.ownedBusiness = true;\n      }\n    }\n\n    if (this.providerId) {\n      this.ownedBusiness = true;\n      this.changedOwnedBusiness();\n    }\n\n    this.loading = false;\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.plan);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.ownedBusiness) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans.filter(\n      (plan) => !plan.legacyYear && !plan.disabled && plan.product === this.product\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return plan.additionalStoragePricePerGb * Math.abs(this.additionalStorage || 0);\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.additionalSeats || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (this.selectedPlan.hasAdditionalSeatsOption && this.additionalSeats) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (this.selectedPlan.hasAdditionalStorageOption && this.additionalStorage) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.plan = this.selectablePlans[0].type;\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.premiumAccessAddon = false;\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.additionalStorage = 0;\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.additionalSeats = 0;\n    } else if (\n      !this.additionalSeats &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.additionalSeats = 1;\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.ownedBusiness || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.product = ProductType.Teams;\n    this.plan = PlanType.TeamsAnnually;\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        if (!this.acceptingSponsorship) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async userHasBlockingSingleOrgPolicy() {\n    return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.ownedBusiness ? this.businessName : null;\n    request.additionalSeats = this.additionalSeats;\n    request.additionalStorageGb = this.additionalStorage;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.name;\n    request.billingEmail = this.billingEmail;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.ownedBusiness ? this.businessName : null;\n      request.additionalSeats = this.additionalSeats;\n      request.additionalStorageGb = this.additionalStorage;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(this.clientOwnerEmail, request);\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.apiService.postOrganization(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.apiService.postOrganizationLicense(fd);\n    const orgId = response.id;\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.apiService.postOrganizationKeys(orgId, request);\n\n    return orgId;\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n>\n  <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"row\" *ngIf=\"createOrganization\">\n    <div class=\"form-group col-6\">\n      <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n      <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n      <input\n        id=\"billingEmail\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"BillingEmail\"\n        [(ngModel)]=\"billingEmail\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!!providerId\">\n      <label for=\"email\">{{ \"clientOwnerEmail\" | i18n }}</label>\n      <input\n        id=\"email\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"Email\"\n        [(ngModel)]=\"clientOwnerEmail\"\n        required\n      />\n      <small class=\"text-muted\">{{ \"clientOwnerDesc\" | i18n: \"20\" }}</small>\n    </div>\n  </div>\n  <div *ngIf=\"!providerId && !acceptingSponsorship\">\n    <div class=\"form-group form-check\">\n      <input\n        id=\"ownedBusiness\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        name=\"OwnedBusiness\"\n        [(ngModel)]=\"ownedBusiness\"\n        (change)=\"changedOwnedBusiness()\"\n      />\n      <label for=\"ownedBusiness\" class=\"form-check-label\">{{\n        \"accountOwnedBusiness\" | i18n\n      }}</label>\n    </div>\n    <div class=\"row\" *ngIf=\"ownedBusiness\">\n      <div class=\"form-group col-6\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"businessName\"\n        />\n      </div>\n    </div>\n  </div>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      [(ngModel)]=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"product !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"AdditionalSeats\"\n            [(ngModel)]=\"additionalSeats\"\n            min=\"1\"\n            max=\"100000\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"AdditionalSeats\"\n          [(ngModel)]=\"additionalSeats\"\n          min=\"0\"\n          max=\"100000\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"AdditionalStorageGb\"\n          [(ngModel)]=\"additionalStorage\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"PremiumAccessAddon\"\n            [(ngModel)]=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"BillingInterval\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        [(ngModel)]=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ additionalSeats || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ additionalSeats || 0 }} &times; {{ selectablePlan.seatPrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"month\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\n@Component({\n  selector: \"app-organizations\",\n  templateUrl: \"organizations.component.html\",\n})\nexport class OrganizationsComponent implements OnInit {\n  @Input() vault = false;\n\n  organizations: Organization[];\n  policies: Policy[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    if (!this.vault) {\n      await this.syncService.fullSync(true);\n      await this.load();\n    }\n  }\n\n  async load() {\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.organizations = orgs;\n    this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n    this.loaded = true;\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    // Set variables\n    let keyString: string = null;\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    // Enrolling\n    if (!org.resetPasswordEnrolled) {\n      // Alert user about enrollment\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"resetPasswordEnrollmentWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        return;\n      }\n\n      // Retrieve Public Key\n      this.actionPromise = this.apiService\n        .getOrganizationKeys(org.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n          }\n\n          const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n          // RSA Encrypt user's encKey.key with organization public key\n          const encKey = await this.cryptoService.getEncKey();\n          const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n          keyString = encryptedKey.encryptedString;\n          toastStringRef = \"enrollPasswordResetSuccess\";\n\n          // Create request and execute enrollment\n          const request = new OrganizationUserResetPasswordEnrollmentRequest();\n          request.resetPasswordKey = keyString;\n          return this.apiService.putOrganizationUserResetPasswordEnrollment(\n            org.id,\n            org.userId,\n            request\n          );\n        })\n        .then(() => {\n          return this.syncService.fullSync(true);\n        });\n    } else {\n      // Withdrawal\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.resetPasswordKey = keyString;\n      this.actionPromise = this.apiService\n        .putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request)\n        .then(() => {\n          return this.syncService.fullSync(true);\n        });\n    }\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<ng-container *ngIf=\"vault\">\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <ul class=\"bwi-ul card-ul carets\" *ngIf=\"organizations && organizations.length\">\n      <li *ngFor=\"let o of organizations\">\n        <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\">\n          <i class=\"bwi bwi-li bwi-caret-right\" aria-hidden=\"true\"></i> {{ o.name }}\n          <ng-container *ngIf=\"!o.enabled\">\n            <i\n              class=\"bwi bwi-exclamation-triangle text-danger\"\n              title=\"{{ 'organizationIsDisabled' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"organizationIsDisabled\" | i18n }}</span>\n          </ng-container>\n        </a>\n      </li>\n    </ul>\n    <p *ngIf=\"!organizations || !organizations.length\">{{ \"noOrganizationsList\" | i18n }}</p>\n  </ng-container>\n  <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\">\n    <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    {{ \"newOrganization\" | i18n }}\n  </a>\n</ng-container>\n<ng-container *ngIf=\"!vault\">\n  <div class=\"page-header d-flex\">\n    <h1>\n      {{ \"organizations\" | i18n }}\n      <small [appApiAction]=\"actionPromise\" #action>\n        <ng-container *ngIf=\"action.loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n      </small>\n    </h1>\n    <a\n      href=\"#\"\n      routerLink=\"/settings/create-organization\"\n      class=\"btn btn-sm btn-outline-primary ml-auto\"\n      *ngIf=\"!loaded || (organizations && organizations.length)\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newOrganization\" | i18n }}\n    </a>\n  </div>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"loaded\">\n    <ng-container *ngIf=\"!organizations || !organizations.length\">\n      <p>{{ \"noOrganizationsList\" | i18n }}</p>\n      <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\">\n        <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n        {{ \"newOrganization\" | i18n }}\n      </a>\n    </ng-container>\n    <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\">\n      <tbody>\n        <tr *ngFor=\"let o of organizations\">\n          <td width=\"30\">\n            <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{ o.name }}</a>\n            <ng-container *ngIf=\"!o.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'organizationIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"organizationIsDisabled\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(o)\">\n              <i\n                class=\"bwi bwi-key\"\n                appStopProp\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  *ngIf=\"allowEnrollmentChanges(o) && !o.resetPasswordEnrolled\"\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"toggleResetPasswordEnrollment(o)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"enrollPasswordReset\" | i18n }}\n                </a>\n                <a\n                  *ngIf=\"allowEnrollmentChanges(o) && o.resetPasswordEnrolled\"\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"toggleResetPasswordEnrollment(o)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n                  {{ \"withdrawPasswordReset\" | i18n }}\n                </a>\n                <ng-container *ngIf=\"o.useSso && o.identifier\">\n                  <a\n                    *ngIf=\"o.ssoBound; else linkSso\"\n                    class=\"dropdown-item\"\n                    href=\"#\"\n                    appStopClick\n                    (click)=\"unlinkSso(o)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n                    {{ \"unlinkSso\" | i18n }}\n                  </a>\n                  <ng-template #linkSso>\n                    <app-link-sso [organization]=\"o\"> </app-link-sso>\n                  </ng-template>\n                </ng-container>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\">\n                  <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n                  {{ \"leave\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport ThemeVariables from \"src/scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    const theme = await this.platformUtilsService.getEffectiveTheme();\n    if (theme === ThemeType.Dark) {\n      this.StripeElementStyle.base.color = darkInputColor;\n      this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n      this.StripeElementStyle.invalid.color = darkInputColor;\n    } else {\n      this.StripeElementStyle.base.color = lightInputColor;\n      this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n      this.StripeElementStyle.invalid.color = lightInputColor;\n    }\n  }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div class=\"form-group col-4\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premium = await this.tokenService.getPremium();\n    if (premium) {\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<app-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</app-callout>\n<app-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    class=\"btn btn-outline-secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</app-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"jslib-common/models/request/updateProfileRequest\";\nimport { ProfileResponse } from \"jslib-common/models/response/profileResponse\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n  hidePasswordHint = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n    this.hidePasswordHint = await this.keyConnectorService.getUsesKeyConnector();\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n      <div class=\"form-group\" *ngIf=\"!hidePasswordHint\">\n        <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n        <input\n          id=\"masterPasswordHint\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"MasterPasswordHint\"\n          [(ngModel)]=\"profile.masterPasswordHint\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <app-avatar\n          data=\"{{ profile | userName }}\"\n          [email]=\"profile.email\"\n          dynamic=\"true\"\n          size=\"75\"\n          fontSize=\"35\"\n        >\n        </app-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-verify-master-password [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.tokenService.getPremium();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"options\" | i18n }}\n          </a>\n          <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"organizations\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"premium\"\n          >\n            {{ \"premiumMembership\" | i18n }}\n          </a>\n          <a\n            routerLink=\"premium\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!selfHosted\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"jslib-common/enums/planSponsorshipType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit {\n  loading = false;\n\n  availableSponsorshipOrgs: Organization[] = [];\n  activeSponsorshipOrgs: Organization[] = [];\n  selectedSponsorshipOrgId = \"\";\n  sponsorshipEmail = \"\";\n\n  // Conditional display properties\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(this.selectedSponsorshipOrgId, {\n      sponsoredEmail: this.sponsorshipEmail,\n      planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n      friendlyName: this.sponsorshipEmail,\n    });\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.load(true);\n  }\n\n  async load(forceReload = false) {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    if (forceReload) {\n      await this.syncService.fullSync(true);\n    }\n\n    const allOrgs = await this.organizationService.getAll();\n    this.availableSponsorshipOrgs = allOrgs.filter((org) => org.familySponsorshipAvailable);\n\n    this.activeSponsorshipOrgs = allOrgs.filter(\n      (org) => org.familySponsorshipFriendlyName !== null\n    );\n\n    if (this.availableSponsorshipOrgs.length === 1) {\n      this.selectedSponsorshipOrgId = this.availableSponsorshipOrgs[0].id;\n    }\n    this.loading = false;\n  }\n\n  private async resetForm() {\n    this.sponsorshipEmail = \"\";\n    this.selectedSponsorshipOrgId = \"\";\n  }\n\n  get anyActiveSponsorships(): boolean {\n    return this.activeSponsorshipOrgs.length > 0;\n  }\n\n  get anyOrgsAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 0;\n  }\n\n  get moreThanOneOrgAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 1;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable\"\n  >\n    <div *ngIf=\"moreThanOneOrgAvailable\" class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"accountEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"accountEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        [(ngModel)]=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n      />\n      <button class=\"btn btn-primary btn-submit mt-4\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs\">\n            <tr sponsoring-org-row [sponsoringOrg]=\"o\" (sponsorshipRemoved)=\"load(true)\"></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent {\n  @Input() sponsoringOrg: Organization = null;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationTaxInfoUpdateRequest } from \"jslib-common/models/request/organizationTaxInfoUpdateRequest\";\nimport { TaxInfoUpdateRequest } from \"jslib-common/models/request/taxInfoUpdateRequest\";\nimport { TaxRateResponse } from \"jslib-common/models/response/taxRateResponse\";\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\nexport class TaxInfoComponent {\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        const taxInfo = await this.apiService.getTaxInfo();\n        if (taxInfo) {\n          this.taxInfo.postalCode = taxInfo.postalCode;\n          this.taxInfo.country = taxInfo.country || \"US\";\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    const taxRates = await this.apiService.getTaxRates();\n    this.taxRates = taxRates.data;\n    this.loading = false;\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.apiService.putOrganizationTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"col-3\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"jslib-common/models/request/updateTwoFactorAuthenticatorRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"jslib-common/models/response/twoFactorAuthenticatorResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<any>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new (window as any).QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { TwoFactorProviderRequest } from \"jslib-common/models/request/twoFactorProviderRequest\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: any) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<any>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"jslib-common/models/request/updateTwoFactorDuoRequest\";\nimport { TwoFactorDuoResponse } from \"jslib-common/models/response/twoFactorDuoResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" title=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"jslib-common/models/request/updateTwoFactorEmailRequest\";\nimport { TwoFactorEmailResponse } from \"jslib-common/models/response/twoFactorEmailResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"jslib-common/models/response/twoFactorRescoverResponse\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalRef } from \"jslib-angular/components/modal/modal.ref\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { TwoFactorProviders } from \"jslib-common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  modal: ModalRef;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n    await this.load();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = await this.policyService.policyAppliesToUser(\n        PolicyType.TwoFactorAuthentication\n      );\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"jslib-common/models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"jslib-common/models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"jslib-common/models/response/twoFactorEmailResponse\";\nimport { TwoFactorRecoverResponse } from \"jslib-common/models/response/twoFactorRescoverResponse\";\nimport { TwoFactorWebAuthnResponse } from \"jslib-common/models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"jslib-common/models/response/twoFactorYubiKeyResponse\";\nimport { Verification } from \"jslib-common/types/verification\";\n\ntype TwoFactorResponse =\n  | TwoFactorRecoverResponse\n  | TwoFactorDuoResponse\n  | TwoFactorEmailResponse\n  | TwoFactorWebAuthnResponse\n  | TwoFactorAuthenticatorResponse\n  | TwoFactorYubiKeyResponse;\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<any>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-verify-master-password [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-verify-master-password>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"jslib-common/models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"jslib-common/models/request/updateTwoFactorWebAuthnRequest\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"jslib-common/models/response/twoFactorWebAuthnResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: any[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: any) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"jslib-common/models/request/updateTwoFactorYubioOtpRequest\";\nimport { TwoFactorYubiKeyResponse } from \"jslib-common/models/response/twoFactorYubiKeyResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: any[];\n  nfc = false;\n\n  formPromise: Promise<any>;\n  disablePromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: any) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { CipherWithIdRequest } from \"jslib-common/models/request/cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"jslib-common/models/request/folderWithIdRequest\";\nimport { UpdateKeyRequest } from \"jslib-common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await this.folderService.getAllDecrypted();\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<any> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"jslib-common/enums/paymentMethodType\";\nimport { TransactionType } from \"jslib-common/enums/transactionType\";\nimport { VerifyBankRequest } from \"jslib-common/models/request/verifyBankRequest\";\nimport { BillingResponse } from \"jslib-common/models/response/billingResponse\";\n\n@Component({\n  selector: \"app-user-billing\",\n  templateUrl: \"user-billing.component.html\",\n})\nexport class UserBillingComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n  organizationId: string;\n  verifyAmount1: number;\n  verifyAmount2: number;\n\n  verifyBankPromise: Promise<any>;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.organizationId != null) {\n      this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n    } else {\n      this.billing = await this.apiService.getUserBilling();\n    }\n    this.loading = false;\n  }\n\n  async verifyBank() {\n    if (this.loading) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyAmount1;\n      request.amount2 = this.verifyAmount2;\n      this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(\n        this.organizationId,\n        request\n      );\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { SubscriptionResponse } from \"jslib-common/models/response/subscriptionResponse\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private tokenService: TokenService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.tokenService.getPremium()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.platformUtilsService.saveFile(\n      window,\n      licenseString,\n      null,\n      \"bitwarden_premium_license.json\"\n    );\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"premiumMembership\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span class=\"badge badge-warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"ml-1 btn btn-outline-secondary\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"jslib-angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.postAccountVerifyEmail();\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"checkInboxForVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"jslib-common/models/response/breachAccountResponse\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"checkBreaches\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    } else {\n      const accessPremium = await this.stateService.getCanAccessPremium();\n      if (this.requiresPaid && !accessPremium) {\n        this.messagingService.send(\"premiumRequired\");\n        this.loading = false;\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { ExportComponent as BaseExportComponent } from \"jslib-angular/components/export.component\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  organizationId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"exportSuccess\"));\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport * as JSZip from \"jszip\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ImportService } from \"jslib-common/abstractions/import.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { ImportOption, ImportType } from \"jslib-common/enums/importOptions\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Component({\n  selector: \"app-import\",\n  templateUrl: \"import.component.html\",\n})\nexport class ImportComponent implements OnInit {\n  featuredImportOptions: ImportOption[];\n  importOptions: ImportOption[];\n  format: ImportType = null;\n  fileContents: string;\n  formPromise: Promise<Error>;\n  loading = false;\n  importBlockedByPolicy = false;\n\n  protected organizationId: string = null;\n  protected successNavigate: any[] = [\"vault\"];\n\n  constructor(\n    protected i18nService: I18nService,\n    protected importService: ImportService,\n    protected router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.setImportOptions();\n\n    this.importBlockedByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.PersonalOwnership\n    );\n  }\n\n  async submit() {\n    if (this.importBlockedByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalOwnershipPolicyInEffectImports\")\n      );\n      return;\n    }\n\n    this.loading = true;\n\n    const importer = this.importService.getImporter(this.format, this.organizationId);\n    if (importer === null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFormat\")\n      );\n      this.loading = false;\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (\n      (files == null || files.length === 0) &&\n      (this.fileContents == null || this.fileContents === \"\")\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      this.loading = false;\n      return;\n    }\n\n    let fileContents = this.fileContents;\n    if (files != null && files.length > 0) {\n      try {\n        const content = await this.getFileContents(files[0]);\n        if (content != null) {\n          fileContents = content;\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (fileContents == null || fileContents === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      this.loading = false;\n      return;\n    }\n\n    try {\n      this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\n      const error = await this.formPromise;\n      if (error != null) {\n        this.error(error);\n        this.loading = false;\n        return;\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"importSuccess\"));\n      this.router.navigate(this.successNavigate);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  getFormatInstructionTitle() {\n    if (this.format == null) {\n      return null;\n    }\n\n    const results = this.featuredImportOptions\n      .concat(this.importOptions)\n      .filter((o) => o.id === this.format);\n    if (results.length > 0) {\n      return this.i18nService.t(\"instructionsFor\", results[0].name);\n    }\n    return null;\n  }\n\n  protected setImportOptions() {\n    this.featuredImportOptions = [\n      {\n        id: null,\n        name: \"-- \" + this.i18nService.t(\"select\") + \" --\",\n      },\n      ...this.importService.featuredImportOptions,\n    ];\n    this.importOptions = [...this.importService.regularImportOptions].sort((a, b) => {\n      if (a.name == null && b.name != null) {\n        return -1;\n      }\n      if (a.name != null && b.name == null) {\n        return 1;\n      }\n      if (a.name == null && b.name == null) {\n        return 0;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(a.name, b.name)\n        : a.name.localeCompare(b.name);\n    });\n  }\n\n  private async error(error: Error) {\n    await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: \"error\" as SweetAlertIcon,\n      iconHtml: `<i class=\"swal-custom-icon bwi bwi-error text-danger\"></i>`,\n      input: \"textarea\",\n      inputValue: error.message,\n      inputAttributes: {\n        readonly: \"true\",\n      },\n      titleText: this.i18nService.t(\"importError\"),\n      text: this.i18nService.t(\"importErrorDesc\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"ok\"),\n      onOpen: (popupEl) => {\n        popupEl.querySelector(\".swal2-textarea\").scrollTo(0, 0);\n      },\n    });\n  }\n\n  private getFileContents(file: File): Promise<string> {\n    if (this.format === \"1password1pux\") {\n      return this.extract1PuxContent(file);\n    }\n\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsText(file, \"utf-8\");\n      reader.onload = (evt) => {\n        if (this.format === \"lastpasscsv\" && file.type === \"text/html\") {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString((evt.target as any).result, \"text/html\");\n          const pre = doc.querySelector(\"pre\");\n          if (pre != null) {\n            resolve(pre.textContent);\n            return;\n          }\n          reject();\n          return;\n        }\n\n        resolve((evt.target as any).result);\n      };\n      reader.onerror = () => {\n        reject();\n      };\n    });\n  }\n\n  private extract1PuxContent(file: File): Promise<string> {\n    return new JSZip()\n      .loadAsync(file)\n      .then((zip) => {\n        return zip.file(\"export.data\").async(\"string\");\n      })\n      .then(\n        function success(content) {\n          return content;\n        },\n        function error(e) {\n          return \"\";\n        }\n      );\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"jslib-angular/components/password-generator-history.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace password-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { PasswordGeneratorComponent as BasePasswordGeneratorComponent } from \"jslib-angular/components/password-generator.component\";\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private modalService: ModalService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"passwordGenerator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-password bg-light my-4\">\n  <div class=\"card-body\">\n    <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n  </div>\n</div>\n<div class=\"form-group\">\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"options.type\"\n      name=\"Type_{{ o.value }}\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"saveOptions()\"\n      [checked]=\"options.type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"options.type === 'passphrase'\">\n  <div class=\"row\">\n    <div class=\"form-group col-4\">\n      <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n      <input\n        id=\"num-words\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"3\"\n        max=\"20\"\n        [(ngModel)]=\"options.numWords\"\n        (blur)=\"saveOptions()\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n      <input\n        id=\"word-separator\"\n        class=\"form-control\"\n        type=\"text\"\n        maxlength=\"1\"\n        [(ngModel)]=\"options.wordSeparator\"\n        (blur)=\"saveOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        id=\"capitalize\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.capitalize\"\n        [disabled]=\"enforcedPolicyOptions?.capitalize\"\n      />\n      <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"include-number\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.includeNumber\"\n        [disabled]=\"enforcedPolicyOptions?.includeNumber\"\n      />\n      <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"options.type === 'password'\">\n  <div class=\"row\">\n    <div class=\"form-group col-4\">\n      <label for=\"length\">{{ \"length\" | i18n }}</label>\n      <input\n        id=\"length\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"5\"\n        max=\"128\"\n        [(ngModel)]=\"options.length\"\n        (blur)=\"saveOptions()\"\n        (change)=\"lengthChanged()\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"min-number\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"0\"\n        max=\"9\"\n        (blur)=\"saveOptions()\"\n        [(ngModel)]=\"options.minNumber\"\n        (change)=\"minNumberChanged()\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"min-special\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"0\"\n        max=\"9\"\n        (blur)=\"saveOptions()\"\n        [(ngModel)]=\"options.minSpecial\"\n        (change)=\"minSpecialChanged()\"\n      />\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        id=\"uppercase\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.uppercase\"\n        [disabled]=\"enforcedPolicyOptions?.useUppercase\"\n      />\n      <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"lowercase\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.lowercase\"\n        [disabled]=\"enforcedPolicyOptions?.useLowercase\"\n      />\n      <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"numbers\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.number\"\n        [disabled]=\"enforcedPolicyOptions?.useNumbers\"\n      />\n      <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"special\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"options.special\"\n        [disabled]=\"enforcedPolicyOptions?.useSpecial\"\n      />\n      <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        id=\"ambiguous\"\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        (change)=\"saveOptions()\"\n        [(ngModel)]=\"avoidAmbiguous\"\n      />\n      <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n    </div>\n  </div>\n</ng-container>\n<div class=\"d-flex\">\n  <div>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n      {{ \"regeneratePassword\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyPassword\" | i18n }}\n    </button>\n  </div>\n  <div class=\"ml-auto\">\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"history()\"\n      appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n    >\n      <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n<ng-template #historyTemplate></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"passwordGenerator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card\">\n        <div class=\"card-header d-flex\">\n          {{ \"reports\" | i18n }}\n          <div class=\"ml-auto\">\n            <a\n              href=\"#\"\n              appStopClick\n              class=\"badge badge-primary\"\n              *ngIf=\"!canAccessPremium\"\n              (click)=\"premiumRequired()\"\n            >\n              {{ \"premium\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"exposed-passwords-report\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n          >\n            {{ \"exposedPasswordsReport\" | i18n }}\n          </a>\n          <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"reusedPasswordsReport\" | i18n }}\n          </a>\n          <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"weakPasswordsReport\" | i18n }}\n          </a>\n          <a\n            routerLink=\"unsecured-websites-report\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n          >\n            {{ \"unsecuredWebsitesReport\" | i18n }}\n          </a>\n          <a\n            routerLink=\"inactive-two-factor-report\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n          >\n            {{ \"inactive2faReport\" | i18n }}\n          </a>\n          <a routerLink=\"breach-report\" class=\"list-group-item d-flex\" routerLinkActive=\"active\">\n            {{ \"dataBreachReport\" | i18n }}\n            <div class=\"ml-auto\">\n              <span class=\"badge badge-success\" *ngIf=\"!canAccessPremium\">\n                {{ \"free\" | i18n | uppercase }}\n              </span>\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"jslib-angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/add-edit.component\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())[0];\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"jslib-common/models/request/cipherBulkDeleteRequest\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders: FolderView[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders = await this.folderService.getAllDecrypted();\n    this.folderId = this.folders[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<any>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections\n      .filter((c) => (c as any).checked)\n      .map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"jslib-angular/components/ciphers.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"jslib-angular/components/collections.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"jslib-angular/components/folder-add-edit.component\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, i18nService, platformUtilsService, logService);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { GroupingsComponent as BaseGroupingsComponent } from \"jslib-angular/components/groupings.component\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-groupings\",\n  templateUrl: \"groupings.component.html\",\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchText = \"\";\n  searchPlaceholder: string = null;\n\n  constructor(\n    collectionService: CollectionService,\n    folderService: FolderService,\n    stateService: StateService\n  ) {\n    super(collectionService, folderService, stateService);\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"jslib-angular/components/share.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n        {{ \"noOrganizationsList\" | i18n }}\n      </div>\n      <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n        <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <a\n          href=\"#\"\n          routerLink=\"/settings/create-organization\"\n          class=\"btn btn-primary\"\n          *ngIf=\"!organizations || !organizations.length\"\n        >\n          {{ \"newOrganization\" | i18n }}\n        </a>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { OrganizationsComponent } from \"../settings/organizations.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { GroupingsComponent } from \"./groupings.component\";\nimport { ShareComponent } from \"./share.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(OrganizationsComponent, { static: true })\n  organizationsComponent: OrganizationsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  favorites = false;\n  type: CipherType = null;\n  folderId: string = null;\n  collectionId: string = null;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  showProviders = false;\n  deleted = false;\n  trashCleanupWarning: string = null;\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t('trashCleanupWarningSelfHosted');\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.showProviders = (await this.providerService.getAll()).length > 0;\n\n      await Promise.all([this.groupingsComponent.load(), this.organizationsComponent.load()]);\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      if (params == null) {\n        this.groupingsComponent.selectedAll = true;\n        await this.ciphersComponent.reload();\n      } else {\n        if (params.deleted) {\n          this.groupingsComponent.selectedTrash = true;\n          await this.filterDeleted();\n        } else if (params.favorites) {\n          this.groupingsComponent.selectedFavorites = true;\n          await this.filterFavorites();\n        } else if (params.type) {\n          const t = parseInt(params.type, null);\n          this.groupingsComponent.selectedType = t;\n          await this.filterCipherType(t);\n        } else if (params.folderId) {\n          this.groupingsComponent.selectedFolder = true;\n          this.groupingsComponent.selectedFolderId = params.folderId;\n          await this.filterFolder(params.folderId);\n        } else if (params.collectionId) {\n          this.groupingsComponent.selectedCollectionId = params.collectionId;\n          await this.filterCollection(params.collectionId);\n        } else {\n          this.groupingsComponent.selectedAll = true;\n          await this.ciphersComponent.reload();\n        }\n      }\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.groupingsComponent.load(),\n                  this.organizationsComponent.load(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async clearGroupingFilters() {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchVault\");\n    await this.ciphersComponent.reload();\n    this.clearFilters();\n    this.go();\n  }\n\n  async filterFavorites() {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchFavorites\");\n    await this.ciphersComponent.reload((c) => c.favorite);\n    this.clearFilters();\n    this.favorites = true;\n    this.go();\n  }\n\n  async filterDeleted() {\n    this.ciphersComponent.showAddNew = false;\n    this.ciphersComponent.deleted = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n    await this.ciphersComponent.reload(null, true);\n    this.clearFilters();\n    this.deleted = true;\n    this.go();\n  }\n\n  async filterCipherType(type: CipherType) {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchType\");\n    await this.ciphersComponent.reload((c) => c.type === type);\n    this.clearFilters();\n    this.type = type;\n    this.go();\n  }\n\n  async filterFolder(folderId: string) {\n    this.ciphersComponent.showAddNew = true;\n    folderId = folderId === \"none\" ? null : folderId;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n    await this.ciphersComponent.reload((c) => c.folderId === folderId);\n    this.clearFilters();\n    this.folderId = folderId == null ? \"none\" : folderId;\n    this.go();\n  }\n\n  async filterCollection(collectionId: string) {\n    this.ciphersComponent.showAddNew = true;\n    this.groupingsComponent.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n    await this.ciphersComponent.reload(\n      (c) => c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1\n    );\n    this.clearFilters();\n    this.collectionId = collectionId;\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.groupingsComponent.loadFolders();\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.groupingsComponent.loadFolders();\n        });\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.groupingsComponent.loadFolders();\n          await this.filterFolder(\"none\");\n          this.groupingsComponent.selectedFolderId = null;\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.type;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.collectionId != null) {\n      const collection = this.groupingsComponent.collections.filter(\n        (c) => c.id === this.collectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.collectionId];\n      }\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private clearFilters() {\n    this.folderId = null;\n    this.collectionId = null;\n    this.favorites = false;\n    this.type = null;\n    this.deleted = false;\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.favorites ? true : null,\n        type: this.type,\n        folderId: this.folderId,\n        collectionId: this.collectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      replaceUrl: true,\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <app-vault-groupings\n        (onAllClicked)=\"clearGroupingFilters()\"\n        (onFavoritesClicked)=\"filterFavorites()\"\n        (onCipherTypeClicked)=\"filterCipherType($event)\"\n        (onFolderClicked)=\"filterFolder($event.id)\"\n        (onAddFolder)=\"addFolder()\"\n        (onEditFolder)=\"editFolder($event.id)\"\n        (onCollectionClicked)=\"filterCollection($event.id)\"\n        (onSearchTextChanged)=\"filterSearchText($event)\"\n        (onTrashClicked)=\"filterDeleted()\"\n      >\n      </app-vault-groupings>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"myVault\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [deleted]=\"deleted\">\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\">\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card mb-4\">\n        <div class=\"card-header d-flex\">\n          {{ \"organizations\" | i18n }}\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/about-organizations/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <div class=\"card-body\">\n          <app-organizations [vault]=\"true\"></app-organizations>\n        </div>\n      </div>\n      <div class=\"card mt-4\" *ngIf=\"showProviders\">\n        <div class=\"card-header d-flex\">\n          {{ \"providers\" | i18n }}\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/providers/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <div class=\"card-body\">\n          <app-providers vault=\"true\"></app-providers>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"jslib-common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { ThemeType } from \"jslib-common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"jslib-common/models/domain/globalState\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { StorageService } from \"jslib-common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"jslib-common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\n@Injectable()\nexport class HtmlStorageService implements StorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements StorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"jslib-angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../app/components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherData } from \"jslib-common/models/data/cipherData\";\nimport { CollectionData } from \"jslib-common/models/data/collectionData\";\nimport { FolderData } from \"jslib-common/models/data/folderData\";\nimport { SendData } from \"jslib-common/models/data/sendData\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"jslib-common/services/state.service\";\n\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { Account } from \"../models/account\";\nimport { GlobalState } from \"../models/globalState\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply web overides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    return await super.setLastSync(value, options);\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"jslib-common/services/stateMigration.service\";\n\nimport { Account } from \"../models/account\";\nimport { GlobalState } from \"../models/globalState\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { ClientType } from \"jslib-common/enums/clientType\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n  private prefersColorSchemeDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isIE(): boolean {\n    return this.getDevice() === DeviceType.IEBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    let blob: Blob = null;\n    let type: string = null;\n    const fileNameLower = fileName.toLowerCase();\n    let doDownload = true;\n    if (fileNameLower.endsWith(\".pdf\")) {\n      type = \"application/pdf\";\n      doDownload = false;\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      type = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      type = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      type = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      type = \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      type = \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      type = \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      type = \"image/gif\";\n    }\n    if (type != null) {\n      blobOptions = blobOptions || {};\n      if (blobOptions.type == null) {\n        blobOptions.type = type;\n      }\n    }\n    if (blobOptions != null && !this.isIE()) {\n      blob = new Blob([blobData], blobOptions);\n    } else {\n      blob = new Blob([blobData]);\n    }\n    if (navigator.msSaveOrOpenBlob) {\n      navigator.msSaveBlob(blob, fileName);\n    } else {\n      const a = win.document.createElement(\"a\");\n      if (doDownload) {\n        a.download = fileName;\n      } else if (!this.isSafari()) {\n        a.target = \"_blank\";\n      }\n      a.href = URL.createObjectURL(blob);\n      a.style.position = \"fixed\";\n      win.document.body.appendChild(a);\n      a.click();\n      win.document.body.removeChild(a);\n    }\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return false;\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n\n  getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n  }\n\n  async getEffectiveTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    const theme = await this.stateService.getTheme();\n    if (theme === ThemeType.Dark) {\n      return ThemeType.Dark;\n    } else if (theme === ThemeType.System) {\n      return this.getDefaultSystemTheme();\n    } else {\n      return ThemeType.Light;\n    }\n  }\n\n  onDefaultSystemThemeChange(callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown) {\n    try {\n      this.prefersColorSchemeDark.addEventListener(\"change\", ({ matches }) => {\n        callback(matches ? ThemeType.Dark : ThemeType.Light);\n      });\n    } catch (e) {\n      // Safari older than v14\n      this.prefersColorSchemeDark.addListener((ev) => {\n        callback(ev.matches ? ThemeType.Dark : ThemeType.Light);\n      });\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(90330)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","AddEditCustomFieldsComponent","constructor","i18nService","eventService","addFieldType","FieldType","Text","linkedFieldOptions","cipherType","CipherType","fieldType","eventType","EventType","this","addFieldTypeOptions","name","t","value","Hidden","Boolean","addFieldLinkedTypeOption","Linked","ngOnChanges","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","cipher","fields","f","FieldView","type","newField","linkedId","push","removeField","field","i","indexOf","splice","toggleFieldValue","showValue","editMode","collect","Cipher_ClientToggledHiddenFieldVisible","id","trackByFunction","index","item","drop","event","moveItemInArray","previousIndex","currentIndex","options","forEach","linkedFieldOption","i18nKey","sort","Utils","getSortFunction","length","filter","AddEditComponent","cipherService","folderService","platformUtilsService","auditService","stateService","collectionService","messagingService","policyService","logService","passwordRepromptService","organizationService","cloneMode","folderId","organizationId","onSavedCipher","EventEmitter","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","collections","showPassword","showCardNumber","showCardCode","ownershipOptions","currentDate","Date","allowPersonal","reprompt","canUseReprompt","typeOptions","Login","Card","Identity","SecureNote","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","UriMatchType","Domain","Host","StartsWith","RegularExpression","Exact","Never","autofillOnPageLoadOptions","ngOnInit","init","policyAppliesToUser","PolicyType","PersonalOwnership","myEmail","getEmail","getAll","o","enabled","status","OrganizationUserStatusType","Confirmed","writeableCollections","loadCollections","load","cipherId","title","addEditCipherInfo","getAddEditCipherInfo","collectionIds","setAddEditCipherInfo","loadCipher","decrypt","CipherView","login","LoginView","uris","LoginUriView","card","CardView","identity","IdentityView","secureNote","SecureNoteView","SecureNoteType","Generic","CipherRepromptType","None","organizationChanged","c","checked","folders","getAllDecrypted","previousCipherId","Cipher_ClientViewed","submit","isDeleted","restore","showToast","uri","map","encryptCipher","formPromise","saveCipher","emit","send","e","error","addUri","removeUri","cancel","attachments","share","editCollections","delete","showDialog","deletePromise","deleteCipher","restorePromise","restoreCipher","generatePassword","password","togglePassword","document","getElementById","focus","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","u","showOptions","match","loginUriMatchChanged","org","get","organizationUseTotp","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","toString","repromptChanged","Password","readOnly","encrypt","saveWithServer","deleteWithServer","softDeleteWithServer","restoreWithServer","AttachmentsComponent","cryptoService","apiService","win","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","files","size","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","download","a","downloading","canAccessAttachments","url","getAttachmentData","ErrorResponse","statusCode","Error","getSingleMessage","response","fetch","Request","cache","buf","arrayBuffer","key","getOrgKey","decBuf","decryptFromBytes","saveFile","fileName","hasEncKey","canAccessPremium","getCanAccessPremium","launchUri","reuploadCipherAttachment","admin","Promise","resolve","then","saveAttachmentRawWithServer","foundAttachment","a2","file","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","Window","AvatarComponent","sanitizer","cryptoFunctionService","charCount","textColor","fontSize","fontWeight","dynamic","circle","generate","getEnableGravitars","email","hashBytes","hash","toLowerCase","trim","fromBufferToHex","src","chars","upperData","data","toUpperCase","getFirstLetters","unicodeSafeSubstring","regexpEmojiPresentation","charObj","getCharText","color","stringToColor","svg","getSvg","appendChild","html","window","createElement","outerHTML","svgHtml","btoa","unescape","encodeURIComponent","str","charCodeAt","substr","count","parts","split","text","svgTag","setAttribute","style","backgroundColor","width","height","character","textTag","textContent","characters","slice","join","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","minComplexity","CaptchaProtectedComponent","environmentService","captchaSiteKey","captchaToken","setupCaptcha","webVaultUrl","getWebVaultUrl","captcha","CaptchaIFrame","token","info","showCaptcha","isNullOrWhitespace","handleCaptchaRequired","ChangePasswordComponent","passwordGenerationService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","kdf","getKdfType","kdfIterations","getKdfIterations","makeKey","masterPassword","masterPasswordHash","hashPassword","encKey","getEncKey","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordRetype","strengthResult","passwordStrength","getPasswordStrengthUserInput","evaluateMasterPassword","score","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","setTimeout","masterPasswordScore","logOut","userInput","atPosition","concat","CiphersComponent","searchService","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","loaded","ciphers","searchPlaceholder","deleted","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","search","timeout","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","isSearchable","searchText","searchCiphers","CollectionsComponent","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","ExportScopeCalloutComponent","show","hasOrganizations","scopeConfig","description","scopeIdentifier","ExportComponent","exportService","userVerificationService","formBuilder","onSaved","disabledByPolicy","exportForm","group","format","secret","formatOptions","checkExportDisabled","DisablePersonalVaultExport","disable","encryptedFormat","warningDialog","verifyUser","message","getExportData","downloadFile","saved","collectEvent","setValue","getExport","getFileName","prefix","extension","User_ClientExportedVault","csv","FolderAddEditComponent","onSavedFolder","onDeletedFolder","folder","FolderView","GroupingsComponent","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","selectedAll","selectedFavorites","selectedTrash","selectedType","selectedFolder","selectedFolderId","selectedCollectionId","setLoaded","collapsedGroupings","getCollapsedGroupings","Set","loadFolders","nestedCollections","getAllNested","nestedFolders","selectAll","clearSelections","selectFavorites","selectTrash","selectType","selectFolder","addFolder","editFolder","selectCollection","collection","collapse","grouping","idPrefix","isCollapsed","add","setCollapsedGroupings","Array","from","has","router","successRoute","postPasswordHint","PasswordHintRequest","onSuccessfulSubmit","navigate","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","IconComponent","iconsUrl","getIconsUrl","image","fallbackImage","imageEnabled","getDisableFavicon","setLoginIcon","setCardIcon","hostnameUri","isWebsite","getHostname","brand","LockComponent","vaultTimeoutService","keyConnectorService","ngZone","pin","pinLock","webVaultHostname","invalidPinAttempts","activeAccount","subscribe","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","protectedPin","getProtectedPin","decryptToUtf8","EncString","setKeyAndContinue","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","SecretVerificationRequest","serverKeyHash","HashPurpose","ServerAuthorization","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","unlockBiometric","biometricLock","success","getKey","KeySuffixOptions","Biometric","doContinue","input","isStable","onStable","pipe","take","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","LoginComponent","authService","super","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","isBrowser","isNode","focusInput","credentials","PasswordLogInCredentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","launchSsoBrowser","clientId","ssoRedirectUri","passwordOptions","uppercase","lowercase","numbers","special","state","ssoCodeVerifier","codeVerifierHash","codeChallenge","fromBufferToUrlB64","setSsoState","setSsoCodeVerifier","webUrl","DynamicModalComponent","modalService","cd","el","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","detectChanges","created","nativeElement","focusTrap","create","querySelector","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","clear","createComponent","ngOnDestroy","destroy","close","getFocus","autoFocusEl","ViewContainerRef","_parentInjector","_additionalTokens","notFoundValue","flags","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","onCreated","asObservable","onClose","onClosed","onShow","onShown","next","shown","result","lastResult","closed","onClosedPromise","first","toPromise","PasswordGeneratorHistoryComponent","history","getHistory","copy","copyOptions","copyToClipboard","PasswordGeneratorComponent","showSelect","onSelected","avoidAmbiguous","passTypeOptions","optionsResponse","getOptions","ambiguous","addHistory","sliderChanged","saveOptions","sliderInput","normalizeOptions","regenerate","select","toggleOptions","number","PasswordRepromptComponent","RegisterComponent","confirmMasterPassword","hint","showTerms","acceptPolicies","masterPasswordScoreWidth","masterPasswordScoreColor","masterPasswordScoreText","crypto","subtle","KdfType","PBKDF2_SHA256","isIE","hashedPassword","keys","makeKeyPair","RegisterRequest","encryptedString","referenceData","KeysRequest","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","queryParams","confirmField","RemovePasswordComponent","syncService","continuing","leaving","loading","organization","getManagingOrganization","fullSync","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","datePipe","sendService","onSavedSend","onDeletedSend","copyLink","disableSend","disableHideEmail","sendType","SendType","emailVerified","alertShown","File","sendLinkBaseUrl","getSendUrl","link","accessId","urlB64Key","isSafari","isDateTimeLocalSupported","isFirefox","sendId","setDates","deletionDate","expirationDate","DisableSend","SendOptions","p","getEmailVerified","loadSend","SendView","SendFileView","SendTextView","setDate","getDate","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","sendData","togglePasswordVisible","BrowserPath","DateField","DatePreset","EffluxDatesComponent","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","FormControl","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","browserPath","Firefox","Safari","Default","formattedDeletionDate","now","miliseconds","setTime","getTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","transform","twentyFourHour","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","SendComponent","refreshing","expired","sends","filteredSends","hasSearched","onSuccessfulLoad","s","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","searchSends","SetPasswordComponent","route","syncLoading","identifier","resetPasswordAutoEnroll","qParams","getOrganizationAutoEnrollStatus","orgId","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","useLowerKdf","SetPasswordRequest","setPassword","onSetPasswordSuccess","getOrganizationKeys","userId","getUserId","publicKey","fromB64ToArray","userEncKey","encryptedKey","rsaEncrypt","buffer","resetRequest","OrganizationUserResetPasswordEnrollmentRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","VaultTimeoutInputComponent","form","vaultTimeout","custom","hours","showCustom","CUSTOM_VALUE","MaximumVaultTimeout","vaultTimeoutPolicy","vaultTimeoutPolicyHours","Math","floor","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","onChange","getVaultTimeout","current","max","patchValue","writeValue","every","registerOnChange","registerOnTouched","onTouched","setDisabledState","isDisabled","validate","control","policyError","registerOnValidatorChange","fn","ShareComponent","onSharedCipher","organizations","allCollections","orgs","filterCollections","cipherView","orgName","find","shareWithServer","canSave","SsoComponent","loggingIn","changePasswordRoute","code","codeVerifier","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","redirectUri","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","authorizeUrl","buildAuthorizeUrl","sameWindow","preValidateSso","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","SsoLogInCredentials","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","BitwardenToast","toastrService","toastPackage","trigger","opacity","transition","animate","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","BitwardenToastModule","static","config","ngModule","providers","provide","TOAST_CONFIG","useValue","default","CommonModule","TwoFactorOptionsComponent","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","TwoFactorComponent","remember","webAuthnReady","webAuthnNewTab","TwoFactorProviders","providerType","TwoFactorProviderType","selectedProviderType","Authenticator","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","supportsWebAuthn","webAuthnAllow","authing","getProviders","needsLock","WebAuthnIFrame","getDefaultProvider","cleanupWebAuthn","providerData","WebAuthn","authWebAuthn","Duo","OrganizationDuo","DuoWebSDK","iframe","host","sig_request","Signature","submit_callback","sig","Email","sendEmail","stop","replace","doSubmit","start","logInTwoFactor","provider","doToast","emailPromise","TwoFactorEmailRequest","postTwoFactorEmail","cleanup","authingWithPassword","authingWithSso","authingWithApiKey","UpdatePasswordComponent","setOrganizationInvitation","setLoginRedirect","currentMasterPassword","VerificationType","MasterPassword","PasswordRequest","newMasterPasswordHash","postPassword","UpdateTempPasswordComponent","newKey","newPasswordHash","newEncKey","UpdateTempPasswordRequest","masterPasswordHint","putUpdateTempPassword","VerifyMasterPasswordComponent","disableRequestOTP","sentCode","processChanges","requestOTP","obj","enable","OTP","NG_VALUE_ACCESSOR","multi","useExisting","A11yTitleDirective","renderer","appA11yTitle","hasAttribute","ApiActionDirective","validationService","appApiAction","captchaRequired","showError","AutofocusDirective","appAutofocus","condition","autofocus","isMobileBrowser","BlurClickDirective","onClick","blur","FallbackSrcDirective","onError","appFallbackSrc","InputVerbatimDirective","appInputVerbatim","disableComplete","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","substring","StopClickDirective","$event","preventDefault","StopPropDirective","stopPropagation","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","ev","target","setProperty","forwardRef","ColorPasswordPipe","generateTemplate","templateGenerator","passwordArray","colorizedPassword","isSpecial","I18nPipe","p1","p2","p3","SearchPipe","items","prop1","prop2","prop3","UserNamePipe","user","AuthGuardService","canActivate","routerState","getIsAuthenticated","isLocked","promptBiometric","includes","getConvertAccountRequired","BroadcasterService","JslibServicesModule","LOCALE_ID","useFactory","translationLocale","deps","I18nService","ValidationService","UnauthGuardService","LockGuardService","ModalService","AppIdService","useClass","StorageService","AuditService","CryptoFunctionService","ApiService","AuthService","CryptoService","TokenService","PlatformUtilsService","MessagingService","LogService","KeyConnectorService","EnvironmentService","StateService","TwoFactorService","CipherService","settingsService","fileUploadService","injector","SearchService","SettingsService","FileUploadService","Injector","FolderService","ConsoleLogService","CollectionService","TotpService","PasswordGenerationService","PolicyService","tokenService","SyncService","providerService","SendService","OrganizationService","ProviderService","VaultTimeoutService","storageService","secureStorageService","stateMigrationService","StateFactory","GlobalState","Account","StateMigrationService","ExportService","NotificationsService","appIdService","WebCryptoFunctionService","EventService","UserVerificationService","PasswordRepromptService","homepage","loginpage","redirectUrl","ModalConfig","allowMultipleModals","componentFactoryResolver","applicationRef","modalList","factoryResolvers","Map","addEventListener","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","open","registerComponentFactoryResolver","set","attachToDom","createModalComponent","attachView","domElem","rootNodes","body","detachView","pop","setupHandlers","backdrop","classList","modalEl","dialogEl","className","zIndex","prepend","modals","querySelectorAll","closeElement","remove","ModalRef","WeakMap","ModalInjector","component","protectedFields","showPasswordPrompt","ref","defaultErrorMessage","errors","validationErrors","getAllMessages","indexedEntityId","AuthenticationType","ClientType","DeviceType","EmergencyAccessStatusType","EmergencyAccessType","EncryptionType","FileUploadType","HtmlStorageLocation","featuredImportOptions","regularImportOptions","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","NotificationType","OrganizationUserType","PaymentMethodType","Permissions","PlanSponsorshipType","PlanType","ProductType","ProviderUserStatusType","ProviderUserType","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","StateVersion","StorageLocation","ThemeType","TransactionType","accountConstructor","args","globalStateConstructor","globalStateFactory","GlobalStateFactory","accountFactory","AccountFactory","createGlobal","createAccount","AscendoCsvImporter","BaseImporter","parse","ImportResult","results","parseCsv","initLoginCipher","notes","getValueOrDefault","val","fieldLower","passwordFieldNames","username","usernameFieldNames","uriFieldNames","makeUriArray","processKvp","convertToNoteIfNeeded","cleanupCipher","AvastCsvImporter","web","AvastJsonImporter","JSON","logins","custName","note","pwd","loginName","label","cards","cardholderName","holderName","cardNumber","cvv","getCardBrand","month","expMonth","year","expYear","AviraCsvImporter","nameFromUrl","website","secondary_username","newLineRegex","notesFieldNames","parseCsvOptions","encoding","skipEmptyLines","parseXml","doc","DOMParser","parseFromString","header","parseOptions","Object","assign","splitNewLine","papa","row","warning","parseSingleRowCsv","rowData","parsedRow","loginUri","fixUri","returnArr","hostname","startsWith","defaultValue","cardNum","re","RegExp","test","setCardExpiration","expiration","moveFoldersToCollections","folderRelationships","r","collectionRelationships","CollectionView","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","parentNode","favorite","processFolder","folderName","folderIndex","hasFolder","processFullName","fullName","nameParts","firstName","lastName","middleName","BitwardenCsvImporter","col","addCollection","collectionIndex","parseInt","console","delimPosition","lastIndexOf","totp","login_totp","login_username","login_password","login_uri","BitwardenJsonImporter","passwordProtected","missingPassword","errorMessage","encrypted","parseEncrypted","parseDecrypted","encKeyValidation_DO_NOT_EDIT","orgKey","encKeyValidation","groupingsMap","CollectionWithId","toDomain","view","FolderWithId","CipherWithIds","passwordHistory","cId","toView","BitwardenPasswordProtectedImporter","parsedData","cannotParseFile","encData","clearTextData","jdoc","salt","kdfType","BlackBerryCsvImporter","fav","extra","BlurCsvImporter","domain","OfficialProps","ButtercupCsvImporter","URL","processingCustomFields","prop","hasOwnProperty","ChromeCsvImporter","ClipperzHtmlImporter","textarea","entry","currentVersion","property","actionType","labelLower","CodebookCsvImporter","Category","Favorite","Entry","Note","Username","TOTP","Website","Phone","PIN","_mappedCredentialsColums","_mappedPersonalInfoAsIdentiyColumns","_mappedSecureNoteColumns","DashlaneCsvImporter","x","parsePersonalInformationRecordAsIdentity","rowKeys","category","parseCredentialsRecord","parsePaymentRecord","parseIdRecord","parsePersonalInformationRecord","parseSecureNoteRecords","otpSecret","importUnmappedFields","account_name","mappedValues","cc_number","expiration_month","expiration_year","account_holder","account_number","licenseNumber","passportNumber","ssn","first_name","middle_name","last_name","item_name","dataRow","phone","phone_number","address1","address","city","postalCode","zip","country","HandledResults","DashlaneJsonImporter","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","pseudo","addressName","addressFull","zipcode","bank","owner","nameProperty","EncryptrCsvImporter","Label","Notes","CVV","expiry","Expiry","expParts","EnpassCsvImporter","firstRow","containsField","fieldValue","fieldName","fieldNameLower","EnpassJsonImporter","foldersMap","foldersIndexMap","folderTree","buildFolderTree","flattenFolderTree","template_type","processLogin","some","urls","sensitive","uuid","children","parent_uuid","titlePrefix","tree","FirefoxCsvImporter","FSecureFskImporter","service","creditNumber","creditCvv","creditExpiry","GnomeJsonImporter","keyRing","display_name","attributes","username_value","attr","ImportError","passwordRequired","NotesHeader","ApplicationsHeader","WebsitesHeader","Delimiter","KasperskyTxtImporter","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","n","w","nameKey","itemComment","itemCommentKey","l","colonIndex","KeePass2XmlImporter","rootGroup","traverse","node","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","attrs","ProtectInMemory","KeePassXCsvImporter","Title","Group","KeeperCsvImporter","LastPassCsvImporter","buildBaseCipher","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","ccname","cccsc","ccexp","ccexpParts","middlename","company","address2","address3","charAt","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","Number","monthString","getMonth","isNaN","Company","State","Country","dataObj","processingNotes","extraPart","LogMeOnceCsvImporter","MeldiumCsvImporter","DisplayName","UserName","Url","MSecureCsvImporter","mappedBaseColumns","_mappedUserAccountColumns","_mappedCreditCardColumns","_mappedIdentityColumns","_mappedIdCardColumns","_mappedTwoFaColumns","_mappedUserNoteColumns","MykiCsvImporter","nickname","additionalInfo","twofaSecret","authToken","cardName","exp_month","exp_year","firstAddressLine","secondAddressLine","zipCode","idType","idName","idCountry","idNumber","content","NordPassCsvImporter","record","recordType","evaluateType","cardholdername","cardnumber","cvc","expirydate","full_name","importRecord","lowerProperty","OnePassword1PifImporter","line","trashed","hmac","processStandardItem","processWinOpVaultItem","overview","URLs","details","parsePasswordHistory","notesPlain","parseFields","sections","section","openContents","faveIndex","typeName","location","secureContents","maxSize","time","b","ph","PasswordHistoryView","lastUsedDate","designationKey","valueKey","k","toUTCString","fieldDesignation","street","OnePassword1PuxImporter","accounts","vaults","vault","categoryUuid","CategoryEnum","Database","WirelessRouter","Server","API_Credential","CreditCard","BankAccount","SoftwareLicense","EmailAccount","MedicalRecord","DriversLicense","OutdoorLicense","Membership","Passport","RewardsProgram","SocialSecurityNumber","favIndex","processOverview","processLoginFields","processDetails","processSections","tags","capitalize","inputString","loginFields","loginField","designation","LoginFieldTypeEnum","CheckBox","parseSectionFields","anyField","getFieldName","extractValue","fillLogin","fillApiCredentials","fillCreditCard","fillBankAccount","fillIdentity","fillDriversLicense","fillOutdoorLicense","fillMembership","fillPassport","fillRewardsProgram","fillSSN","guarded","date","monthYear","historyItems","IgnoredProperties","OnePasswordCsvImporter","loginPropertyParsers","setLoginUsername","setLoginPassword","setLoginUris","creditCardPropertyParsers","setCreditCardNumber","setCreditCardVerification","setCreditCardCardholderName","setCreditCardExpiry","identityPropertyParsers","setIdentityFirstName","setIdentityInitial","setIdentityLastName","setIdentityUserName","setIdentityEmail","setIdentityPhone","setIdentityCompany","quoteChar","escapeChar","getProp","setNotes","setCipherType","altUsername","context","CipherImportContext","setKnownLoginValue","setKnownCreditCardValue","setKnownIdentityValue","setUnknownValue","entries","reduce","agg","getPropByRegexp","regexp","matchingKeys","getPropIncluding","includesMap","func","bind","readableDate","OnePasswordMacCsvImporter","OnePasswordWinCsvImporter","setIdentityAddress","expSplit","PadlockCsvImporter","headers","v","tag","PassKeepCsvImporter","getValue","PassmanJsonImporter","otp","custom_fields","customField","field_type","PasspackCsvImporter","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","PasswordAgentCsvImporter","newVersion","altFormat","PasswordBossJsonImporter","login_url","identifiers","valObj","expDate","getFullYear","cf","PasswordDragonXmlImporter","records","categoryText","accountName","tagName","PasswordSafeXmlImporter","passwordSafe","notesDelimiter","getAttribute","groupText","PasswordWalletTxtImporter","RememBearCsvImporter","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","RoboFormCsvImporter","Folder","Name","Pwd","Rf_fields","SafariCsvImporter","OTPAuth","SafeInCloudXmlImporter","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","candidates","choice","SaferPassCsvImporter","SecureSafeCsvImporter","Comment","SplashIdCsvImporter","parseFieldsToNotes","startIndex","StickyPasswordXmlImporter","loginNodes","loginNode","accountId","usernameText","passwordText","titleText","linkText","notesText","groupId","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","TrueKeyCsvImporter","memo","kind","expiryDate","document_content","UpmCsvImporter","YotiCsvImporter","ZohoVaultCsvImporter","ChamberName","parseData","SecretData","CustomData","IFrameComponent","successCallback","errorCallback","infoCallback","parsedMessage","siteKey","initComponent","createParams","locale","path","iframeId","parseFunction","parseMessage","connectorLink","sendMessage","contentWindow","postMessage","base64Encode","String","fromCharCode","removeEventListener","version","URLSearchParams","stringify","parent","href","params","validMessage","origin","LinkedMetadata","propertyKey","_i18nKey","prototype","ApiLogInStrategy","LogInStrategy","tokenResponse","apiUseKeyConnector","keyConnectorUrl","getKeyConnectorUrl","getAndSetKey","tokenRequest","ApiTokenRequest","clientSecret","buildTwoFactor","buildDeviceRequest","startLogIn","saveAccountInformation","setApiKeyClientId","setApiKeyClientSecret","captchaBypassToken","twoFactor","captchaResponse","setTwoFactor","clearSelectedProvider","postIdentityToken","IdentityTwoFactorResponse","processTwoFactorResponse","IdentityCaptchaResponse","processCaptchaResponse","IdentityTokenResponse","processTokenResponse","appId","getAppId","DeviceRequest","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","accountInformation","decodeToken","accessToken","addAccount","profile","AccountProfile","sub","hasPremiumPersonally","premium","tokens","AccountTokens","refreshToken","AuthResult","twoFactorToken","setTwoFactorToken","privateKey","createKeyPairForOldAccount","twoFactorProviders","twoFactorProviders2","setProviders","postAccountKeys","PasswordLogInStrategy","localHashedPassword","makePreloginKey","PasswordTokenRequest","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","SsoTokenRequest","cacheKey","descriptor","originalMethod","caches","getCache","argsCacheKey","onFinally","apply","catch","err","ServiceUtils","nodeTree","partIndex","delimiter","end","partName","TreeNode","nestedTraverse","newPartName","getTreeNodeObject","limit","throttleKey","allThrottles","throttles","getThrottles","argsThrottleKey","queue","reject","exec","nodeURL","inited","process","release","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","Uint8Array","Buffer","binaryString","atob","bytes","fromUrlB64ToB64","strUtf8","arr","binary","byteLength","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","call","urlB64Str","output","fromB64ToUtf8","utfStr","fromUtf8ToArray","random","uriString","getUrl","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","pair","collator","compare","localeCompare","source","ipString","mobile","navigator","userAgent","vendor","opera","hasProtocol","anchor","btnText","append","allow","EEFLongWordList","CardApi","BaseResponse","getResponseProperty","FieldApi","IdentityApi","LoginApi","passwordRevisionDate","autofillOnPageLoad","LoginUriApi","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","SecureNoteApi","SendFileApi","sizeName","SendTextApi","hidden","SsoConfigApi","configType","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","api","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","edit","viewPassword","revisionDate","deletedDate","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","PasswordHistoryData","externalId","LoginUriData","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useSso","useKeyConnector","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","ssoBound","permissions","resetPasswordEnrolled","hasPublicAndPrivateKeys","providerId","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","maxAccessCount","accessCount","disabled","hideEmail","SendTextData","SendFileData","EncryptionPair","DataEncryptionPair","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","AccountSettings","environmentUrls","EnvironmentUrls","pinProtected","vaultTimeoutAction","settings","Attachment","alreadyEncrypted","buildDomainModel","decryptObj","AttachmentView","containerService","bitwardenContainerService","getCryptoService","decValue","decryptToBytes","SymmetricCryptoKey","toAttachmentData","buildDataModel","requiresCaptcha","toCardData","Cipher","localData","Field","model","promise","decAttachment","decField","decPh","toCipherData","CipherData","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","hidePasswords","notEncList","objProp","notEncStringList","viewModel","promises","self","theProp","mapProp","all","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","base","icons","notifications","events","webVault","keyConnector","theme","System","WindowState","stateVersion","One","Sso","Api","LoginUri","toLoginUriData","MasterPasswordPolicyOptions","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","isProviderUser","canAccess","Owner","isManager","Manager","Admin","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","includeNumber","inEffect","Policy","isProviderAdmin","canCreateOrganizations","ProviderAdmin","ResetPasswordPolicyOptions","autoEnrollEnabled","Send","SendText","SendFile","cryptoKey","makeSendKey","SendAccess","creatorIdentifier","SendAccessView","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","globals","authenticatedAccounts","accountActivity","macKey","keyB64","encKeyB64","macKeyB64","req","values","build","humanReadableMessage","appIcon","appName","userName","userEmail","ip","orgIdentifier","ids","CipherWithIdRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","AttachmentRequest","groups","getDevice","getDeviceString","pushToken","EmailRequest","EmailTokenRequest","FolderWithIdRequest","FolderRequest","TokenRequest","device","toIdentityToken","scope","grant_type","client_secret","alterIdentityTokenHeaders","fromUtf8ToUrlB64","code_verifier","redirect_uri","client_id","deviceType","deviceIdentifier","deviceName","twoFactorProvider","twoFactorRemember","KdfRequest","encryptedPrivateKey","OrganizationKeysRequest","seatAdjustment","maxAutoscaleSeats","OrganizationTaxInfoUpdateRequest","TaxInfoUpdateRequest","emails","groupIds","PaymentRequest","clientOwnerEmail","organizationCreateRequest","fileLength","SendWithIdRequest","SendRequest","TwoFactorProviderRequest","TwoFactorRecoveryRequest","culture","OrganizationUserResetPasswordRequest","UpdateTwoFactorAuthenticatorRequest","UpdateTwoFactorDuoRequest","UpdateTwoFactorEmailRequest","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","UpdateTwoFactorYubioOtpRequest","ApiKeyResponse","apiKey","AttachmentResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","CipherResponse","propertyName","exactName","otherCasePropertyName","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","PasswordHistoryResponse","CollectionResponse","SelectionReadOnlyResponse","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","GlobalDomainResponse","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","messages","lastSep","EventResponse","collectionId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","FolderResponse","domains","excluded","GroupResponse","accessAll","access_token","expiresIn","expires_in","refresh_token","tokenType","token_type","KeyConnectorUserKeyResponse","KeysResponse","ListResponse","dr","continuationToken","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationAutoEnrollStatusResponse","OrganizationKeysResponse","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","PlanResponse","planType","OrganizationSubscriptionResponse","storageName","storageGb","subscription","BillingSubscriptionResponse","upcomingInvoice","BillingSubscriptionUpcomingInvoiceResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","OrganizationUserResponse","twoFactorEnabled","OrganizationUserResetPasswordDetailsReponse","PaymentResponse","userProfile","ProfileResponse","paymentIntentClientSecret","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProfileOrganizationResponse","ProfileProviderOrganizationResponse","ProfileProviderResponse","providerOrganizations","securityStamp","ProviderOrganizationResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","SendAccessResponse","SendFileDownloadDataResponse","SendFileUploadDataResponse","sendResponse","SendResponse","SubscriptionResponse","license","usingInAppPurchase","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","SyncResponse","CollectionDetailsResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","fileSize","ItemView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","exp","formatYear","CardholderName","ExpMonth","ExpYear","Code","Brand","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","linkedFieldValue","linkedFieldI18nKey","showCount","maskedValue","_firstName","_lastName","fullAddress","fullAddressPart2","addressPart2","MiddleName","Address1","Address2","Address3","City","PostalCode","Ssn","PassportNumber","LicenseNumber","FirstName","LastName","FullName","CanLaunchWhitelist","_uri","_domain","_hostname","_host","_canLaunch","getHost","hostnameOrUri","hostOrUri","canLaunch","hasUris","maskedPassword","maskedText","maxAccessCountReached","pendingDelete","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","Headers","Accept","identityToken","getClientType","qsStringify","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","refreshIdentityToken","doAuthRefresh","getProfile","getUserBilling","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","getApiUrl","postEmailToken","postEmail","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","apiUrl","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","CollectionGroupDetailsResponse","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","GroupDetailsResponse","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","OrganizationUserDetailsResponse","getOrganizationUserGroups","getOrganizationUsers","OrganizationUserUserDetailsResponse","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getOrganizationLicense","installationId","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","ProviderUserUserDetailsResponse","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","ProviderOrganizationOrganizationDetailsResponse","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getToken","tokenNeedsRefresh","getApplicationVersion","nativeFetch","postCreateSponsorship","sponsoredOrgId","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","setTokens","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","save","hashStart","hashEnding","breachedAccounts","throttle","logInStrategy","strategy","clearState","saveState","callback","preloginResponse","PreloginRequest","startSessionTimeout","clearSessionTimeout","sessionTimeout","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","searchParams","blobResponse","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","ceil","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","day","compareTo","encryptedFileName","encryptedFileData","apiCall","fd","blob","Blob","filepath","contentType","subscribers","messageCallback","unsubscribe","DomainMatchBlacklist","sortedCiphersCache","SortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","getDefaultUriMatch","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","CipherCreateRequest","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","shareManyWithServer","encCiphers","CipherBulkShareRequest","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","CipherCollectionsRequest","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","CipherBulkMoveRequest","deleteManyWithServer","CipherBulkDeleteRequest","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","CipherBulkRestoreRequest","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","sequentialize","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","nodes","collectionCopy","getNested","CollectionData","setEncryptedCollections","timersMap","debug","write","Debug","Info","Warning","level","log","warn","hrtime","timeEnd","elapsed","attachToWindow","attachToGlobal","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","orgKeys","providerOrg","providerKey","getProviderKey","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","encOrgKeys","getEncryptedOrganizationKeys","rsaDecrypt","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","pbkdf2","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","decKey","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","plainBuf","encObj","aesEncrypt","encValue","macLen","encBytes","EncArrayBuffer","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","decipher","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","EncryptedObject","macData","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","compareFast","aesDecryptFast","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","bigInt","fromArray","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","urlsSubject","setUrlsFromStorage","getNotificationsUrl","notificationsUrl","identityUrl","eventsUrl","getEnvironmentUrls","envUrls","setUrls","formatUrl","setEnvironmentUrls","getUrls","checkOnInterval","uploadEvents","setInterval","uploadImmediately","orgIds","eventCollection","getEventCollection","EventData","setEventCollection","EventRequest","clearEvents","getOrganizationExport","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encText","jsonDoc","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","unparse","Event","padNumber","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","collectionPromises","decCol","cipherPromises","decCipher","collectionsMap","num","padCharacter","numString","azureFileUploadService","AzureFileUploadService","bitwardenFileUploadService","BitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","setDecryptedFolders","getEncryptedFolders","decryptedFolders","getDecryptedFolders","noneFolder","folderCopy","FolderData","setEncryptedFolders","updates","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","replaceToken","replaceContent","getImportOptions","import","importer","fileContents","importResult","halfway","last","badData","postImport","errorResponse","handleServerError","getImporter","getImporterInstance","ImportCiphersRequest","KvpRequest","ImportOrganizationCiphersRequest","CollectionRequest","itemType","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","KeyConnectorUserKeyRequest","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","SetKeyConnectorKeyRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","connected","inactive","reconnectTimer","signalrConnection","off","signalR","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withHubProtocol","signalRMsgPack","MessagePackHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","getOrganizations","Organization","getByIdentifier","setOrganizations","canManageSponsorships","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","GeneratedPasswordHistory","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","zxcvbn","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","PolicyData","setEncryptedPolicies","mapPoliciesFromToken","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","Provider","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","setDecryptedSends","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","SendData","setEncryptedSends","Keys","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","partialKeys","stateFactory","useAccountCache","BehaviorSubject","createGlobals","hasBeenInited","accountDiskCache","needsMigration","migrate","initAccountState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","setBiometricUnlock","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","convertAccountToKeyConnector","cryptoMasterKey","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","getEverBeenUnlocked","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","getLastSync","lastSync","setLastSync","legacyEtmKey","getLocale","setLocale","getLoginRedirect","loginRedirect","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","passwordGenerationOptions","setProtectedPin","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","getTheme","setTheme","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","authenticatedUserIds","Four","syncInProgress","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","successfully","OrganizationData","ProviderData","decoded","fromUrlB64ToUtf8","clientIdClientSecret","setToken","setClientId","setClientSecret","clearToken","storedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","email_verified","getName","getPremium","getIssuer","iss","amr","B32Chars","SteamChars","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","fullCode","trunc","getTimeInterval","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","priority","Yubikey","selectedTwoFactorProviderType","twoFactorProvidersData","supportsDuo","providerPriority","_value","setSelectedProvider","clearProviders","buildRequest","requestClass","alreadyHashed","validateInput","VerifyOTPRequest","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","lock","allowSoftLock","setVaultTimeoutOptions","action","currentAction","isLoggedOut","vaultTimeoutSeconds","ua","isOldSafari","algorithm","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","forge","fromByteStringToArray","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","md5","sha1","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8","fromBufferToByteString","AcceptEmergencyComponent","BaseAcceptComponent","requiredParameters","failedShortMessage","failedMessage","authedHandler","EmergencyAccessAcceptRequest","unauthedHandler","AcceptOrganizationComponent","OrganizationUserAcceptRequest","performResetPasswordAutoEnroll","policyList","HintComponent","routerService","previousUrl","getPreviousUrl","showResetPasswordAutoEnrollWarning","goAfterLogIn","getRememberEmail","invite","resetPasswordPolicy","enforcedPasswordPolicyOptions","policiesData","setRememberEmail","RecoverDeleteComponent","DeleteRecoverRequest","RecoverTwoFactorComponent","recoveryCode","showCreateOrgMessage","layout","ReferenceEventRequest","flow","reference","cookie","shift","storedIdentifier","anotherMethod","modal","twoFactorOptionsModal","comp","VerifyEmailTokenComponent","VerifyEmailRequest","VerifyRecoverDeleteComponent","VerifyDeleteRecoverRequest","BroadcasterSubscriptionId","AppComponent","broadcasterService","notificationsService","policyListService","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","run","command","setPreviousUrl","setFullWidth","NavigationEnd","jq","addPolicies","TwoFactorAuthenticationPolicy","MasterPasswordPolicy","PasswordGeneratorPolicy","SingleOrgPolicy","RequireSsoPolicy","PersonalOwnershipPolicy","DisableSendPolicy","SendOptionsPolicy","ResetPasswordPolicy","idleStateChanged","msg","sanitize","SecurityContext","HTML","enableHtml","trustedHtml","timeOut","AppModule","OssModule","BrowserAnimationsModule","FormsModule","ServicesModule","forRoot","maxOpened","autoDismiss","closeButton","InfiniteScrollModule","DragDropModule","OssRoutingModule","WildcardRoutingModule","getRedirectRoute","urlTree","parseUrl","BaseEventsComponent","dirtyDates","defaultDates","getDefaultDateFilters","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","loadAndParseEvents","refreshPromise","morePromise","startDate","endDate","requestEvents","eventInfo","getEventInfo","getUserName","EventView","formatDateFilters","exportFileName","BasePeopleComponent","searchPipe","userNamePipe","statusMap","users","pagedUsers","allUsers","didScroll","pageSize","pagedUsersCount","allCount","invitedCount","userStatusType","Invited","acceptedCount","confirmedCount","showConfirmUsers","showBulkConfirmUsers","getUsers","iterateEnum","resetPaging","loadMore","pagedLength","pagedSize","checkUser","filteredUsers","selectCount","deleteWarningMessage","deleteUser","removeUser","reinvite","reinviteUser","confirm","confirmUser","mapIndex","updateUser","publicKeyResponse","autoConfirm","UserConfirmComponent","confirmModalRef","onConfirmedUser","fingerprint","isPaging","searching","getCheckedUsers","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentIndeterminate","parentChecked","checkboxes","pascalize","camelToPascalCase","PasswordStrengthComponent","showText","scoreWidth","FooterComponent","FrontendLayoutComponent","NavbarComponent","selfHosted","isSelfHost","OrganizationLayoutComponent","showMenuBar","showManageTab","showToolsTab","toolsRoute","manageRoute","UserLayoutComponent","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","BulkConfirmComponent","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","getCryptoKey","userIdsWithKeys","postConfirmRequest","OrganizationUserBulkRequest","OrganizationUserBulkConfirmRequest","BulkRemoveComponent","deleteUsers","BulkStatusComponent","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","accessGroups","groupsResponse","check","SelectionReadOnlyRequest","canCreate","pagedCollectionsCount","decryptCollections","assignedCollections","pagedCollections","canEdit","canDelete","addEditModalRef","removeCollection","EntityUsersComponent","usersModalRef","entity","entityName","onEditedUsers","EntityEventsComponent","showUser","orgUsersUserIdMap","orgUsersIdMap","organizationUserType","organizationUserStatusType","showSelected","selectedCount","loadUsers","selectedChanged","filterSelected","selections","EventsComponent","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","GroupRequest","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","ManageComponent","accessPolicies","accessEvents","accessSso","PeopleComponent","userType","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","orgShareKey","viewEvents","relativeTo","OrganizationUserConfirmRequest","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","UserAddEditComponent","UserGroupsComponent","groupsModalRef","bulkRemove","bulkRemoveModalRef","bulkReinvite","showBulkStatus","bulkConfirm","bulkConfirmModalRef","eventsModalRef","resetPassword","ResetPasswordComponent","resetPasswordModalRef","onPasswordReset","successfullMessage","childComponent","bulkStatusModalRef","keyedErrors","keyedFilteredUsers","PoliciesComponent","policiesEnabledMap","policyIdFromEvents","orgPolicy","orgPolicies","op","PolicyEditComponent","editModalRef","onSavedPolicy","cdr","factory","policyComponent","policyFormRef","policyResponse","Enabled","loggedOutWarningName","orgSymKey","decPrivateKey","newPasswordStrengthTimeout","User","manageAllCollectionsCheckboxes","manageAssignedCollectionsCheckboxes","customUserTypeSelected","setRequestPermissions","clearPermissions","handleDependentPermissions","OrganizationUserUpdateRequest","OrganizationUserInviteRequest","dontAskAgain","userGroups","ug","OrganizationUserUpdateGroupsRequest","display","BasePolicyComponent","loadData","buildRequestData","PolicyRequest","BasePolicy","DisableSendPolicyComponent","MasterPasswordPolicyComponent","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicyComponent","RequireSso","RequireSsoPolicyComponent","singleOrgEnabled","SingleOrg","ResetPasswordPolicyComponent","SendOptionsPolicyComponent","SingleOrgPolicyComponent","TwoFactorAuthentication","TwoFactorAuthenticationPolicyComponent","AccountComponent","canUseApi","OrganizationUpdateRequest","submitTaxInfo","taxFormPromise","taxInfo","DeleteOrganizationComponent","deleteModalRef","onSuccess","purgeVault","PurgeVaultComponent","purgeModalRef","viewApiKey","ApiKeyComponent","apiKeyModalRef","keyType","postKey","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKey","rotateApiKeyModalRef","isRotation","TaxInfoComponent","AdjustSubscription","onAdjusted","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","OrganizationSubscriptionUpdateRequest","limitSubscriptionChanged","adjustedSeatTotal","maxSeatTotal","ChangePlanComponent","onChanged","onCanceled","defaultUpgradePlan","FamiliesAnnually","defaultUpgradeProduct","Families","CountBasedLocalizationKey","singular","plural","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","deleteOrganizationRequestType","organizationContentSummary","buildOrganizationContentSummary","organizationItems","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","DownloadLicenseComponent","onDownloaded","licenseString","OrganizationBillingComponent","UserBillingComponent","firstLoaded","OrganizationSubscriptionComponent","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showDownloadLicense","showChangePlan","userOrg","reinstate","reinstatePromise","cancelPromise","changePlan","closeChangePlan","changed","downloadLicense","closeDownloadLicense","updateLicense","closeUpdateLicense","updated","subscriptionAdjusted","adjustStorage","closeStorage","removeSponsorship","removeSponsorshipPromise","isExpired","subscriptionMarkedForCancel","nextInvoice","storagePercentage","toFixed","storageProgressWidth","billingInterval","storageGbPrice","canAdjustSeats","isSponsoredSubscription","canDownloadLicense","Free","subscriptionDesc","FamiliesAnnually2019","showChangePlanButton","SettingsComponent","access2fa","TwoFactorSetupComponent","manage","duoComp","openModal","duoModalRef","TwoFactorDuoComponent","onUpdated","updateStatus","filterProvider","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","acceptingSponsorship","onOrganizationCreateSuccess","existingFamilyOrganizations","selectedFamilyOrganizationId","OrganizationSponsorshipRedeemRequest","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","OrganizationPlansComponent","ExposedPasswordsReportComponent","dynamicSuper","getPrototypeOf","manageableCiphers","getAllCiphers","canManageCipher","ImportComponent","importService","successNavigate","importBlockedByPolicy","InactiveTwoFactorReportComponent","ReusedPasswordsReportComponent","ToolsComponent","upgradeOrganization","UnsecuredWebsitesReportComponent","WeakPasswordsReportComponent","totpService","allowOwnershipAssignment","viewOnly","reupload","showFixOldAttachments","onEventsClicked","allCiphers","collectionDomains","unassignedCollection","VaultComponent","changeDetectorRef","trashCleanupWarning","groupingsComponent","ciphersComponent","filterDeleted","filterCipherType","filterCollection","clearGroupingFilters","showAddNew","clearFilters","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","editCipher","cipherAddEditModalRef","cloneCipher","replaceUrl","routes","pathMatch","titleId","redirectTo","AccessComponent","OptionsComponent","DomainRulesComponent","PremiumComponent","UserSubscriptionComponent","OrganizationsComponent","CreateOrganizationComponent","EmergencyAccessComponent","EmergencyAccessViewComponent","SponsoredFamiliesComponent","BreachReportComponent","OrganizationGuardService","OrganizationTypeGuardService","AccessImportExport","AccessReports","CreateNewCollections","EditAnyCollection","DeleteAnyCollection","EditAssignedCollections","DeleteAssignedCollections","AccessEventLogs","ManageGroups","ManageUsers","ManagePolicies","ManageUsersPassword","ManageOrganization","RouterModule","useHash","paramsInheritanceStrategy","registerLocaleData","DatePipe","ToastrModule","ReactiveFormsModule","ProvidersComponent","unavailable","sendText","downloadData","accessRequest","toggleText","keyArray","SendAccessRequest","sendAccess","ControlContainer","NgForm","addSend","editSend","sendAddEditModalRef","toDateTimeLocalString","filterStart","filterEnd","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_UpdatedTempPassword","User_MigratedKeyToKeyConnector","Cipher_Created","formatCipherId","getShortId","Cipher_Updated","Cipher_Deleted","Cipher_SoftDeleted","Cipher_Restored","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","formatCollectionId","Collection_Updated","Collection_Deleted","Group_Created","formatGroupId","Group_Updated","Group_Deleted","OrganizationUser_Invited","formatOrgUserId","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","OrganizationUser_UnlinkedSso","OrganizationUser_ResetPassword_Enroll","OrganizationUser_ResetPassword_Withdraw","OrganizationUser_AdminResetPassword","OrganizationUser_ResetSsoLink","OrganizationUser_FirstSsoLogin","Organization_Updated","Organization_PurgedVault","Organization_VaultAccessed","Organization_EnabledSso","Organization_DisabledSso","Organization_EnabledKeyConnector","Organization_DisabledKeyConnector","Policy_Updated","formatPolicyId","ProviderUser_Invited","formatProviderUserId","ProviderUser_Confirmed","ProviderUser_Updated","ProviderUser_Removed","ProviderOrganization_Created","formatProviderOrganizationId","ProviderOrganization_Added","ProviderOrganization_Removed","ProviderOrganization_VaultAccessed","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","innerHTML","pad","norm","abs","modalOpen","ManageSso","RouterService","activatedRoute","titleService","currentUrl","rawTitle","child","firstChild","snapshot","newTitle","setTitle","initFactory","eventLoggingService","getBaseUrl","htmlEl","documentElement","onDefaultSystemThemeChange","sysTheme","Light","Dark","ContainerService","APP_INITIALIZER","PolicyListService","language","HtmlStorageService","MemoryStorageService","WebPlatformUtilsService","BroadcasterMessagingService","ImportService","showChangePassword","showChangeKdf","showChangeEmail","deauthorizeSessions","DeauthorizeSessionsComponent","deauthModalRef","DeleteAccountComponent","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","AddCreditComponent","PayPal","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","BitPayInvoiceRequest","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","ElementRef","AdjustPaymentComponent","paymentComponent","createPaymentToken","paymentToken","taxInfoComponent","changeCountry","hideBank","changeMethod","PaymentComponent","AdjustStorageComponent","storageAdjustment","StorageRequest","storageGbAdjustment","paymentFailed","handleStripeCardPayment","adjustedStorageTotal","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","reset","ChangeKdfComponent","kdfOptions","rotateEncKey","rotateEncKeyClicked","updateKey","UpdateKeyRequest","updateEmergencyAccesses","updateAllResetPasswordKeys","emergencyAccess","allowedStatuses","RecoveryInitiated","RecoveryApproved","filteredAccesses","updateRequest","EmergencyAccessUpdateRequest","orgPlansComponent","TeamsAnnually","Teams","EnterpriseAnnually","Enterprise","toggleExcluded","globalDomain","customize","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAddEditComponent","onDeleted","View","emergencyAccessType","waitTimes","waitTime","EmergencyAccessInviteRequest","EmergencyAccessAttachmentsComponent","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","oldKeyBuffer","oldEncKey","EmergencyAccessPasswordRequest","EmergencyAddEditComponent","viewAttachments","cipherData","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","premiumRequired","contact","doConfirmation","removeGrantee","removeGrantor","requestAccess","approve","takeover","takeoverModalRef","EmergencyAccessConfirmRequest","LinkSsoComponent","ngAfterContentInit","localeOptions","themeOptions","disableIcons","startingLocale","startingTheme","valid","effectiveTheme","getEffectiveTheme","vaultTimeoutActionChanged","newValue","showFree","showCancel","ownedBusiness","premiumAccessAddon","additionalStorage","additionalSeats","productTypes","singleOrgPolicyBlock","discount","plans","changedOwnedBusiness","createOrganization","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","familyPlan","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","taxRate","total","paymentDesc","changedProduct","changedCountry","userHasBlockingSingleOrgPolicy","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","OrganizationUpgradeRequest","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","OrganizationCreateRequest","collectionName","tokenResult","includeTaxId","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","ProviderOrganizationCreateRequest","allowEnrollmentChanges","unlinkSso","toggleResetPasswordEnrollment","keyString","toastStringRef","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","showMethods","hidePaypal","hideCredit","routing_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSmoothing","invalid","StripeElementClasses","empty","Credit","head","removeChild","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","shape","tagline","createErr","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleCardPayment","paymentIntent","classes","placeholder","mount","premiumPrice","finalizePremium","paymentResponse","ProfileComponent","hidePasswordHint","UpdateProfileRequest","hasFamilySponsorshipAvailable","availableSponsorshipOrgs","activeSponsorshipOrgs","selectedSponsorshipOrgId","sponsorshipEmail","sponsoredEmail","friendlyName","resetForm","forceReload","allOrgs","anyActiveSponsorships","anyOrgsAvailable","moreThanOneOrgAvailable","SponsoringOrgRowComponent","sponsoringOrg","sponsorshipRemoved","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmail","resendEmailPromise","onCountryChanged","pristine","taxRates","localTaxRate","getTaxInfoRequest","hasChanged","TwoFactorAuthenticatorComponent","TwoFactorBaseComponent","qrScript","auth","authResponse","processResponse","buildRequestModel","QRious","element","twoFactorProviderType","hashedSecret","verificationType","enableFunction","ikey","skey","TwoFactorEmailComponent","sentEmail","TwoFactorRecoveryComponent","print","onafterprint","formatString","showPolicyWarning","evaluatePolicies","authenticatorModalRef","yubikeyModalRef","TwoFactorYubiKeyComponent","emailModalRef","webAuthnModalRef","TwoFactorWebAuthnComponent","recoveryModalRef","TwoFactorVerifyComponent","onAuthed","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","readKey","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","webAuthnListening","webAuthnError","listening","configured","disablePromise","existingKey","padRight","UpdateKeyComponent","makeRequest","UpdateLicenseComponent","updatePromise","showAdjustPayment","showAddCredit","transactionType","billing","verifyBank","VerifyBankRequest","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","addCredit","paymentSourceInApp","closeAddCredit","changePayment","closePayment","isCreditBalance","creditOrBalance","AppleInApp","GoogleInApp","NG_VALIDATORS","VerifyEmailComponent","checkedUsername","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","repromptCipher","checkAccess","accessPremium","exposedPasswordMap","exposedPasswordCiphers","exposedCount","setImportOptions","getFileContents","getFormatInstructionTitle","importOptions","fire","heightAuto","buttonsStyling","iconHtml","inputValue","inputAttributes","readonly","showConfirmButton","confirmButtonText","onOpen","popupEl","scrollTo","extract1PuxContent","readAsText","pre","JSZip","loadAsync","services","cipherDocs","load2fa","inactive2faCiphers","docs","serviceData","documentation","additionalDomain","historyModalRef","lengthChanged","minNumberChanged","minSpecialChanged","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","unsecuredCiphers","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","showRevisionDate","viewingPasswordHistory","cleanUp","totpUpdateCode","totpTick","totpInterval","toggleFavorite","launch","typeI18nKey","aType","confirmed","viewHistory","clearInterval","totpCode","half","totpCodeFormatted","intervalSeconds","totpSec","totpDash","totpLow","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","getSelectedIds","BulkDeleteComponent","bulkDeleteModalRef","permanent","cipherIds","bulkRestore","BulkRestoreComponent","bulkRestoreModalRef","onRestored","bulkShare","selectedCiphers","getSelected","BulkShareComponent","bulkShareModalRef","onShared","bulkMove","BulkMoveComponent","bulkMoveModalRef","onMoved","deleteCiphersAdmin","deleteCiphers","deleteRequest","nonShareableCount","shareableCiphers","checkedCollectionIds","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","pagedCiphers","userHasPremiumAccess","pagedCiphersCount","clone","displayTotpCopyButton","checkCipher","onSearchTextChanged","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","showProviders","organizationsComponent","filterFavorites","filterFolder","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","forChild","subscriber","arg","localStorage","getItem","sessionStorage","setItem","removeItem","filePath","localesResult","store","migrationStateFrom1To2","browserCache","prefersColorSchemeDark","matchMedia","chrome","Web","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","rel","click","blobData","blobOptions","fileNameLower","doDownload","endsWith","msSaveOrOpenBlob","msSaveBlob","createObjectURL","position","PublicKeyCredential","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","showCancelButton","cancelButtonText","clipboardData","setData","queryCommandSupported","copyEl","contains","execCommand","readFromClipboard","authenticateBiometric","getDefaultSystemTheme","addListener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}